MoleculeViewerApplet -> MoleculeViewerApplet:
    astex.MoleculeViewer moleculeViewer -> a
    boolean debug -> a
    int initStep -> a
    java.lang.Thread prepareThread -> a
    java.awt.Image splashImage -> a
    int splashWidth -> b
    int splashHeight -> c
    void init() -> init
    void reportProgress() -> a
    void run() -> run
    void update(java.awt.Graphics) -> update
    void paint(java.awt.Graphics) -> paint
    void initialiseApplet() -> b
    void destroy() -> destroy
    void finalize() -> finalize
    void stop() -> stop
    void start() -> start
    astex.DynamicArray getParameterList(java.lang.String) -> a
    void execute(java.lang.String) -> a
astex.Animate -> dw:
    java.util.Vector stages -> a
    astex.MoleculeViewer moleculeViewer -> a
    boolean interactive -> a
    void run() -> run
astex.AnimationObject -> aZ:
    double rockAngle -> a
    int sleepDuration -> a
    int animationMode -> b
    int stepCount -> c
    int step -> d
    java.lang.String animationCommand -> a
    astex.MoleculeViewer moleculeViewer -> a
    double sx -> b
    double sy -> c
    double sz -> d
    double sr -> e
    double scf -> f
    double scb -> g
    double fx -> h
    double fy -> i
    double fz -> j
    double fr -> k
    double fcf -> l
    double fcb -> m
    astex.Matrix startMatrix -> a
    astex.Matrix finishMatrix -> b
    double currentAngle -> n
    double deltaAngle -> o
    double lastRock -> p
    int lastMolecule -> e
    boolean interactive -> a
    java.lang.String processCommand(java.lang.String) -> a
astex.Apollo -> df:
    double[] rd -> a
    double[] rv -> b
    double[][] xd -> a
    double[] xt -> c
    double[] xt1 -> d
    double[][] xv -> b
    int[] ip1 -> a
    int[] ip2 -> b
    boolean tangentSphere(double[][],double[],double[]) -> a
astex.Arguments -> p:
    java.util.Properties properties -> a
    java.lang.String addDash(java.lang.String) -> a
    boolean defined(java.lang.String) -> a
    double getDouble(java.lang.String,double) -> a
    int getInteger(java.lang.String,int) -> a
    java.lang.String getString(java.lang.String,java.lang.String) -> a
    int getColor(java.lang.String,int) -> b
    boolean getBoolean(java.lang.String,boolean) -> a
    java.lang.Object propertyGet(java.lang.String) -> a
    void loadConfigurationFile(java.lang.String) -> a
astex.AstexLogo -> aK:
    int[] pixels -> a
astex.Atom -> bR:
    int Undefined -> q
    int attributes -> a
    float radius -> a
    float ballRadius -> b
    int Solvent -> r
    int Labelled -> s
    int Selected -> t
    int Hetero -> u
    int TemporarilySelected -> v
    int Displayed -> b
    int Wide -> w
    int VDWSphere -> c
    int Surface -> d
    int SurfaceContext -> e
    int Property -> f
    int BallAndStick -> g
    int Cylinder -> h
    int CustomLabelled -> x
    int DisplayedMask -> y
    int ModellingActive -> i
    int ModellingEnvironment -> j
    int ModellingXray -> k
    int ModellingFixed -> l
    int NameLeftJustified -> m
    astex.ModellingData modellingData -> a
    int selectedColor -> z
    astex.DynamicArray bonds -> a
    astex.Bond firstBond -> a
    astex.Bond secondBond -> b
    astex.Bond thirdBond -> c
    int xs -> n
    int ys -> o
    int zs -> p
    char insertionCode -> a
    int color -> A
    int transparency -> B
    java.lang.String atomType -> a
    astex.DynamicArray atomCache -> b
    int atomsCreated -> C
    int atomsCached -> D
    int element -> E
    java.lang.String label -> b
    java.lang.String customLabel -> c
    int id -> F
    int charge -> G
    float bFactor -> c
    float occupancy -> d
    float partialCharge -> e
    astex.Residue parentResidue -> a
    java.lang.String defaultLongFormat -> d
    void initialise() -> a
    void setAtomType(java.lang.String) -> a
    java.lang.String getAtomType() -> b
    void setTransparency(int) -> a
    int getTransparency() -> a
    void setInsertionCode(char) -> a
    char getInsertionCode() -> a
    astex.Atom create() -> a
    void release() -> e
    void setBFactor(double) -> f
    double getBFactor() -> e
    void setOccupancy(double) -> g
    double getOccupancy() -> f
    float getPartialCharge() -> a
    void setPartialCharge(double) -> h
    double getAttribute(int) -> b
    void setId(int) -> b
    int getId() -> b
    void setElement(int) -> c
    int getElement() -> c
    java.lang.String getAtomSymbol() -> c
    void setAtomLabel(java.lang.String) -> b
    java.lang.String getAtomLabel() -> d
    java.lang.String generateLabel(java.lang.String) -> a
    int getCharge() -> d
    void setCharge(int) -> d
    void setColor(int) -> e
    int getColor() -> e
    int getSelectedColor() -> f
    void resetColor() -> f
    astex.Molecule getMolecule() -> a
    void setParent(astex.Residue) -> a
    astex.Residue getResidue() -> a
    void addBond(astex.Bond) -> a
    astex.Bond getBond(int) -> a
    astex.Atom getBondedAtom(int) -> a
    int getBondCount() -> g
    astex.Bond getBond(astex.Atom) -> a
    astex.Atom getBondedAtom(java.lang.String) -> a
    boolean hasBond(astex.Atom) -> a
    boolean hasExplicitBond() -> a
    boolean connected13(astex.Atom) -> b
    boolean connected14(astex.Atom) -> c
    boolean connected121314(astex.Atom) -> d
    double getBondingRadius() -> g
    double getVDWRadius() -> h
    double getBiggestDisplayedRadius() -> i
    void setVDWRadius(double) -> i
    void setBallRadius(double) -> j
    double getBallRadius() -> j
    void transformToScreen(astex.Matrix) -> b
    boolean hasAttributes() -> b
    void setOrClearAttribute(int,boolean) -> a
    void setSolvent(boolean) -> a
    boolean isSolvent() -> c
    void setCustomLabel(java.lang.String) -> c
    java.lang.String getCustomLabel() -> e
    boolean isLabelled() -> d
    void setLabelled(boolean) -> b
    void setSelected(boolean) -> c
    boolean isSelected() -> e
    void setHeteroAtom(boolean) -> d
    boolean isHeteroAtom() -> f
    void setTemporarilySelected(boolean) -> e
    boolean isTemporarilySelected() -> g
    boolean isWide() -> h
    void setDisplayed(boolean) -> f
    boolean isSimpleDisplayed() -> i
    boolean isDisplayed() -> j
    java.lang.String selectStatement() -> a
    int getHybridisation() -> h
    java.lang.String toString() -> toString
    void removeBond(astex.Bond) -> b
    void edit(java.lang.String,java.lang.String) -> a
astex.AtomIterator -> q:
    astex.MoleculeRenderer renderer -> a
    int moleculeCount -> a
    astex.Molecule currentMolecule -> a
    int currentMoleculeIndex -> b
    int currentAtomIndex -> c
    int currentMoleculeAtomCount -> d
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
astex.AtomicElement -> ck:
    java.lang.String symbol -> a
    int atomicNumber -> a
    int[] valences -> a
astex.Bond -> ce:
    astex.Atom firstAtom -> a
    astex.Atom secondAtom -> b
    int bondOrder -> a
    byte[] radii -> a
    int attributes -> b
    int wideBond -> c
    int ExplicitBond -> d
    java.lang.Object set(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object,java.lang.Object) -> b
    boolean isExplicitBond() -> a
    void setExplicitBond(boolean) -> a
    int getBondWidth() -> a
    void setBondWidth(int) -> a
    double getStickWidth() -> a
    void setStickWidth(double) -> a
    double getCylinderWidth() -> b
    void setCylinderWidth(double) -> b
    void setWideBond(boolean) -> b
    void setBondOrder(int) -> b
    int getBondOrder() -> b
    astex.Bond create() -> a
    void setFirstAtom(astex.Atom) -> a
    void setSecondAtom(astex.Atom) -> b
    astex.Atom getFirstAtom() -> a
    astex.Atom getSecondAtom() -> b
    astex.Atom getAtom(int) -> a
    astex.Atom getOtherAtom(astex.Atom) -> a
    double getBondLength() -> c
    java.lang.String toString() -> toString
    void delete() -> a
astex.CRC32 -> ay:
    int[] CRCTable -> a
    int crc -> a
    void buildCRCTable() -> a
    int crc32(int[],int,int,int) -> a
astex.Chain -> do:
    astex.DynamicArray residues -> a
    int undefinedChainNumber -> a
    java.lang.String undefinedChainName -> a
    astex.Molecule parent -> a
    java.lang.String name -> b
    astex.Residue currentResidue -> a
    astex.Chain create() -> a
    void setParent(astex.Molecule) -> a
    astex.Molecule getParent() -> a
    void setName(java.lang.String) -> a
    java.lang.String getName() -> b
    int getResidueCount() -> a
    astex.Residue getResidue(int) -> a
    astex.Residue addResidue() -> a
    void removeResidue(astex.Residue) -> a
    astex.Residue getCurrentResidue() -> b
    java.lang.String selectStatement() -> a
astex.Color32 -> X:
    double[] rgbtmp -> a
    int white -> a
    int black -> b
    int blue -> c
    int cyan -> d
    int green -> e
    int yellow -> f
    int brown -> g
    int orange -> h
    int red -> i
    int magenta -> j
    int thistle -> k
    int grey -> l
    int gray -> m
    int rwb0 -> n
    int rwb1 -> o
    int rwb2 -> p
    int rwb3 -> q
    int rwb4 -> r
    int rwb5 -> s
    int rwb6 -> t
    int rwb7 -> u
    int undefinedColor -> v
    java.util.Hashtable colorHash -> a
    java.lang.String hexDigits -> a
    int getComponent(int,int) -> a
    int getRed(int) -> a
    int getGreen(int) -> b
    int getBlue(int) -> c
    int getIntensity(int) -> d
    int getGrayScale(int) -> e
    int getClampColor(int,int,int) -> a
    int clamp(int) -> f
    int scale(int,int) -> b
    int add(int,int) -> c
    int multiply(int,int) -> d
    int blend(int,int,int) -> b
    int blend(int,int,double) -> a
    void hsv2rgb(double[],double[]) -> a
    int pack(int,int,int) -> c
    int hsv2packed(double[]) -> a
    java.lang.String format(int) -> a
    java.lang.String formatNoQuotes(int) -> b
    int getColorFromName(java.lang.String) -> a
    java.awt.Color getAWTColor(int) -> a
    void ensureColorHashDefined() -> a
astex.ColorButton -> cM:
    java.awt.Frame colorChooserFrame -> a
    java.awt.Dialog colorChooserDialog -> a
    astex.ColorChooser colorChooser -> a
    boolean cancelled -> a
    java.lang.String colorString -> a
astex.ColorButton$1 -> bs:
    astex.ColorButton this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
astex.ColorChooser -> K:
    java.awt.Dialog dialog -> a
    astex.ColorSpace cs -> a
    jclass.bwt.JCSpinBox red -> a
    jclass.bwt.JCSpinBox green -> b
    jclass.bwt.JCSpinBox blue -> c
    java.awt.TextField hexText -> a
    java.awt.Panel colorSample -> a
    jclass.bwt.JCButton ok -> a
    jclass.bwt.JCButton cancel -> b
    boolean accept -> a
    int rgb -> a
    void updateColor(java.awt.Color,java.lang.Object) -> a
    void spinBoxChangeEnd(jclass.bwt.JCSpinBoxEvent) -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void actionPerformed(jclass.bwt.JCActionEvent) -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
astex.ColorSpace -> bW:
    int width -> a
    int height -> b
    int[] pixels -> a
    java.awt.Image awtImage -> a
    java.awt.image.MemoryImageSource memoryImageSource -> a
    double[] hsv -> a
    double[] rgb -> b
    int[] irgb -> b
    void paint(java.awt.Graphics) -> paint
    int getRGB(int,int) -> a
    java.awt.Dimension getPreferredSize() -> getPreferredSize
astex.ContourScrollbar -> o:
    java.awt.Dimension getPreferredSize() -> getPreferredSize
astex.Distance -> aL:
    astex.DynamicArray group0 -> a
    astex.DynamicArray group1 -> b
    astex.Distance createDistanceMonitor(astex.Atom,astex.Atom) -> a
    astex.Point3d getCenter0() -> a
    astex.Point3d getCenter1() -> b
    void getCenter(astex.Point3d,astex.DynamicArray) -> a
astex.DoubleArray -> bx:
    double[] objects -> a
    int objectCount -> a
    int capacityIncrement -> b
    int add(double) -> a
    void removeAllElements() -> a
astex.DynamicArray -> G:
    java.lang.Object[] objects -> a
    int objectCount -> a
    int capacityIncrement -> b
    int add(java.lang.Object) -> a
    void remove(java.lang.Object) -> a
    void removeElement(int) -> a
    void removeAllElements() -> a
    java.lang.Object getReverse(int) -> a
    boolean contains(java.lang.Object) -> a
astex.EnergyTerm -> bX:
    astex.DynamicArray affectedAtoms -> a
astex.FILE -> bO:
    byte[] buffer -> a
    int charactersInBuffer -> b
    java.lang.Exception exception -> a
    java.io.InputStream inputStream -> a
    int nextCharacter -> c
    int EOF -> a
    boolean fieldsDetermined -> a
    int fieldCount -> d
    int MaxFields -> e
    int[] fieldStartPosition -> a
    int[] fieldLength -> b
    java.net.URL documentBase -> a
    java.net.URL codeBase -> b
    boolean debug -> b
    boolean tryFiles -> c
    int lineBufferSize -> f
    byte[] lineBuffer -> b
    int lineLength -> g
    astex.FILE out -> a
    astex.FILE spr -> b
    java.io.OutputStream outputStream -> a
    byte eol0 -> a
    byte eol1 -> b
    int eolLength -> h
    int width -> i
    int precision -> j
    byte[] pre -> c
    byte[] post -> d
    int preCount -> k
    int postCount -> l
    boolean leading_zeroes -> d
    boolean show_plus -> e
    boolean alternate -> f
    boolean show_space -> g
    boolean left_align -> h
    char fmt -> a
    byte[] tb -> e
    int ntb -> m
    int ntbStart -> n
    int ntbE -> o
    boolean autoFlush -> i
    byte[] baseo -> f
    byte[] basex -> g
    byte[] baseX -> h
    byte[] based -> i
    java.lang.String prevFormat -> a
    java.lang.String sprint(java.lang.String,double) -> a
    java.lang.String sprint(java.lang.String,long) -> a
    java.lang.String createString() -> b
    void print(char) -> a
    void print(java.lang.String) -> a
    void println(java.lang.String) -> b
    void print(java.lang.String,java.lang.String) -> a
    void print(java.lang.String,char) -> a
    void print(java.lang.String,long) -> a
    void print(java.lang.String,double) -> a
    void format(long) -> a
    void format(double) -> a
    void copyAll() -> a
    void copyNumber() -> b
    void preFormat() -> c
    void postFormat() -> d
    void pad() -> e
    int repeat(byte,int,byte[],int) -> a
    void copyString(java.lang.String,int) -> a
    void fixedFormat(double) -> b
    void expFormat(double) -> c
    void convert(long,byte[],long) -> a
    void sign(int) -> a
    void parseFormat(java.lang.String) -> c
    astex.FILE write(java.lang.String) -> a
    void flushIfFull(int) -> b
    void flush() -> f
    void finalize() -> finalize
    void setTryFiles(boolean) -> a
    boolean getTryFiles() -> a
    void setDebug(boolean) -> b
    void setDocumentBase(java.net.URL) -> a
    void setCodeBase(java.net.URL) -> b
    java.lang.Exception getException() -> a
    java.io.InputStream getInputStream() -> a
    int read() -> read
    int skip(int) -> a
    void ungetc$13462e() -> g
    int getLineLength() -> a
    boolean nextLine() -> b
    java.lang.String getCurrentLineAsString() -> a
    char getChar(int) -> a
    boolean currentLineContains(java.lang.String,int) -> a
    java.lang.String getSubstring(int,int) -> a
    int readInteger(int,int) -> a
    double readDouble(int,int) -> a
    void determineFields() -> h
    int getFieldCount() -> b
    int getFieldStart(int) -> b
    int getFieldLength(int) -> c
    java.lang.String getField(int) -> a
    byte getFieldChar(int,int) -> a
    java.lang.String getRelativePath(java.lang.String) -> a
    astex.FILE open(java.lang.String) -> b
    java.io.InputStream openResource(java.lang.String) -> a
    boolean stringIsURL(java.lang.String) -> a
    astex.FILE open(java.io.File) -> a
    astex.FILE openFile(java.lang.String) -> d
    astex.FILE openURL(java.lang.String) -> c
    astex.FILE open(java.net.URL) -> a
    void close() -> close
    java.util.Properties loadProperties(java.lang.String) -> a
    int getInteger(int) -> d
    float getFloat(int) -> a
    double getDouble(int) -> a
    int readIntegerFromField(int) -> e
    double readDoubleFromField(int) -> b
    int readInteger(java.lang.String) -> a
    double readDouble(java.lang.String) -> a
    java.lang.String[] split(java.lang.String) -> a
    java.lang.String[] split(java.lang.String,java.lang.String) -> a
astex.Fit -> cI:
    double[][] m -> a
    double[] d -> a
    double[] e -> b
    astex.Matrix rotation -> a
    boolean debug -> a
    double fit(double[],double[],double[],double[],double[],double[],int,astex.Matrix) -> a
    double pythag(double,double) -> a
astex.FloatArray -> bd:
    float[] objects -> a
    int objectCount -> a
    int capacityIncrement -> b
    int add(float) -> a
    void removeAllElements() -> a
astex.Format -> J:
    int width -> b
    int precision -> a
    java.lang.String pre -> a
    java.lang.String post -> b
    boolean leading_zeroes -> a
    boolean show_plus -> b
    boolean alternate -> c
    boolean show_space -> d
    boolean left_align -> e
    char fmt -> a
    void print(java.io.PrintStream,java.lang.String,double) -> a
    java.lang.String format(double) -> a
    java.lang.String format(long) -> a
    java.lang.String repeat(char,int) -> a
    java.lang.String convert(long,int,int,java.lang.String) -> a
    java.lang.String pad(java.lang.String) -> a
    java.lang.String sign(int,java.lang.String) -> a
    java.lang.String fixed_format(double) -> b
    java.lang.String exp_format(double) -> c
astex.Geometry -> Y:
    double[] kU -> a
    double[] kV -> b
    double[] kW -> c
    double[] kD -> d
    double[] kDiff -> e
    double[] kP -> f
    double[] capDir -> g
    double[] nOrigin -> h
    double[] cap0 -> i
    double[] cap1 -> j
    double[] fTmpStore -> k
    double[] afT -> l
    double fWLength -> a
    double fDLength -> b
    double fInvDLength -> c
    double capRadius -> d
    double fRadiusSqr -> e
    void rayCapsuleIntInit(double[],double[],double,double) -> a
    int rayCapsuleInt(double[],double[],double[],double[],boolean) -> a
    double normalise(double[]) -> a
astex.GraphicalObject -> aE:
astex.ImageButton -> dn:
    java.awt.Image image -> a
    java.lang.String command -> a
    boolean selected -> a
    java.awt.Dimension size -> a
    int shadowWidth -> a
    boolean armed -> b
    java.util.Vector actionListeners -> a
    void addActionListener(java.awt.event.ActionListener) -> a
    boolean handleEvent(java.awt.Event) -> handleEvent
    java.awt.Dimension minimumSize() -> minimumSize
    void paint(java.awt.Graphics) -> paint
    java.awt.Dimension preferredSize() -> preferredSize
    void update(java.awt.Graphics) -> update
astex.ImageIO -> bE:
    int imageNumber -> a
    byte[] bfType -> a
    int bfSize -> b
    int bfReserved1 -> c
    int bfReserved2 -> d
    int bfOffBits -> e
    int biSize -> f
    int biWidth -> g
    int biHeight -> h
    int biPlanes -> i
    int biBitCount -> j
    int biCompression -> k
    int biSizeImage -> l
    int biXPelsPerMeter -> m
    int biYPelsPerMeter -> n
    int biClrUsed -> o
    int biClrImportant -> p
    boolean write(java.lang.String,int[],int,int,boolean) -> a
    void writeBitmap(java.io.OutputStream,int[],int,int) -> a
    void writeBitmapFileHeader(java.io.OutputStream,int,int) -> a
    void intToWord(java.io.OutputStream,int) -> a
    void intToDWord(java.io.OutputStream,int) -> b
astex.IntArray -> aY:
    int[] objects -> a
    int objectCount -> a
    int capacityIncrement -> b
    void setCapacity(int) -> a
    int add(int) -> a
    void removeAllElements() -> a
astex.Lattice -> l:
    double maxDistance -> a
    astex.IntArray[] hashTable -> a
    astex.IntArray celli -> a
    astex.IntArray cellj -> b
    astex.IntArray cellk -> c
    astex.IntArray head -> d
    astex.IntArray list -> e
    astex.IntArray ids -> f
    void add(int,double,double,double) -> a
    int findcell(int,int,int) -> a
    int getPossibleNeighbours(int,double,double,double,astex.IntArray,boolean) -> a
    int HASH(int,int,int) -> b
    int BOX(double) -> a
astex.Layout -> r:
    void fill(java.awt.Container,java.awt.Component,int,int) -> a
    void fill(java.awt.Container,java.awt.Component,int,int,int) -> a
    void fill(java.awt.Container,java.awt.Component,int,int,int,int) -> a
    void fill(java.awt.Container,java.awt.Component,int,int,int,int,int) -> a
    void nofill(java.awt.Container,java.awt.Component,int,int) -> b
    void constrain(java.awt.Container,java.awt.Component,int,int,int,int,int,int,double,double) -> a
astex.Light -> u:
    double[] pos -> a
    int diffuse -> a
    int specular -> b
    double power -> a
    boolean on -> a
    void normalisePos() -> a
astex.LightCanvas -> bD:
    astex.MoleculeViewer moleculeViewer -> a
    astex.MoleculeRenderer moleculeRenderer -> a
    astex.Renderer renderer -> a
    int width -> a
    int height -> b
    int w2 -> c
    int h2 -> d
    int activeLight -> e
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void update(java.awt.Graphics) -> update
    int l2cx(double) -> a
    int l2cy(double) -> b
    void paint(java.awt.Graphics) -> paint
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
astex.Log -> dE:
    java.lang.String[] logStrings -> a
    java.util.Hashtable methodLevels -> a
    int level -> a
    boolean fullClass -> a
    void info(java.lang.String,double) -> a
    void warn(java.lang.String,double) -> b
    void debug(java.lang.String,long) -> a
    void info(java.lang.String,long) -> b
    void warn(java.lang.String,long) -> c
    void error(java.lang.String,long) -> d
    void debug(java.lang.String) -> a
    void info(java.lang.String) -> b
    void warn(java.lang.String) -> c
    void error(java.lang.String) -> d
    void check(boolean,java.lang.String) -> a
    void log(java.lang.String,java.lang.String) -> a
    int getLoggingLevel(int) -> a
    java.lang.String getMethodName(int) -> a
    void initialise() -> a
    int string2level(java.lang.String) -> a
astex.Map -> aJ:
    boolean volumeRender -> a
    int volumeColor -> a
    double volumeMin -> a
    double volumeMax -> b
    int MaximumContourLevels -> b
    double[] contourLevels -> b
    int[] contourColors -> i
    int[] contourStyle -> j
    boolean[] contourDisplayed -> a
    boolean littleEndian -> c
    int[] grid -> a
    int mode -> c
    astex.Point3d center -> c
    java.lang.String filename -> a
    java.lang.String name -> b
    astex.FILE file -> a
    boolean needsReadingFlag -> d
    boolean headerInitialised -> e
    int mapType -> d
    int[] centerGrid -> b
    int[] minimumGrid -> c
    int[] maximumGrid -> d
    int[] nu -> e
    int[] nv -> f
    int[] axis -> g
    int[] ihdr3 -> k
    int[] ihdr4 -> l
    int[] ihdr5 -> m
    char[] ihdr6 -> a
    double[] cell -> c
    double[] rhdr2 -> d
    double[] rhdr3 -> e
    double rms -> c
    float[] data -> a
    astex.Point3d origin -> a
    astex.Point3d spacing -> b
    int[] ngrid -> h
    boolean initialiseContours -> b
    int[] oheader -> n
    byte[][][] odata -> a
    int[] extent -> o
    double prod -> d
    double plus -> e
    double[] xxx -> f
    double[] swapped -> g
    astex.Map create() -> a
    astex.Map createSimpleMap() -> b
    double getSigma() -> a
    boolean needsReading() -> a
    void setNeedsReading(boolean) -> a
    int getMapType() -> a
    void read() -> a
    int convertBigToLittle(int) -> c
    void readAstexHeader() -> d
    void readInsightHeader() -> e
    void readOHeader() -> f
    void readCCP4Header() -> g
    void printHeader(java.io.PrintStream) -> a
    void setCenter(astex.Point3d) -> a
    void setName(java.lang.String) -> a
    java.lang.String getName() -> a
    void setFile(java.lang.String) -> b
    java.lang.String getFile() -> b
    void ensureMapCapacity(int) -> b
    void readRegion() -> b
    void relativeGridToCartesian(double,double,double,astex.Point3d) -> a
    void getMapBoxDimensions(int[]) -> a
    float[] getDataArray() -> a
    void absoluteGridToCartesian(double,double,double,astex.Point3d) -> b
    int readIntegerArray(astex.FILE,int[]) -> a
    int readDoubleArray(astex.FILE,double[]) -> a
    int readInteger(astex.FILE) -> a
    float readFloat(astex.FILE) -> a
    void setContourLevel(int,double) -> a
    void setContourColor(int,int) -> a
    void setContourStyle(int,int) -> b
    void setContourDisplayed(int,boolean) -> a
    double getContourLevel(int) -> a
    int getContourColor(int) -> a
    int getContourStyle(int) -> b
    boolean getContourDisplayed(int) -> a
    boolean hasContoursDisplayed() -> b
astex.March -> cN:
    int nLayerEdges -> a
    int[] layerEdges -> a
    int iDim -> b
    int jDim -> c
    int kDim -> d
    int iDim1 -> e
    int jDim1 -> f
    int kDim1 -> g
    int iDim2 -> h
    int jDim2 -> i
    int kDim2 -> j
    int ijDim -> k
    boolean debug -> b
    astex.Tmesh tmesh -> a
    int nedge01 -> l
    int ngrid01 -> m
    int count -> n
    boolean generateTriangles -> a
    float[] cell -> a
    int[] cellVerts -> b
    int[] from -> c
    int[] to -> d
    float[] normFrom -> b
    float[] normTo -> c
    float[] v -> d
    float[] n -> e
    char[] edgeTable -> a
    byte[][] triTable -> a
    astex.Tmesh surface(float[],int,int,int,float,boolean,astex.Tmesh) -> a
    void marchLayer$6b3903b2(float[],int,int[],float) -> a
    void contourFace(int,float,int,int,int,int,int,int,int,int) -> a
    int getOffset(int,int,int) -> a
    int getEdgeOffset(int,int,int) -> b
astex.Matrix -> j:
    double x00 -> a
    double x01 -> b
    double x02 -> c
    double x03 -> d
    double x10 -> e
    double x11 -> f
    double x12 -> g
    double x13 -> h
    double x20 -> i
    double x21 -> j
    double x22 -> k
    double x23 -> l
    double x30 -> m
    double x31 -> n
    double x32 -> o
    double x33 -> p
    astex.Format f6 -> a
    void setIdentity() -> a
    void scale(double,double,double) -> a
    void translate(double,double,double) -> b
    void rotateXdegrees(double) -> a
    void rotateYdegrees(double) -> b
    void rotateZdegrees(double) -> c
    void transform(astex.Matrix) -> a
    void transform(astex.Point3d) -> a
    void transformByInverse(astex.Point3d) -> b
    void rotateAroundVector(double,double,double,double) -> a
    void print(java.lang.String) -> a
    java.lang.String returnScript() -> a
    boolean equals(astex.Matrix) -> a
    boolean isIdentity(double) -> a
    void copy(astex.Matrix) -> b
    void transpose() -> b
    void invert(astex.Matrix,astex.Matrix) -> a
    double det3x3(double,double,double,double,double,double,double,double,double) -> a
    double det2x2(double,double,double,double) -> a
    astex.Matrix interpolate(astex.Matrix,astex.Matrix,double) -> a
    void toQuaternion(double[]) -> a
    void fromQuaternion(double,double,double,double) -> b
astex.ModellingData -> bg:
    double energy -> a
astex.Molecule -> bq:
    astex.DynamicArray atoms -> a
    astex.DynamicArray bonds -> b
    astex.DynamicArray angles -> c
    astex.DynamicArray impropers -> d
    astex.DynamicArray rings -> e
    astex.DynamicArray chains -> f
    java.lang.String moleculeName -> a
    java.lang.String filename -> b
    java.lang.String type -> c
    astex.Point3d center -> a
    double radius -> a
    astex.Symmetry symmetry -> a
    int flags -> d
    int RingsAssigned -> e
    int residueCount -> f
    int Normal -> a
    int Trace -> b
    int TraceAlways -> c
    int displayStyle -> g
    int displayed -> h
    int moleculeType -> i
    int centralAtomCount -> j
    int startAtom -> k
    astex.Chain currentChain -> a
    boolean debug -> a
    int[] cell1 -> a
    int[] cell2 -> b
    int nc1 -> l
    int nc2 -> m
    double[] bondingRadii -> a
    int[] list -> c
    int[] head -> d
    java.lang.Object[] atomArray -> a
    int[][] offsets -> a
    void setCentralAtomCount(int) -> a
    int getCentralAtomCount() -> a
    int getMoleculeType() -> b
    void setMoleculeType(int) -> b
    void initialise() -> a
    java.lang.String toString() -> toString
    void setDisplayStyle(int) -> c
    int getDisplayStyle() -> c
    boolean getDisplayStyle(int) -> a
    void setDisplayed(int) -> d
    boolean getDisplayed() -> a
    int getAtomCount() -> d
    astex.Atom getAtom(int) -> a
    astex.Atom getAtomWithId(int) -> b
    void assignAtomNumbers() -> b
    boolean isSymmetryMolecule() -> b
    int getBondCount() -> e
    astex.Bond getBond(int) -> a
    void ensureRingsAssigned() -> e
    astex.Ring getRing(int) -> a
    int getRingCount() -> f
    int getChainCount() -> g
    astex.Chain getChain(int) -> a
    astex.Chain getCurrentChain() -> b
    int getResidueCount() -> h
    astex.Chain addChain() -> a
    astex.Residue addResidue() -> a
    astex.Atom addAtom() -> a
    astex.Ring addRing() -> a
    astex.Bond addBond(astex.Atom,astex.Atom,int) -> a
    astex.Bond addBond(astex.Atom,astex.Atom,int,boolean) -> a
    astex.Bond addBond(int,int,int) -> a
    astex.Bond addBondFromIds(int,int,int) -> b
    void removeAtom(astex.Atom) -> a
    void removeBond(astex.Bond) -> a
    int cellIndex$6046c8c8(int,int,int,int,int) -> a
    void connect2() -> c
    int getCellContents(int,int[]) -> a
    void connectTwoCells(int) -> e
    void connectCell(int) -> f
    void connect() -> d
    void propagateRingSearch(int,int,astex.Atom,astex.Atom[],astex.Bond[]) -> a
    astex.Ring getBestRingContainingBond(astex.Bond) -> a
    void setName(java.lang.String) -> a
    java.lang.String getName() -> b
    void setFilename(java.lang.String) -> b
    java.lang.String getFilename() -> c
    void setType(java.lang.String) -> c
    java.lang.String getType() -> d
    astex.Point3d getCenter() -> a
    double getRadius() -> a
    void ensureSymmetryAllocated() -> f
    void setUnitCell(double[]) -> a
    astex.Symmetry getSymmetry() -> a
    void setSymmetry(astex.Symmetry) -> a
    void setSpaceGroupName(java.lang.String) -> d
    java.lang.String selectStatement() -> a
    java.lang.Object set(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object,java.lang.Object) -> b
astex.MoleculeIO -> cJ:
    int lastResidueNumber -> a
    char lastInsertionCode -> a
    char lastChainId -> b
    char lastResidueA -> c
    char lastResidueB -> d
    char lastResidueC -> e
    java.lang.String getTypeFromExtension(java.lang.String) -> a
    astex.Molecule read(java.lang.String) -> a
    void readBondBlock(astex.FILE,int,astex.Molecule,boolean) -> a
    astex.Molecule readMol2(astex.FILE) -> b
    astex.Molecule readTmesh(astex.FILE) -> c
    astex.Molecule readXyzr(astex.FILE) -> d
    astex.Molecule readSimple(astex.FILE) -> e
    astex.Molecule readMDLMol(astex.FILE) -> a
    void initialiseReader() -> a
    astex.Molecule readPDB(astex.FILE) -> f
    void readUnitCell(astex.Molecule,astex.FILE) -> a
    void write(astex.Molecule,astex.FILE,java.lang.String) -> a
    void writeMol2(astex.Molecule,astex.FILE) -> b
astex.MoleculeRenderer -> cp:
    astex.Renderer renderer -> a
    astex.MoleculeViewer moleculeViewer -> a
    astex.DynamicArray molecules -> a
    astex.DynamicArray maps -> b
    astex.DynamicArray selectedAtoms -> c
    astex.DynamicArray bumpAtoms -> d
    astex.DynamicArray distances -> e
    astex.DynamicArray torsions -> f
    astex.DynamicArray hbonds -> g
    astex.DynamicArray moleculeRendererListeners -> h
    java.util.Hashtable groups -> a
    astex.Symmetry symmetry -> a
    double mapRadius -> a
    java.lang.String mapRadiusProperty -> a
    double symmetryRadius -> b
    java.lang.String symmetryRadiusProperty -> b
    double displayRadius -> c
    double minimumClipDistance -> d
    java.lang.String displayRadiusProperty -> c
    java.lang.String contourLevelsProperty -> d
    boolean displaySymmetry -> d
    boolean displayBumps -> e
    boolean bumpInSameMolecule -> f
    boolean displayDistances -> g
    boolean displayMaps -> h
    boolean displaySolvent -> i
    int NORMAL_PICK -> a
    int DISTANCE_PICK -> b
    int ANGLE_PICK -> c
    int TORSION_PICK -> d
    int pickMode -> e
    boolean allowFastDraw -> a
    boolean fastDraw -> j
    boolean selectCount -> k
    boolean debug -> l
    int contourSize -> f
    astex.DynamicArray pickedAtoms -> i
    java.lang.String moleculeRendererProperties -> e
    java.util.Properties properties -> a
    java.lang.String defaultStatusLabelFormat -> f
    boolean displayAtomLabel -> m
    astex.DynamicArray angles -> j
    astex.DynamicArray selectionStack -> k
    int MaximumContourLevels -> g
    int contourLevelCount -> h
    double[] contourLevels -> a
    int[] contourColors -> a
    int[] contourStyles -> b
    boolean[] contourDisplayed -> a
    astex.Atom lastAtom -> a
    int clips -> i
    int lastAtomClips -> j
    int lastAtomBondedClips -> k
    boolean shadows -> b
    boolean dirty -> c
    int[] renderPasses -> c
    int[] splatKernel -> d
    double[] s -> b
    double crossLength -> e
    astex.DynamicArray sphereAtoms -> l
    astex.Molecule currentMolecule -> a
    astex.Point3d ta01 -> a
    astex.Point3d ta12 -> b
    astex.Point3d ta23 -> c
    astex.Point3d n012 -> d
    astex.Point3d n123 -> e
    astex.Point3d p01 -> f
    astex.Point3d p23 -> g
    astex.Point3d m12 -> h
    astex.Point3d n -> i
    astex.Point3d last -> j
    astex.Point3d arc -> k
    astex.Point3d dla -> l
    astex.Point3d dlb -> m
    astex.Format angleFormat -> a
    astex.generic.Generic dummyGeneric -> a
    astex.Format distanceFormat -> b
    astex.Atom dummyAtom -> b
    double boxSize -> f
    java.lang.String defaultShortFormat -> g
    double doubleBondOffset -> g
    double doubleBondRadiusScale -> h
    astex.Atom dummyAtom1 -> c
    astex.Atom dummyAtom2 -> d
    double aromaticBondDotGap -> i
    double bondLineRadius -> j
    int[] chainColors -> e
    int[] predefinedColors -> f
    double[] hsvtmp -> c
    int slideNumber -> l
    java.lang.String slideShow -> h
    java.lang.StringBuffer commandLog -> a
    astex.parser.parser[] parserStack -> a
    astex.parser.Yylex[] lexerStack -> a
    int parserDepth -> m
    java.lang.String lastScriptFile -> i
    java.lang.Class class$astex$MoleculeViewer -> a
    java.lang.Class class$astex$MoleculeRenderer -> b
    java.lang.Class class$astex$Arguments -> c
    void repaint() -> a
    void setContourSize(int) -> a
    void setPickMode(int) -> b
    void setSelectCount(boolean) -> a
    boolean getSelectCount() -> a
    void handleDeleteCommand(astex.DynamicArray) -> a
    void handleEditCommand(java.lang.String,java.lang.String,astex.DynamicArray) -> a
    void handlePick$6db11047() -> b
    void handleMapCommand(java.lang.String,astex.Arguments) -> a
    void handleUserCommand(java.lang.String,astex.Arguments) -> b
    void handleWriteCommand(astex.Arguments) -> a
    java.lang.String writeMoleculeToUrl$b35c9a(astex.Molecule,java.lang.String,java.lang.String,java.lang.String) -> a
    void handleDistanceCommand(astex.Arguments) -> b
    void deleteDistances(java.lang.String) -> g
    void configureDistance(astex.Distance,astex.Arguments) -> a
    void handleHbondCommand(astex.Arguments) -> c
    void deleteHbonds$28db82d5(astex.DynamicArray) -> h
    double hbondEnergy(astex.Atom,astex.Point3d,astex.Atom,astex.Atom,double) -> a
    void handleTextureCommand(astex.Arguments) -> d
    void handleLightCommand(int,astex.Arguments) -> a
    void handleObjectCommand(java.lang.String,astex.Arguments) -> c
    void mapAtomColors(astex.Tmesh,astex.DynamicArray,int,double,double) -> a
    void setStatusAtom(astex.Atom) -> a
    void setRadius(double) -> a
    void setClip(double) -> b
    void removeGraphicalObjectsBeginningWith(java.lang.String) -> h
    void removeGraphicalObjects(java.lang.String) -> a
    void addGraphicalObject(astex.Tmesh) -> a
    void setupContourLevels(java.lang.String) -> i
    void setSymmetry(boolean) -> b
    void addMoleculeRendererListener(astex.MoleculeRendererListener) -> a
    void removeMoleculeRendererListener(astex.MoleculeRendererListener) -> b
    void fireMoleculeAddedEvent(astex.Molecule) -> a
    void fireMoleculeRemovedEvent(astex.Molecule) -> b
    void fireMapAddedEvent(astex.Map) -> b
    void fireAtomSelectedEvent(astex.Atom) -> d
    void addMolecule(astex.Molecule) -> c
    void addMolecule(java.lang.String,java.lang.String) -> a
    int getMoleculeCount() -> a
    astex.Molecule getMolecule(int) -> a
    astex.Molecule getMolecule(java.lang.String) -> a
    astex.DynamicArray getMolecules() -> a
    void removeMoleculeByName(java.lang.String) -> b
    void removeMolecule(java.lang.String) -> c
    boolean moleculeMatches(java.lang.String,astex.Molecule) -> a
    void removeMap(java.lang.String) -> d
    void addMap(astex.Map) -> a
    void setMapContourTransparency(java.lang.String,int,int) -> a
    void setMapContourLineWidth(java.lang.String,int,double) -> a
    void setMapContourLevel(java.lang.String,int,double) -> b
    void setMapContourColour(java.lang.String,int,int) -> b
    void setMapContourDisplayed(java.lang.String,int,int) -> c
    int getMapCount() -> b
    astex.Map getMap(int) -> a
    astex.Map getMap(java.lang.String) -> a
    astex.DynamicArray getMaps(java.lang.String) -> a
    astex.ResidueIterator getResidueIterator() -> a
    astex.AtomIterator getAtomIterator() -> a
    void addSelectedAtom(astex.Atom) -> b
    void generateBumps(astex.Atom) -> c
    void generateBumps(astex.DynamicArray) -> b
    void addDistance(astex.Distance) -> a
    void addDistanceBetweenSelectedAtoms() -> c
    void addDistance(astex.Atom,astex.Atom) -> a
    void addTorsion(astex.Atom,astex.Atom,astex.Atom,astex.Atom) -> a
    void reset() -> d
    void removeAllAngles() -> e
    void removeAllDistances() -> f
    void removeAllTorsions() -> g
    void removeAllLabelledAtoms() -> h
    void removeAllSelectedAtoms() -> i
    astex.Molecule generateSymmetryMolecule(astex.Point3d,double) -> a
    int getAtomCount() -> c
    int setMoleculeVariable(java.lang.String,java.lang.String,java.lang.String) -> a
    int setMoleculeVisibility(java.lang.String,java.lang.String) -> a
    void pushSelection(astex.DynamicArray) -> c
    astex.DynamicArray popSelection() -> b
    astex.DynamicArray peekSelection(int) -> a
    astex.DynamicArray getAtomsInSelection(java.lang.String) -> b
    astex.DynamicArray getAtomsInLigands() -> c
    int getSelectedAtomCount() -> d
    astex.DynamicArray getSelectedAtoms() -> d
    astex.DynamicArray getSelectedOrLabelledAtoms() -> e
    astex.DynamicArray getSomeAtoms(boolean,boolean) -> a
    astex.DynamicArray getSelectedResidues() -> f
    void setSelected(astex.DynamicArray) -> d
    void setSelected(astex.DynamicArray,boolean) -> a
    astex.Point3d getCenter(astex.DynamicArray) -> a
    double getRadius(astex.DynamicArray) -> a
    double getRadius(astex.DynamicArray,astex.Point3d) -> a
    void resetWideBonds() -> j
    void setCenter(double,double,double) -> a
    void setCenter(astex.Point3d) -> a
    void setCenter(astex.Point3d,boolean) -> a
    void setCenter(astex.DynamicArray) -> e
    void generateMaps() -> r
    void setDisplayMaps(boolean) -> c
    void setDisplayBumps(boolean) -> d
    void setBumpInSameMolecule(boolean) -> e
    void setDisplayDistances(boolean) -> f
    boolean getDisplayDistances() -> b
    void setDisplaySolvent(boolean) -> g
    astex.DynamicArray getBondsInSelection(astex.DynamicArray) -> a
    void setWideBonds(astex.DynamicArray) -> f
    void addContourLevel(double,int,boolean,int) -> a
    void generateSymmetry() -> s
    void assignSymmetryAtomColors(astex.Molecule) -> d
    void readMap(astex.Map) -> c
    void contourMaps() -> t
    java.lang.String getContourGraphicalObjectName(astex.Map,int) -> a
    astex.Tmesh getContourGraphicalObject(astex.Map,int) -> a
    void contourMap(astex.Map,int) -> a
    void clipMaps(java.lang.String,astex.DynamicArray,boolean) -> a
    void paint() -> k
    void initialiseCenter() -> u
    void resetView() -> l
    void printMatrix() -> m
    void drawDistanceMarker(astex.Point3d,astex.Point3d,astex.Distance) -> a
    void drawDashedLine(double,double,double,double,double,double,double,double,double,int) -> a
    void drawDistance(astex.Atom,astex.Atom,boolean) -> a
    void drawTwinColourDottedLine(astex.Atom,astex.Atom,double,int,int) -> a
    void generateAtomLabels(java.lang.String,astex.DynamicArray) -> a
    void drawBond(astex.Bond,double) -> a
    void displayBondTypes(boolean) -> h
    void drawDoubleBond(astex.Bond,boolean,double) -> a
    void drawSimpleBond(astex.Bond,double) -> b
    void drawLine(int,int,int,int,int,int,int,int,double) -> a
    void drawLine(double,double,double,double,double,double,int,int,double) -> a
    astex.Atom getNearestAtom(int,int) -> a
    void translateCenter(int,int) -> a
    void colorByChain() -> n
    void colorByAtom() -> o
    void colorByBFactor() -> p
    void colorByPropertyRange(int) -> c
    void colorByRainbow(astex.DynamicArray) -> g
    void handleSlideCommand(astex.Arguments) -> e
    void execute(java.lang.String) -> e
    boolean parse(java.io.Reader) -> a
    void executeInternal(java.lang.String) -> j
    void reExecute() -> q
    void executeScript(java.lang.String) -> f
    java.lang.Class class$(java.lang.String) -> a
astex.MoleculeRendererListener -> ah:
    void moleculeAdded$6006c790(astex.Molecule) -> a
    void moleculeRemoved$6006c790(astex.Molecule) -> b
    void genericAdded$4ea08005(astex.generic.Generic) -> a
    void genericRemoved$4ea08005(astex.generic.Generic) -> b
    void mapAdded$722af5e2(astex.Map) -> a
    void atomSelected$2d89981b(astex.Atom) -> a
astex.MoleculeViewer -> cb:
    astex.MoleculeRenderer moleculeRenderer -> a
    boolean showFrameRate -> b
    boolean showVersion -> c
    boolean moveAtomsAllowed -> d
    boolean excludeFromSelection -> e
    boolean ready -> a
    java.awt.Image splashImage -> a
    boolean announce -> f
    java.util.Hashtable keyDefinitions -> a
    astex.Animate animationThread -> a
    boolean animationThreadActive -> g
    java.util.Vector stages -> a
    boolean application -> h
    java.awt.Dimension preferredSize -> a
    astex.Format f1 -> a
    boolean firstTime -> i
    java.awt.Image awtImage -> b
    java.awt.image.MemoryImageSource memoryImageSource -> a
    java.awt.TextField centerField -> a
    java.awt.event.MouseEvent lastMouseEvent -> a
    java.awt.event.MouseEvent mousePressedEvent -> b
    int frameCount -> a
    long mousePressedTime -> a
    astex.Atom pickedAtom -> a
    boolean dragged -> j
    boolean centerMoved -> k
    java.awt.PopupMenu popup -> a
    astex.xmt.Manipulator manipulator -> a
    java.lang.String onClickLabel -> a
    java.lang.String mouseOverCommand -> b
    java.lang.String mouseOverLabel -> c
    astex.Atom trackedAtom -> b
    java.lang.String trackedAtomLabel -> d
    java.lang.String FileString -> e
    java.lang.String OpenStructureString -> f
    java.lang.String OpenMapString -> g
    java.lang.String OpenObjectString -> h
    java.lang.String RunScriptString -> i
    java.lang.String SaveViewString -> j
    java.lang.String SaveString -> k
    java.lang.String SaveMoleculeString -> l
    java.lang.String WriteBMPString -> m
    java.lang.String ExitString -> n
    java.lang.String DisplayString -> o
    java.lang.String SymmetryString -> p
    java.lang.String BumpsString -> q
    java.lang.String MapsString -> r
    java.lang.String SolventString -> s
    java.lang.String MoveAtomsString -> t
    java.lang.String ColorString -> u
    java.lang.String ColorByChainString -> v
    java.lang.String ColorByAtomString -> w
    java.lang.String ColorByBFactorString -> x
    java.lang.String ColorByBFactorRangeString -> y
    java.lang.String ColorByRainbowString -> z
    java.lang.String ColorChoiceString -> A
    java.lang.String ColorBackgroundString -> B
    java.lang.String CloseString -> C
    java.lang.String SelectString -> D
    java.lang.String SelectionPopupString -> E
    java.lang.String SelectLigandString -> F
    java.lang.String LigandString -> G
    java.lang.String ClearSelectionString -> H
    java.lang.String ExcludeString -> I
    java.lang.String ViewString -> J
    java.lang.String ResetViewString -> K
    java.lang.String CenterViewString -> L
    java.lang.String ClipMapsToSelectionString -> M
    java.lang.String WideBondsForSelectionString -> N
    java.lang.String ContourLevelsString -> O
    java.awt.Menu closeMoleculeMenu -> a
    java.awt.Menu saveMoleculeMenu -> b
    java.awt.Menu ligandMenu -> c
    java.util.Hashtable writeBMPHash -> b
    java.lang.String[] builtinColors -> a
    java.awt.CheckboxMenuItem nothingCheckbox -> a
    java.awt.CheckboxMenuItem distancesCheckbox -> b
    java.awt.CheckboxMenuItem angleCheckbox -> c
    java.awt.CheckboxMenuItem torsionsCheckbox -> d
    astex.UserInterface ui -> a
    java.lang.String HideContourDialogString -> P
    java.awt.Dialog contourLevelDialog -> a
    java.util.Hashtable checkboxHashtable -> c
    java.util.Hashtable mapHashtable -> d
    java.util.Hashtable contourLevelHashtable -> e
    astex.Format contourFormat -> b
    java.lang.String CloseMoleculeCommand -> Q
    java.lang.String SaveMoleculeCommand -> R
    java.lang.String SelectCommand -> S
    java.lang.String SelectLigandCommand -> T
    java.lang.String SetColorCommand -> U
    java.lang.String SetBackgroundColorCommand -> V
    boolean viewChangeOnly -> l
    astex.DynamicArray repaintListeners -> a
    java.lang.String[] pdbExtensions -> b
    astex.Format hexFormat -> c
    java.awt.Frame colorChooserFrame -> a
    java.awt.Dialog colorChooserDialog -> b
    astex.ColorChooser colorChooser -> a
    boolean isApplication() -> a
    void handleAnimation(astex.Arguments) -> a
    void removeAnimationThread$58fe1566() -> a
    boolean interactiveAnimation() -> b
    void handlePrint(java.lang.String) -> a
    void addNotify() -> addNotify
    void readKeyDefinitions() -> d
    astex.MoleculeRenderer getMoleculeRenderer() -> a
    void addMolecule(astex.Molecule) -> c
    void setBounds(java.awt.Rectangle) -> setBounds
    void setBounds(int,int,int,int) -> setBounds
    void addMap(astex.Map) -> b
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void update(java.awt.Graphics) -> update
    void paint(java.awt.Graphics) -> paint
    void resetAwtImage() -> b
    void drawImage$383f5373(java.awt.Graphics) -> a
    void finalize() -> finalize
    void setActiveLight(int,astex.Light) -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
    void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    void windowClosed(java.awt.event.WindowEvent) -> windowClosed
    void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
    void windowDeiconified(java.awt.event.WindowEvent) -> windowDeiconified
    void windowIconified(java.awt.event.WindowEvent) -> windowIconified
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
    void setUsePopupMenu(boolean) -> a
    void showPopupMenu(java.awt.event.MouseEvent) -> a
    void install(java.lang.Object) -> a
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
    void keyReleased(java.awt.event.KeyEvent) -> keyReleased
    void keyTyped(java.awt.event.KeyEvent) -> keyTyped
    java.awt.MenuBar createMenuBar() -> a
    java.awt.Menu createBMPMenu() -> a
    java.awt.Menu createColorMenu() -> b
    java.awt.MenuItem createMenuItem(java.lang.String) -> a
    java.awt.CheckboxMenuItem createCheckboxMenuItem(java.lang.String,boolean) -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void buildContourLevelDialog() -> e
    void adjustmentValueChanged(java.awt.event.AdjustmentEvent) -> adjustmentValueChanged
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
    void dirtyRepaint() -> c
    java.lang.String loadFile(java.lang.String) -> a
    java.lang.String saveFile(java.lang.String,java.lang.String[]) -> a
    void moleculeAdded$6006c790(astex.Molecule) -> a
    void moleculeRemoved$6006c790(astex.Molecule) -> b
    void mapAdded$722af5e2(astex.Map) -> a
    void atomSelected$2d89981b(astex.Atom) -> a
    void genericAdded$4ea08005(astex.generic.Generic) -> a
    void genericRemoved$4ea08005(astex.generic.Generic) -> b
    void ensureMenusCreated() -> f
    void updateMenus() -> g
    void updateSaveMoleculeMenu() -> h
    void updateSelectMenu() -> i
    void saveMolecules() -> j
    void saveScript(java.lang.String) -> b
    java.lang.String getColor(int,int) -> a
    void showAt(java.awt.Dialog,int,int) -> a
astex.NeighbourGrid2D -> cg:
    double xmin -> b
    double ymin -> c
    double xmax -> d
    double ymax -> e
    double spacing -> a
    int nx -> a
    int ny -> b
    int ncell -> c
    astex.IntArray list -> a
    int[] head -> a
    void reset(double,double,double,double,double) -> a
    void add(int,double,double) -> a
    int getPossibleNeighbours(int,double,double,double,astex.IntArray,boolean) -> a
    int findcell(int,int) -> a
astex.ObjectControl -> dl:
    astex.UserInterface userInterface -> a
    astex.Tmesh tmesh -> a
    jclass.bwt.JCCheckbox selected -> a
    jclass.bwt.JCCheckbox displayed -> b
    jclass.bwt.JCCheckbox backface -> c
    jclass.bwt.JCSlider transparency -> a
    jclass.bwt.JCButton delete -> a
    jclass.bwt.JCButton edit -> b
    astex.ColorButton colorButton -> a
    void itemStateChanged(jclass.bwt.JCItemEvent) -> a
    void adjustmentValueChanged(jclass.bwt.JCAdjustmentEvent) -> a
    void actionPerformed(jclass.bwt.JCActionEvent) -> a
astex.ObjectControl$1 -> bI:
    astex.ObjectControl this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
astex.ObjectPropertyDialog -> as:
    astex.ObjectPropertyDialog opd -> a
    astex.Tmesh object -> a
    astex.MoleculeRenderer moleculeRenderer -> a
    boolean active -> a
    jclass.bwt.JCCheckboxGroup textureCoordinate -> a
    int[] textureValues -> a
    java.lang.String[] textureCoords -> a
    jclass.bwt.JCCheckbox applyCharges -> a
    jclass.bwt.JCCheckbox applyMlp -> b
    jclass.bwt.JCSpinBox uminSB -> a
    jclass.bwt.JCSpinBox vminSB -> b
    jclass.bwt.JCSpinBox umaxSB -> c
    jclass.bwt.JCSpinBox vmaxSB -> d
    java.util.Hashtable imageHash -> a
    astex.ObjectPropertyDialog getInstance(java.awt.Frame,java.lang.String,astex.MoleculeRenderer) -> a
    void setTmesh(astex.Tmesh) -> a
    void createControls() -> a
    void spinBoxChangeEnd(jclass.bwt.JCSpinBoxEvent) -> a
    void actionPerformed(jclass.bwt.JCActionEvent) -> a
    void setMinMax() -> b
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
    void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    void windowClosed(java.awt.event.WindowEvent) -> windowClosed
    void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
    void windowDeiconified(java.awt.event.WindowEvent) -> windowDeiconified
    void windowIconified(java.awt.event.WindowEvent) -> windowIconified
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
astex.ObjectPropertyDialog$1 -> at:
    astex.ObjectPropertyDialog this$0 -> a
    void actionPerformed(jclass.bwt.JCActionEvent) -> a
astex.PeriodicTable -> cF:
    astex.AtomicElement[] elements -> a
    int getElementFromSymbol(java.lang.String) -> a
    int getElementFromSymbol(char,char) -> a
    java.lang.String getAtomSymbolFromElement(int) -> a
astex.Point3d -> aa:
    double x -> a
    double y -> b
    double z -> c
    void initialise() -> a
    java.lang.Object clone() -> clone
    void set(double,double,double) -> a
    void set(astex.Point3d) -> a
    double get(int) -> a
    void set(int,double) -> a
    void zero() -> b
    double getX() -> a
    double getY() -> b
    double getZ() -> c
    void setX(double) -> a
    void setY(double) -> b
    void setZ(double) -> c
    void add(astex.Point3d) -> b
    void subtract(astex.Point3d) -> c
    void negate() -> c
    astex.Point3d mid(astex.Point3d,astex.Point3d) -> a
    void mid(astex.Point3d,astex.Point3d,astex.Point3d) -> a
    void normalise() -> d
    double dot(astex.Point3d) -> a
    double length() -> d
    astex.Point3d unitVector(astex.Point3d,astex.Point3d) -> b
    void unitVector(astex.Point3d,astex.Point3d,astex.Point3d) -> b
    astex.Point3d vector(astex.Point3d,astex.Point3d) -> c
    astex.Point3d normalToLine(astex.Point3d) -> a
    void normalToLine(astex.Point3d,astex.Point3d) -> a
    astex.Point3d cross(astex.Point3d) -> b
    void cross(astex.Point3d,astex.Point3d,astex.Point3d) -> c
    void crossNoNormalise(astex.Point3d,astex.Point3d,astex.Point3d) -> d
    void cross(double[],double[],double[]) -> a
    void scale(double) -> d
    double distance(astex.Point3d) -> b
    double distanceSq(astex.Point3d) -> c
    void divide(double) -> e
    double angle(astex.Point3d,astex.Point3d,astex.Point3d) -> a
    double angleDegrees(astex.Point3d,astex.Point3d,astex.Point3d) -> b
    double torsion(astex.Point3d,astex.Point3d,astex.Point3d,astex.Point3d) -> a
    double torsionDegrees(astex.Point3d,astex.Point3d,astex.Point3d,astex.Point3d) -> b
    void transform(astex.Matrix) -> a
    java.lang.String toString() -> toString
astex.Renderer -> cn:
    int shadowMode -> a
    int pixelWidth -> b
    int pixelHeight -> c
    int pixelCount -> f
    int[] pbuffer -> a
    int[] zbuffer -> b
    astex.Point3d center -> a
    double width -> a
    double back -> b
    int backClip -> d
    double front -> c
    int frontClip -> e
    int frameCount -> g
    boolean debug -> a
    astex.DynamicArray objects -> a
    int ambient -> h
    int ambientr -> i
    int ambientg -> j
    int ambientb -> k
    int lightingModel -> l
    double cartoonNormalCutoff -> e
    boolean lightMapCalculated -> f
    astex.DynamicArray lights -> b
    java.util.Hashtable textures -> a
    astex.Texture texture -> a
    int transparency -> m
    boolean transparent -> g
    boolean clipTriangle -> h
    boolean phong -> i
    boolean frontFaceOnly -> j
    boolean depthcue -> b
    boolean analyticalSpheres -> c
    int zmin -> n
    int zmax -> o
    int triangleColor -> p
    boolean colorTriangle -> k
    double zoom -> d
    double clipIncrement -> f
    int background -> q
    int gradientTop -> r
    int gradientBottom -> s
    boolean backgroundGradient -> l
    java.lang.String statusString -> a
    java.lang.String logo -> b
    int[] debugColor -> c
    astex.DynamicArray rendererEventListeners -> c
    boolean antialias -> m
    boolean wuAntiAlias -> d
    boolean antialiasModeChanged -> n
    boolean depthMapInitialised -> o
    int[] depthScale -> d
    double fogDensity -> g
    boolean emulate555 -> e
    boolean imageValidityChecked -> p
    boolean imageValid -> q
    int DepthCueMin -> t
    astex.IntArray sphereOverlaps -> a
    int[] xt -> e
    int[] yt -> f
    int[] zt -> g
    int[] nxt -> h
    int[] nyt -> i
    int[] nzt -> j
    int[] ut -> k
    int[] vt -> l
    char[] clipped -> a
    astex.Matrix overallMatrix -> a
    astex.Matrix rotationMatrix -> b
    astex.Vertex vertexA -> a
    astex.Vertex vertexB -> b
    astex.Vertex vertexC -> c
    astex.Vertex vertexD -> d
    astex.Vertex vA -> e
    astex.Vertex vB -> f
    astex.Vertex vC -> g
    astex.Vertex vD -> h
    int v0 -> u
    int v1 -> v
    int v2 -> w
    int temp -> x
    boolean totallyOnScreen -> r
    int renderMode -> y
    int[] displayOrder -> m
    int zRange -> z
    double[] tuv -> a
    double[] eye -> b
    double[] eyedir -> c
    int[] textureMap -> n
    int triangleRaysCast -> A
    int triangleRaysIntersected -> B
    double[] cx0 -> d
    double[] cx1 -> e
    double[] cx2 -> f
    double[] nx0 -> g
    double[] nx1 -> h
    double[] nx2 -> i
    double[] ray1 -> j
    double[] ray2 -> k
    double[] cylPoint -> l
    double[] cylNormal -> m
    int[] sphereColor -> o
    int[] sphereZ -> p
    int[][] szCache -> a
    int[][] scCache -> b
    int[] sradius -> q
    int[] scolor -> r
    int cacheCount -> C
    astex.DoubleArray stransx -> a
    astex.DoubleArray stransy -> b
    astex.DoubleArray stransz -> c
    astex.DoubleArray stransxt -> d
    astex.DoubleArray stransyt -> e
    astex.DoubleArray stranszt -> f
    astex.DoubleArray stransr -> g
    astex.DoubleArray stransrt -> h
    astex.IntArray stransrgb -> b
    astex.IntArray stransp -> c
    astex.IntArray stransid -> d
    double[] charOffsets -> n
    double[] fontMin -> o
    double[] fontMax -> p
    int stringJustification -> D
    int stringColor -> E
    boolean colorDefined -> s
    double stringSize -> h
    double stringRadius -> i
    boolean string3d -> t
    double[] tix -> q
    byte[] romanBitmapFont -> a
    byte[] greekBitmapFont -> b
    int[] pixMin -> s
    int[] pixMax -> t
    double hersheyScale -> j
    double hersheyRadius -> k
    double fontHeight -> l
    double fontRadius -> m
    astex.Point3d xd -> b
    astex.Point3d yd -> c
    astex.Point3d zd -> d
    java.util.Hashtable hersheyHash -> b
    int defaultBitmapFontSize -> F
    java.util.Hashtable bitmapFonts -> c
    double[] vx1 -> r
    double[] vx2 -> s
    int[] gamma_table -> u
    double drawGamma -> n
    int[] apbuffer -> v
    int[] azbuffer -> w
    int[] opbuffer -> x
    int[] ozbuffer -> y
    int realw -> G
    int realh -> H
    boolean displayStatusString -> u
    int samples -> I
    int colorMapCacheSize -> J
    int colorMapCacheCount -> K
    int colorMapCacheMisses -> L
    int[][] colorMapCache -> c
    int[] colorMapCacheColor -> z
    int color -> M
    double[] sqrtTable -> t
    double powFactor -> o
    double wrapAngle -> p
    double cosWrapAngle -> q
    int[] intensityMap -> A
    int[] diffuseMap -> B
    int[] shadowMap -> C
    int[] highlightMap -> D
    int[] colorMap -> E
    int XMinClip -> N
    int XMaxClip -> O
    int YMinClip -> P
    int YMaxClip -> Q
    int ZMinClip -> R
    int ZMaxClip -> S
    int VMinClip -> T
    int VMaxClip -> U
    int NormalClip -> V
    void setAntiAlias(boolean) -> a
    void setLightingModel(int) -> a
    int getLightingModel() -> a
    void setCartoonNormalCutoff(double) -> a
    void setBackgroundColor(int) -> b
    int getBackgroundColor() -> b
    void setGradient(boolean) -> b
    void setGradientTop(int) -> c
    void setGradientBottom(int) -> d
    void setZoom(double) -> b
    void applyZoom(double) -> c
    void setRadius(double) -> d
    double getRadius() -> a
    double getFrontClip() -> b
    void setFrontClip(double,boolean) -> a
    double getBackClip() -> c
    void setBackClip(double,boolean) -> b
    void setClip(double,double) -> a
    void setClip(double) -> e
    double getClip() -> d
    void incrementClip() -> a
    void decrementClip() -> b
    void incrementFrontClip() -> c
    void decrementFrontClip() -> d
    astex.Point3d getCenter() -> a
    void setCenter(astex.Point3d) -> a
    void resetCenterAndRadius() -> e
    void setAmbient(int) -> e
    int getAmbient() -> c
    int INDEX(int,int) -> a
    void addRendererEventListener(astex.RendererEventListener) -> a
    void removeRendererEventListener(astex.RendererEventListener) -> b
    void fireRendererEvent(astex.RendererEvent) -> a
    void addTmesh(astex.Tmesh) -> a
    void addGraphicalObject(astex.Tmesh) -> b
    int getGraphicalObjectCount() -> d
    astex.Tmesh getGraphicalObject(int) -> a
    astex.Tmesh getGraphicalObject(java.lang.String) -> a
    astex.DynamicArray getGraphicalObjects(java.lang.String) -> a
    void setGraphicalObjectsColour(java.lang.String,int) -> a
    void setGraphicalObjectsVisibility(java.lang.String,int) -> b
    void removeGraphicalObjects(java.lang.String) -> a
    void removeGraphicalObjects(astex.Tmesh) -> c
    void removeGraphicalObjectsBeginningWith(java.lang.String) -> b
    void applyTexture(java.lang.String,java.lang.String) -> a
    void scaleTexture(java.lang.String,int,double) -> a
    void setBackface(java.lang.String,boolean) -> a
    void initialiseDepthMap() -> k
    void postProcess() -> f
    int depthCueColor(int,int) -> b
    int depthCueShadedColor(int,int) -> c
    void drawObjects() -> g
    void drawObjects(int) -> h
    void indexSort(double[],int[],int,int) -> a
    double getOverallScale() -> e
    void buildOverallMatrix() -> h
    void rotateX(double) -> f
    void rotateY(double) -> g
    void rotateZ(double) -> h
    void applyTransform(double,double,double,double[]) -> a
    void transformNormal(double,double,double,double[]) -> b
    void renderObject(astex.Tmesh) -> d
    int triangleDepth(astex.Tmesh,int) -> a
    void depthSort(int[],astex.Tmesh,int,int) -> a
    void renderTriangleObject(astex.Tmesh) -> e
    void renderTriangleUniversal() -> l
    void renderTriangleUniversalC() -> m
    void renderTriangleVertex() -> n
    void renderTriangleTri() -> o
    void renderTriangleTriC() -> p
    void renderTriangleVertexC() -> q
    void renderTriangleTriTrans() -> r
    void renderTriangleVertexTrans() -> s
    void renderTriangleTriTransC() -> t
    void renderTriangleVertexTransC() -> u
    void renderTriangleP() -> v
    void renderTriangleTTrans() -> w
    void renderTrianglePTrans() -> x
    void renderTrianglePTransC() -> y
    void renderTriangleTTransC() -> z
    void renderTrianglePC() -> A
    void renderTriangleT() -> B
    void renderTriangleTF() -> C
    void renderTriangleTC() -> D
    void drawCylinder(double,double,double,double,double,double,int,int,double) -> a
    void drawCylinderEnd(double,double,double,double,double,double,int,double,boolean) -> a
    void drawSphere(double,double,double,double,int) -> a
    void drawSphere(double,double,double,double,int,int) -> a
    void actuallyDrawSphere(double,double,double,double,int,int) -> c
    void drawAccurateSphere(double,double,double,double,int,int) -> b
    void drawBox(int,int,int,int,int) -> a
    void drawDirectString(int,int,int,java.lang.String) -> a
    void drawString(double,double,double,int,java.lang.String) -> a
    void drawString(double,double,double,double,int,java.lang.String) -> a
    void drawBitmapString$6624d1d(int,int,int,double,java.lang.String) -> a
    int drawChar(int,int,int,char,byte[],int,boolean,int[],int[],boolean) -> a
    astex.DynamicArray getHersheyFont(java.lang.String) -> b
    void setupString(java.lang.String,double[]) -> a
    byte[] getFont(java.lang.String) -> a
    void drawDot(int,int,int,int) -> a
    void setPixel(int,int,int,int) -> b
    void setPixel(int,int,int) -> a
    void drawLine$1ef375c2(int,int,int,int,int) -> c
    void drawLine(double,double,double,double,double,double,int,int,int) -> a
    void drawLine(int,int,int,int,int,int,int,int,int) -> a
    void setDrawGamma(double) -> i
    void drawAntiAliasedLine(int,int,int,int,int,int,int,int) -> a
    void blendPixel(int,int,int,int,int) -> d
    void blendPixel2(int,int,int,int,int) -> b
    void drawFastIntegerLine(int,int,int,int,int,int,int) -> a
    void drawSafeIntegerLine(int,int,int,int,int,int,int) -> b
    void drawWideIntegerLine(int,int,int,int,int,int,int,int) -> b
    void renderSphereObject(astex.Tmesh) -> f
    void renderDotObject(astex.Tmesh) -> g
    void renderCylinderObject(astex.Tmesh) -> h
    void drawLineObject(astex.Tmesh) -> i
    void redraw() -> i
    void setLogo(java.lang.String) -> c
    void setStatusString(java.lang.String) -> d
    void setSize(int,int) -> a
    void setSamples(int) -> f
    int getSamples() -> e
    void setColor(int) -> g
    void lightVertex(astex.Vertex) -> a
    void vertexColor(astex.Vertex,int) -> a
    void initialiseColor() -> E
    double fastSqrt(double) -> a
    void calculateLightMap() -> j
    void setPowFactor(double) -> j
    void setWrapAngle(double) -> k
    void generateColour(double,double,double,int[],int[],int[]) -> a
astex.RendererEvent -> M:
    int type -> a
    java.lang.Object item -> a
astex.RendererEventListener -> C:
    boolean handleRendererEvent(astex.RendererEvent) -> a
astex.Residue -> dt:
    astex.DynamicArray atoms -> a
    int undefinedResidueNumber -> a
    java.lang.String undefinedResidueName -> a
    astex.Chain parent -> a
    char insertionCode -> a
    java.lang.String name -> b
    int secondaryStructure -> b
    int number -> c
    int sequentialNumber -> d
    astex.Residue create() -> a
    void setParent(astex.Chain) -> a
    astex.Chain getParent() -> a
    void setInsertionCode(char) -> a
    char getInsertionCode() -> a
    void setName(java.lang.String) -> a
    java.lang.String getName() -> b
    int getSecondaryStructure() -> a
    void setSecondaryStructure(int) -> a
    void setSequentialNumber(int) -> b
    void setNumber(int) -> c
    int getSequentialNumber() -> b
    int getNumber() -> c
    void addAtom(astex.Atom) -> a
    void removeAtom(astex.Atom) -> b
    int getAtomCount() -> d
    astex.Atom getAtom(int) -> a
    astex.Atom getAtom(java.lang.String) -> a
    astex.Atom getAtom(java.lang.String,char) -> b
    astex.Atom findAtom(java.lang.String) -> b
    astex.Atom findAtom(java.lang.String,char) -> a
    boolean isStandardAminoAcid() -> a
    boolean isIon() -> b
    boolean isSolvent() -> c
    boolean isNucleicAcid() -> d
    boolean isStringInArray(java.lang.String,astex.DynamicArray) -> a
    java.lang.String selectStatement() -> a
    java.lang.String toString() -> toString
astex.ResidueIterator -> dk:
    astex.MoleculeRenderer renderer -> a
    int residueCount -> a
    int currentResidue -> b
    astex.Residue[] residues -> a
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
astex.Ring -> aX:
    astex.DynamicArray atoms -> a
    astex.DynamicArray bonds -> b
    void addAtom(astex.Atom) -> a
    void addBond(astex.Bond) -> a
    astex.Atom getAtom(int) -> a
    astex.Bond getBond(int) -> a
    int getAtomCount() -> a
    int getBondCount() -> b
    boolean contains(astex.Bond) -> a
astex.Schematic -> cd:
    astex.Point3d[] guides -> a
    astex.Point3d[] tangents -> b
    astex.Point3d[] width -> c
    astex.Point3d[] thick -> d
    astex.Point3d[] tmp -> e
    astex.Point3d[] t -> f
    astex.Point3d[] tout -> g
    astex.Point3d[] c -> h
    astex.Point3d[] h -> i
    astex.Point3d[] rv -> j
    int[] type -> a
    int[] colors -> b
    int[] resids -> c
    boolean[] widthInitialised -> a
    int guideCount -> a
    int residCount -> b
    astex.Point3d wptp -> a
    astex.Point3d wptm -> b
    astex.Point3d wmtp -> c
    astex.Point3d wmtm -> d
    astex.Point3d wm -> e
    astex.Point3d wp -> f
    astex.Point3d ep -> g
    astex.Point3d en -> h
    astex.Point3d wmlast -> i
    astex.Point3d wplast -> j
    astex.Point3d p -> k
    astex.Point3d wint -> l
    astex.Point3d tint -> m
    int[] lastv -> d
    int[] v -> e
    int[] hv -> f
    astex.Point3d[] spline -> k
    int[] splineColor -> g
    astex.Tmesh create(astex.Arguments,astex.MoleculeRenderer,astex.DynamicArray) -> a
    void ribbon(astex.Arguments,astex.Tmesh) -> a
    void tube(astex.Arguments,astex.Tmesh) -> b
    void arrow(astex.Arguments,astex.Tmesh) -> c
    void interpolate(astex.Point3d,astex.Point3d,astex.Point3d,double) -> a
    void hermite_single(astex.Point3d,astex.Point3d,astex.Point3d,double,astex.Point3d,double,double,astex.Point3d) -> a
astex.SecondaryStructure -> bG:
    double MaxHBondDistance -> a
    astex.Tmesh tm -> a
    astex.Residue[] residues -> a
    astex.Point3d[] hpos -> a
    astex.Atom[] opos -> a
    int[] types -> a
    int[] mapping -> b
    astex.IntArray[] hbond_no -> a
    astex.IntArray[] hbond_on -> b
    int nres -> a
    boolean debug -> a
    astex.Tmesh assign(astex.DynamicArray) -> a
    void assignSheetType(int) -> a
    boolean hbonded(int,int) -> a
astex.Selectable -> g:
    java.lang.String selectStatement() -> a
astex.Selection -> bM:
    astex.DynamicArray aminoacidNames -> a
    astex.DynamicArray dnaNames -> b
    astex.DynamicArray solventNames -> c
    astex.DynamicArray ionNames -> d
    astex.DynamicArray selectionMaskCache -> e
    astex.Atom[] atomArray -> a
    astex.DynamicArray dynamicArrayCache -> f
    byte[] generateSelectionMask(astex.MoleculeRenderer) -> l
    astex.DynamicArray maskToArray(astex.MoleculeRenderer,byte[]) -> a
    byte[] arrayToMask(astex.MoleculeRenderer,astex.DynamicArray) -> a
    byte[] all(astex.MoleculeRenderer) -> a
    byte[] none(astex.MoleculeRenderer) -> b
    byte[] attribute(astex.MoleculeRenderer,int,int,double) -> a
    byte[] residue(astex.MoleculeRenderer,java.util.Vector) -> a
    byte[] modulo(astex.MoleculeRenderer,int) -> a
    byte[] composite(astex.MoleculeRenderer,java.util.Vector) -> b
    byte[] sequential(astex.MoleculeRenderer,java.util.Vector) -> c
    byte[] insertion(astex.MoleculeRenderer,java.lang.String) -> a
    byte[] molecule(astex.MoleculeRenderer,java.util.Vector) -> d
    byte[] moleculeExact(astex.MoleculeRenderer,java.util.Vector) -> e
    byte[] byresidue(astex.MoleculeRenderer,byte[]) -> a
    byte[] bonded(astex.MoleculeRenderer,byte[]) -> b
    byte[] name(astex.MoleculeRenderer,java.util.Vector) -> f
    byte[] chain(astex.MoleculeRenderer,java.util.Vector) -> g
    byte[] atom(astex.MoleculeRenderer,java.util.Vector) -> h
    byte[] group(astex.MoleculeRenderer,java.util.Hashtable) -> a
    byte[] id(astex.MoleculeRenderer,java.util.Vector) -> i
    byte[] element(astex.MoleculeRenderer,java.util.Vector) -> j
    byte[] current(astex.MoleculeRenderer) -> c
    byte[] property(astex.MoleculeRenderer,int) -> b
    byte[] displayed(astex.MoleculeRenderer) -> d
    byte[] labelled(astex.MoleculeRenderer) -> e
    byte[] defaultSelection(astex.MoleculeRenderer) -> f
    byte[] wide(astex.MoleculeRenderer) -> g
    byte[] sphere(astex.MoleculeRenderer,double,double,double,double) -> a
    byte[] sphere(astex.MoleculeRenderer,double,byte[]) -> a
    byte[] contact(astex.MoleculeRenderer,double,byte[]) -> b
    byte[] graph(astex.MoleculeRenderer,byte[]) -> c
    void propagateGraph(astex.Atom) -> a
    byte[] and(byte[],byte[]) -> a
    byte[] or(byte[],byte[]) -> b
    byte[] not(byte[]) -> a
    byte[] builtin(astex.MoleculeRenderer,astex.DynamicArray) -> b
    byte[] aminoacid(astex.MoleculeRenderer) -> h
    byte[] solvent(astex.MoleculeRenderer) -> i
    byte[] dna(astex.MoleculeRenderer) -> j
    byte[] ions(astex.MoleculeRenderer) -> k
astex.Settings -> da:
    java.util.Hashtable propertyObjects -> a
    java.lang.Object get(java.lang.String,java.lang.String) -> a
    double getDouble(java.lang.String,java.lang.String) -> a
    double getDouble(java.lang.String,java.lang.String,double) -> a
    int getInteger(java.lang.String,java.lang.String) -> a
    int getInteger(java.lang.String,java.lang.String,int) -> a
    java.lang.String getString(java.lang.String,java.lang.String) -> a
    java.lang.String getString(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean getBoolean(java.lang.String,java.lang.String) -> a
    boolean getBoolean(java.lang.String,java.lang.String,boolean) -> a
astex.ShadowCache -> aO:
    astex.FloatArray scachex -> a
    astex.FloatArray scachey -> b
    astex.FloatArray scachez -> c
    astex.FloatArray scacher -> d
    astex.FloatArray ccachex0 -> e
    astex.FloatArray ccachey0 -> f
    astex.FloatArray ccachez0 -> g
    astex.FloatArray ccachex1 -> h
    astex.FloatArray ccachey1 -> i
    astex.FloatArray ccachez1 -> j
    astex.FloatArray ccacher -> k
    astex.FloatArray tcachex0 -> l
    astex.FloatArray tcachey0 -> m
    astex.FloatArray tcachez0 -> n
    astex.FloatArray tcachex1 -> o
    astex.FloatArray tcachey1 -> p
    astex.FloatArray tcachez1 -> q
    astex.FloatArray tcachex2 -> r
    astex.FloatArray tcachey2 -> s
    astex.FloatArray tcachez2 -> t
    astex.FloatArray tcen2dx -> u
    astex.FloatArray tcen2dy -> v
    astex.FloatArray tcenx -> w
    astex.FloatArray tceny -> x
    astex.FloatArray tcenz -> y
    astex.FloatArray tcenr -> z
    float[] tx0 -> a
    float[] ty0 -> b
    float[] tz0 -> c
    float[] tx1 -> d
    float[] ty1 -> e
    float[] tz1 -> f
    float[] tx2 -> g
    float[] ty2 -> h
    float[] tz2 -> i
    float[] tc2x -> j
    float[] tc2y -> k
    float[] tcx -> l
    float[] tcy -> m
    float[] tcz -> n
    float[] tcr -> o
    float[] scx -> p
    float[] scy -> q
    float[] scz -> r
    float[] scr -> s
    astex.IntArray sphereShadowCacheList -> a
    astex.IntArray sphereOcclusionCacheList -> b
    astex.IntArray cylinderShadowCacheList -> c
    astex.IntArray triangleShadowCacheList -> d
    astex.IntArray initialList -> e
    double[] cbs -> a
    double[] c0 -> b
    double[] c1 -> c
    double[] c2 -> d
    double[] ray0 -> e
    double[] ray1 -> f
    double[] rint -> g
    double[] nint -> h
    double[] tuv -> i
    double px -> a
    double py -> b
    int lastObscuringTriangle -> a
    int lastObscuringSphere -> b
    int lastObscuringCylinder -> c
    astex.Point3d light -> a
    astex.Point3d lightx -> b
    astex.Point3d lighty -> c
    astex.NeighbourGrid2D triangleGrid -> a
    astex.NeighbourGrid2D sphereGrid -> b
    astex.NeighbourGrid2D cylinderGrid -> c
    double[] edge1 -> j
    double[] edge2 -> k
    double[] tvec -> l
    double[] pvec -> m
    double[] qvec -> n
    void prepareTriangleCacheList(double,double,double,double,double,double,double,double,double,boolean) -> a
    void prepareCylinderCacheList(double,double,double,double,double,double,double) -> a
    void boundingSphereCylinder(double,double,double,double,double,double,double,double[]) -> a
    void boundingSphereTriangle(double,double,double,double,double,double,double,double,double,double[]) -> a
    void prepareSphereCacheList$3fc13701(double,double,double,double) -> a
    void addSphereToCacheList(double,double,double,double) -> b
    void addCylinderToCacheList(double,double,double,double,double,double,double) -> b
    void addTriangleToCacheList$3ef766ba(double,double,double,double,double,double,double,double,double) -> a
    boolean selfShadowed(double,double,double,double) -> a
    boolean pointShadowed(double,double,double) -> a
    boolean obscuredByTriangle(int) -> a
    boolean obscuredBySphere(int,double,double,double) -> a
    boolean obscuredByCylinder(int) -> b
    void clearShadowCaches() -> a
    void setupShadowCaches(astex.Light,double) -> a
    void CROSS(double[],double[],double[]) -> a
    double DOT(double[],double[]) -> a
    void SUB(double[],double[],double[]) -> b
    int intersect_triangle(double[],double[],double[],double[],double[],double[]) -> a
astex.StringArray -> al:
    java.lang.String[] objects -> a
    int objectCount -> a
    int capacityIncrement -> b
    int add(java.lang.String) -> a
astex.Surface -> bT:
    double minimumSpacing -> a
    double spacing -> b
    double desiredGridSpacing -> c
    int maximumGridSize -> a
    int gx -> b
    int gy -> c
    int gz -> d
    float[] grid -> a
    double gminx -> d
    double gminy -> e
    double gminz -> f
    double gmaxx -> g
    double gmaxy -> h
    double gmaxz -> i
    double[] gridx -> a
    double[] gridy -> b
    double[] gridz -> c
    int[] visible -> a
    int[] reordered -> b
    double rp -> j
    double maxRadius -> k
    int np -> e
    boolean debugFlag -> a
    double[] ax -> d
    double[] ay -> e
    double[] az -> f
    double[] ar -> g
    double[] ar2 -> h
    int[] selected -> c
    int atomCount -> f
    int neighbourCount -> g
    int[] neighbours -> d
    astex.Lattice l -> a
    astex.Point3d atom1 -> a
    astex.Point3d atom2 -> b
    astex.Point3d mid -> c
    astex.Point3d n1 -> d
    astex.Point3d n2 -> e
    double[] cosTable -> i
    double[] sinTable -> j
    int lastClip -> h
    astex.DynamicArray dots -> a
    astex.DynamicArray triangles -> b
    void setProbeRadius(double) -> a
    void setMinimumSpacing(double) -> b
    astex.Tmesh connolly(astex.DynamicArray,double,boolean) -> a
    void clipSurface(astex.Tmesh,boolean) -> a
    void projectPoints() -> a
    void projectTorii() -> b
    double distance2(double,double,double,double,double,double) -> a
    int obscured(double,double,double,int,int) -> a
    void addSpherePoint(astex.Point3d) -> a
    void addTriangle(int,int,int) -> a
    int findSpherePoint(astex.Point3d,astex.Point3d) -> a
    astex.Tmesh dotSurface(astex.DynamicArray,int) -> a
astex.Symmetry -> bt:
    double[] unitCell -> a
    astex.Matrix fractionalToCartesian -> a
    astex.Matrix cartesianToFractional -> c
    astex.Matrix scale -> b
    int spaceGroupNumber -> a
    java.lang.String spaceGroupName -> a
    java.lang.String originalSpaceGroupName -> b
    astex.DynamicArray symmetryOperators -> a
    java.lang.String symmetryLibrary -> c
    java.lang.String[] positiveAxes -> a
    java.lang.String[] fractions -> b
    double[] fractionValues -> b
    astex.DynamicArray getSymmetryOperators() -> a
    java.lang.String getSpaceGroupName(java.lang.String) -> a
    void decodeSymmetryToken(java.lang.String,double[]) -> a
    void setUnitCell(double[]) -> a
    void prepareSymmetry() -> c
    void setSpaceGroupNumber(int) -> a
    int getSpaceGroupNumber() -> b
    void setSpaceGroupName(java.lang.String) -> c
    void setOriginalSpaceGroupName(java.lang.String) -> d
    java.lang.String getOriginalSpaceGroupName() -> c
    astex.Matrix getCartesianToFractionalMatrix() -> a
    astex.Matrix getFractionalToCartesianMatrix() -> b
astex.Texgen -> bC:
    double[] x -> a
    double[] y -> b
    double[] z -> c
    double[] r -> d
    double[] q -> e
    void distance(astex.Tmesh,astex.DynamicArray,int) -> a
    void curvature(astex.Tmesh,astex.DynamicArray,int,double) -> a
    void rectangular(astex.Tmesh) -> a
    void property_map$3d1fae4a(astex.Tmesh,astex.DynamicArray,int,double,int) -> a
astex.Texture -> bU:
    int width -> a
    int height -> b
    int[] pixels -> a
    astex.Texture lipophilicityTexture() -> a
    astex.Texture simpleTexture() -> b
    void fillValues$140720b9(java.lang.String[]) -> a
    void setSize(int,int) -> a
    java.awt.Image loadImage(java.lang.String) -> a
    astex.Texture loadTexture(java.lang.String) -> a
    void loadPixels(java.awt.Image) -> a
astex.Tmesh -> bJ:
    int np -> a
    int npalloc -> h
    float[] x -> a
    float[] y -> b
    float[] z -> c
    float[] nx -> d
    float[] ny -> e
    float[] nz -> f
    float[] u -> g
    float[] v -> h
    int[] vcolor -> a
    astex.Texture texture -> a
    int transparency -> b
    float uoffset -> a
    float uscale -> b
    float voffset -> c
    float vscale -> d
    astex.Tmesh spheres -> a
    astex.Tmesh cylinders -> b
    astex.Tmesh lines -> c
    int nt -> c
    int ntalloc -> i
    int[] t0 -> b
    int[] t1 -> c
    int[] t2 -> d
    int[] tcolor -> e
    int style -> d
    int colorStyle -> e
    boolean debug -> c
    boolean visible -> a
    boolean backface -> b
    int color -> f
    java.lang.String name -> a
    double lineWidth -> a
    java.util.Hashtable clipHash -> a
    astex.Point3d ab -> a
    astex.Point3d bc -> b
    astex.Point3d norm -> c
    astex.Point3d origNorm -> d
    int renderPass -> g
    double getInverseTexture(int,double) -> a
    void setColorStyle(int) -> a
    void setColor(int) -> b
    void setTransparency(int) -> c
    void setLineWidth(double) -> a
    int addPoint(double[],double[],double,double) -> a
    int addPoint(double,double,double,double,double,double,double,double) -> a
    void getVertex(int,double[],double[]) -> a
    void setPointCapacity(int) -> e
    void ensurePointCapacity() -> a
    int addLine(int,int,int) -> a
    int addTriangle(int,int,int) -> b
    int addTriangle(int,int,int,int) -> a
    void setTriangleCapacity(int) -> f
    void ensureTriangleCapacity() -> b
    void addCylinder(double,double,double,double,double,double,double,int,int) -> a
    astex.Tmesh read(java.lang.String) -> a
    void clip(int) -> d
    int addClipVertex(int,int,int) -> c
    java.lang.String toString() -> toString
    astex.Tmesh copy(astex.DynamicArray) -> a
astex.UI -> bo:
    jclass.bwt.JCButton button(java.lang.String,java.lang.String,jclass.bwt.JCActionListener) -> a
    jclass.bwt.JCCheckbox checkbox(java.lang.String,java.lang.String,jclass.bwt.JCItemListener) -> a
    jclass.bwt.JCGroupBox groupbox(java.lang.String) -> a
    jclass.bwt.JCSpinBox spinbox(int,int,int,int,int,int,jclass.bwt.JCSpinBoxListener) -> a
astex.UniversalFilenameFilter -> cu:
    java.lang.String[] acceptedExtensions -> a
    boolean accept(java.io.File,java.lang.String) -> accept
astex.UserInterface -> aq:
    jclass.bwt.JCOutlinerNodeStyle style -> a
    astex.MoleculeViewer moleculeViewer -> a
    astex.MoleculeRenderer moleculeRenderer -> a
    java.lang.String[] selectOptions -> a
    int[] selectValues -> a
    jclass.bwt.JCCheckboxGroup selectMode -> a
    jclass.bwt.JCCheckboxGroup textureCoordinate -> b
    java.awt.Dialog userInterfaceFrame -> a
    jclass.bwt.JCCheckbox fog -> a
    jclass.bwt.JCCheckbox aa -> b
    jclass.bwt.JCCheckbox shadows -> c
    jclass.bwt.JCCheckbox solidLabels -> d
    jclass.bwt.JCTextField surfaceName -> a
    jclass.bwt.JCSpinBox surfaceQuality -> a
    jclass.bwt.JCSpinBox probeRadius -> b
    jclass.bwt.JCButton surfaceBackgroundColorButton -> a
    int surfaceBackgroundColor -> a
    jclass.bwt.JCTextField schematicName -> b
    jclass.bwt.JCSpinBox schematicQuality -> c
    jclass.bwt.JCOutlinerFolderNode structureBrowser -> a
    jclass.bwt.JCOutliner outliner -> a
    java.awt.Checkbox lightOnOff -> a
    jclass.bwt.JCSlider diffuseSlider -> a
    jclass.bwt.JCSlider specularSlider -> b
    jclass.bwt.JCSlider phongSlider -> c
    jclass.bwt.JCSlider ambientSlider -> d
    java.awt.Checkbox cartoonCB -> b
    jclass.bwt.JCSlider normalSlider -> e
    int activeLight -> b
    astex.Light light -> a
    jclass.bwt.JCSpinBox ribbonWidth -> d
    jclass.bwt.JCSpinBox ribbonMinWidth -> e
    jclass.bwt.JCSpinBox ribbonThickness -> f
    jclass.bwt.JCCheckbox ribbonCylinders -> e
    jclass.bwt.JCCheckbox ribbonEllipse -> f
    jclass.bwt.JCCheckbox allTube -> g
    jclass.bwt.JCSpinBox arrowWidth -> g
    jclass.bwt.JCSpinBox arrowHeadWidth -> h
    jclass.bwt.JCSpinBox arrowThickness -> i
    jclass.bwt.JCSpinBox arrowSmoothing -> j
    jclass.bwt.JCSpinBox tubeWidth -> k
    jclass.bwt.JCSpinBox tubeTaper -> l
    jclass.bwt.JCSpinBox tubeSmoothing -> m
    jclass.bwt.JCCheckboxGroup labelsGB -> c
    jclass.bwt.JCCheckbox[][] justifyCBS -> a
    jclass.bwt.JCCheckbox threedLabels -> h
    jclass.bwt.JCSpinBox stringPoints -> n
    jclass.bwt.JCSpinBox stringSize -> o
    jclass.bwt.JCSpinBox stringRadius -> p
    jclass.bwt.JCSpinBox stringXOff -> q
    jclass.bwt.JCSpinBox stringYOff -> r
    jclass.bwt.JCSpinBox stringZOff -> s
    jclass.bwt.JCTextField currentLabel -> c
    astex.ColorButton stringColorButton -> a
    jclass.bwt.JCSpinBox dmaxSB -> t
    jclass.bwt.JCSpinBox contactSB -> u
    jclass.bwt.JCSpinBox dashSB -> v
    jclass.bwt.JCSpinBox gapSB -> w
    jclass.bwt.JCSpinBox radiusSB -> x
    java.awt.Choice modeChoice -> a
    java.awt.TextField nameTF -> a
    java.awt.TextField labelTF -> b
    astex.ColorButton distanceColorButton -> b
    jclass.bwt.JCSpinBox lineWidth -> y
    jclass.bwt.JCSpinBox cylinderRadius -> z
    jclass.bwt.JCSpinBox ballRadius -> A
    jclass.bwt.JCSpinBox stickRadius -> B
    jclass.bwt.JCSpinBox vdwRadius -> C
    jclass.bwt.JCSpinBox transp -> D
    jclass.bwt.JCButton atomColorButton -> b
    java.awt.Choice labelChoices -> b
    java.awt.Image rainbowImage -> a
    jclass.bwt.JCScrolledWindow objectList -> a
    jclass.bwt.JCContainer objectContainer -> a
    jclass.bwt.JCSpinBox distanceMax -> E
    jclass.bwt.JCSlider frontClip -> f
    jclass.bwt.JCLabel frontValue -> a
    jclass.bwt.JCSlider backClip -> g
    jclass.bwt.JCLabel backValue -> b
    java.awt.Font onOffFont -> a
    java.awt.Dialog colorChooserDialog -> b
    astex.ColorChooser colorChooser -> a
    astex.Format hexFormat -> a
    astex.DynamicArray selectedObjects -> a
    astex.Format f -> b
    java.lang.String[] rainbow -> b
    void setActiveLight(int,astex.Light) -> a
    jclass.bwt.JCContainer createGenerateContainer() -> a
    java.lang.String buildLabelPrefix() -> a
    void addMolecule(astex.Molecule) -> c
    jclass.bwt.JCContainer createSelectionContainer() -> b
    jclass.bwt.JCContainer createModifyContainer() -> c
    jclass.bwt.JCOutliner createBuiltins(java.lang.String) -> a
    void buildBuiltins(jclass.bwt.JCOutlinerFolderNode,nanoxml.XMLElement) -> a
    jclass.bwt.JCButton onOffButton(astex.UserInterface,java.lang.String,java.lang.String) -> a
    void outlinerFolderStateChangeBegin(jclass.bwt.JCOutlinerEvent) -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
    void itemStateChanged(jclass.bwt.JCItemEvent) -> a
    int getColor() -> a
    void actionPerformed(jclass.bwt.JCActionEvent) -> a
    void buildSchematic() -> a
    astex.DynamicArray getSelectedObjects() -> a
    boolean handleRendererEvent(astex.RendererEvent) -> a
    void spinBoxChangeEnd(jclass.bwt.JCSpinBoxEvent) -> a
    void genericAdded$4ea08005(astex.generic.Generic) -> a
    void genericRemoved$4ea08005(astex.generic.Generic) -> b
    void moleculeAdded$6006c790(astex.Molecule) -> a
    void moleculeRemoved$6006c790(astex.Molecule) -> b
    void mapAdded$722af5e2(astex.Map) -> a
    void atomSelected$2d89981b(astex.Atom) -> a
    void adjustmentValueChanged(jclass.bwt.JCAdjustmentEvent) -> a
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
    void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    void windowClosed(java.awt.event.WindowEvent) -> windowClosed
    void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
    void windowDeiconified(java.awt.event.WindowEvent) -> windowDeiconified
    void windowIconified(java.awt.event.WindowEvent) -> windowIconified
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void access$000(astex.UserInterface) -> a
    jclass.bwt.JCTextField access$100(astex.UserInterface) -> a
    void access$200(astex.UserInterface) -> b
    jclass.bwt.JCCheckbox access$300(astex.UserInterface) -> a
    jclass.bwt.JCSpinBox access$400(astex.UserInterface) -> a
    jclass.bwt.JCSpinBox access$500(astex.UserInterface) -> b
    jclass.bwt.JCSpinBox access$600(astex.UserInterface) -> c
    void access$700(astex.UserInterface) -> c
astex.UserInterface$1 -> cz:
    astex.UserInterface this$0 -> a
    void spinBoxChangeEnd(jclass.bwt.JCSpinBoxEvent) -> a
astex.UserInterface$10 -> ct:
    astex.UserInterface this$0 -> a
    void actionPerformed(jclass.bwt.JCActionEvent) -> a
astex.UserInterface$2 -> dc:
    astex.UserInterface this$0 -> a
    void itemStateChanged(jclass.bwt.JCItemEvent) -> a
astex.UserInterface$3 -> cT:
    astex.UserInterface this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
astex.UserInterface$4 -> dj:
    astex.UserInterface this$0 -> a
    void actionPerformed(jclass.bwt.JCActionEvent) -> a
astex.UserInterface$5 -> O:
    astex.UserInterface this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
astex.UserInterface$6 -> H:
    astex.UserInterface this$0 -> a
    void itemStateChanged(jclass.bwt.JCItemEvent) -> a
astex.UserInterface$7 -> E:
    astex.UserInterface this$0 -> a
    void spinBoxChangeEnd(jclass.bwt.JCSpinBoxEvent) -> a
astex.UserInterface$8 -> h:
    astex.UserInterface this$0 -> a
    void spinBoxChangeEnd(jclass.bwt.JCSpinBoxEvent) -> a
astex.UserInterface$9 -> bY:
    astex.UserInterface this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
astex.Util -> cV:
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> a
    java.awt.Frame getFrame(java.awt.Component) -> a
astex.Version -> au:
    int major -> a
    int minor -> b
    int build -> c
    java.lang.String getVersion() -> a
astex.Vertex -> bi:
    int x -> a
    int y -> b
    int z -> c
    int nx -> d
    int ny -> e
    int u -> f
    int v -> g
    int r -> h
    int g -> i
    int b -> j
astex.ViewCommand -> bF:
    int defaultWidth -> b
    int defaultHeight -> c
    int defaultSample -> d
    int stepMultiple -> a
    java.lang.String defaultImage -> a
    boolean defaultCompress -> a
    int[] tempBuffer -> a
    void execute(astex.MoleculeViewer,astex.Arguments) -> a
    void doAntialias(int[],int,int,int) -> a
astex.anasurface.AnaSurface -> bu:
    double[][] xyz -> a
    double[] radius -> a
    double[] radius2 -> b
    double[] rsq -> c
    int[] colors -> a
    astex.DynamicArray[] edgeList -> a
    astex.DynamicArray[] probeList -> b
    astex.DynamicArray[] vertexList -> c
    astex.DynamicArray[] torusList -> d
    int nxyz -> c
    boolean debug -> a
    double defaultProbeRadius -> a
    int defaultQuality -> a
    double probeRadius -> b
    int density -> d
    java.lang.String probesFilename -> a
    astex.DynamicArray probes -> a
    astex.DynamicArray vertices -> b
    astex.DynamicArray edges -> c
    astex.DynamicArray faces -> d
    astex.DynamicArray torii -> e
    int singleFace -> e
    int maximumTorusEdges -> f
    int maximumFaceEdges -> g
    int selfIntersectingTorii -> h
    int selfIntersectingProbes -> i
    int distanceComparisons -> j
    astex.Tmesh tmesh -> a
    double desiredTriangleLength -> c
    double targetLen -> d
    int backgroundColor -> b
    double[] qLength -> d
    boolean[] used -> a
    astex.anasurface.Face convexFace -> a
    astex.anasurface.Face sphereFace -> b
    int[] v0 -> b
    int[] v1 -> c
    int[] euse -> d
    int ecount -> k
    astex.IntArray vArray -> a
    astex.IntArray eArray -> b
    double[] pp0 -> e
    double[] pp1 -> f
    double[] pp2 -> g
    double[] pp3 -> h
    double[] npp0 -> i
    double[] npp1 -> j
    double[] npp2 -> k
    double[] circum -> l
    int[] debugColor -> e
    double EPS -> e
    double[] u -> m
    double[] v -> n
    double[] w -> o
    double[] invertn -> p
    double clipTolerance -> f
    double[] pp -> q
    double[] ccij -> r
    double[] ccji -> s
    double[] tp -> t
    double[] ntp -> u
    int[][] tmeshv -> a
    double[] pp2cij -> v
    double[] pp2cji -> w
    double[] n1 -> x
    double[] n2 -> y
    astex.anasurface.Edge[] torusEdges -> a
    double[] angles -> z
    double[] cij2v -> A
    double[] probe0 -> B
    double[] probe1 -> C
    int cacheSphere -> l
    double[] nnv -> D
    double[] uij -> E
    double[] uik -> F
    double[] tij -> G
    double[] tik -> H
    double[] uijk -> I
    double[] utb -> J
    double[] bijk -> K
    double[] cij -> L
    double[] api -> M
    double[] apj -> N
    double[] apk -> O
    double[] pdir -> P
    double[] edgen -> Q
    double[] otherv -> R
    double[] ab -> S
    double[] bc -> T
    double R_SMALL -> g
    int dotCount -> m
    int[] first -> f
    int[] count -> g
    int[] nn -> h
    int neighbourCount -> n
    int[] commonNeighbours -> i
    int commonCount -> o
    int MAX_SPHERE_POINTS -> p
    int MAX_SPHERE_TRIANGLES -> q
    double[][] sx -> b
    double[][] snx -> c
    double[][] tsx -> d
    int[] clipped -> j
    int[] hull -> k
    int nsp -> r
    int[] si -> l
    int[] sj -> m
    int[] sk -> n
    int[][] vn -> b
    int[] vncount -> o
    int[][] tlist -> c
    int[] tcount -> p
    int nst -> s
    double shortestEdge -> h
    double longestEdge -> i
    double currentLongestEdge -> j
    astex.Tmesh construct() -> a
    void deCuspSurface(astex.Tmesh) -> a
    void triangulateAtoms() -> a
    void triangulate() -> b
    void processIrregularFace(astex.anasurface.Face,int) -> a
    void addBoundaryEdgeIfNeeded(int,int) -> a
    int edgePairCount(int,int) -> a
    int addEdgePair(int,int,boolean) -> a
    void addTriangles(astex.anasurface.Face) -> a
    void meshAddTriangle(int,int,int) -> a
    double intersect$3680b827(double[],double[],double[],double[]) -> a
    void transformSphere(double[],double) -> a
    void processToroidalFace(astex.anasurface.Face) -> b
    double contactCircle(double[],double[],double,double[],double) -> a
    boolean obscured(double[],int,int,int) -> a
    boolean obscured2(double[],int,int,int) -> b
    astex.anasurface.Vertex addVertex(double[],int,double[]) -> a
    astex.anasurface.Edge addEdge(astex.anasurface.Vertex,astex.anasurface.Vertex,astex.anasurface.Torus) -> a
    boolean constructProbePlacement(double[],double,double[],double,double[],double,double,double[],double[]) -> a
    void processPlacement(double[],int,int,int) -> a
    astex.anasurface.Edge constructProbeEdge(astex.anasurface.Vertex,double[],astex.anasurface.Vertex,double[],double[],double[],double) -> a
    void torusAxisUnitVector(double[],double[],double[]) -> a
    double torusCenter(double[],double[],double,double[],double,double) -> a
    void probePosition(double[],double[],double,double[]) -> a
    void constructVertex(double[],double[],double[],double) -> a
    double cross(double[],double[],double[]) -> a
    void negate(double[]) -> a
    double plane_eqn(double[],double[],double[]) -> b
    double dot(double[],double[]) -> b
    void vector(double[],double[],double[]) -> b
    void normalise(double[]) -> b
    void copy(double[],double[]) -> a
    double distance(double[],double[]) -> c
    double distance2(double[],double[]) -> a
    double length(double[]) -> a
    double angle(double[],double[]) -> d
    void print(java.lang.String,int) -> a
    void print(java.lang.String,double) -> a
    int commonElements(int[],int,int,int[],int,int,int[]) -> a
    double distance(double,double,double,double,double,double) -> a
    int getHullCount(int) -> a
    boolean addNeighbour(int,int) -> a
    void addTriangle(int,int,int) -> b
    int findSpherePoint(int,int) -> b
astex.anasurface.Edge -> cc:
    astex.anasurface.Vertex v0 -> a
    astex.anasurface.Vertex v1 -> b
    double[] cen -> a
    double[] n -> b
    astex.anasurface.Face probeFace -> a
astex.anasurface.Face -> bP:
    int type -> b
    double[] iij -> a
    double[] iji -> b
    boolean skip -> a
    double[] cen -> c
    double r -> a
    double startAngle -> b
    double stopAngle -> c
    astex.anasurface.Torus torus -> a
    void add(astex.anasurface.Edge) -> a
astex.anasurface.Probe -> cZ:
    double[] x -> a
    double r -> a
    int bc -> a
    astex.DynamicArray clippingProbes -> a
    void addClippingProbe(astex.anasurface.Probe) -> a
astex.anasurface.Torus -> cK:
    int i -> a
    int j -> b
    double[] tij -> a
    double[] uij -> b
    double[] cij -> c
    double[] cji -> d
    double rcij -> a
    double rcji -> b
    double rij -> c
    double[] uijnorm -> e
    double[] uijnorm2 -> f
    astex.DynamicArray edges -> a
astex.anasurface.Vertex -> bS:
    double[] x -> a
    int i -> a
    int vi -> b
astex.design.ActiveSite -> cx:
    astex.Lattice lattice -> a
    astex.DynamicArray exclusion -> a
    double[] vdwRadii -> a
    double dtol -> a
    double rOffset -> b
    double rmsdWarningLevel -> c
    double rmsdFailLevel -> d
    java.util.Hashtable probeMolecules -> a
    float[] scatterPlot -> a
    int gridOffset -> a
    int[] gmin -> a
    int[] gmax -> b
    int[] included -> c
    double[] contrib -> b
    int scatterPlotCount -> b
    astex.DoubleArray x -> a
    astex.DoubleArray y -> b
    astex.DoubleArray z -> c
    astex.DoubleArray xp -> d
    astex.DoubleArray yp -> e
    astex.DoubleArray zp -> f
    astex.IntArray neighbours -> a
    double[][] xs -> a
    double[] rs -> c
    double[] xe -> d
    astex.Atom[] atomQuad -> a
    void handleCommand(astex.MoleculeViewer,astex.Arguments) -> a
    astex.Map initialiseMap$6ae2fd14(astex.MoleculeViewer,astex.Arguments,astex.Map,astex.DynamicArray) -> a
    void finaliseMap$5c4cffe(astex.MoleculeViewer,java.lang.String,astex.Map) -> a
    void gridPoint(astex.Map,int,int,int,astex.Point3d) -> a
    int gridIndex(astex.Map,int,int,int) -> a
    void mapSuperstarMolecule$2fd4e536(astex.DynamicArray,astex.DynamicArray,double,astex.Map) -> a
    void processSuperstarGroup(astex.MoleculeViewer,astex.Arguments,astex.DynamicArray,java.lang.String,java.lang.String,astex.Map) -> a
    void markUnwantedAtoms(astex.Molecule,boolean) -> a
    void fitSuperstarGroup(astex.MoleculeViewer,astex.Arguments,astex.DynamicArray,astex.DynamicArray,astex.Molecule,astex.Molecule,double,astex.Map) -> a
    void generateTangentSpheres(astex.MoleculeViewer,astex.Arguments,astex.DynamicArray) -> a
    void generateAspMap(astex.MoleculeViewer,astex.Arguments,astex.DynamicArray) -> b
    void incorporatePotential(astex.Map,int,astex.Atom,astex.StringArray,java.util.Hashtable,double) -> a
    void loadPmf(java.util.Hashtable,java.lang.String,java.lang.String) -> a
astex.design.PASS -> bf:
    double Rprobe -> a
    int BCthreshold -> a
    double Rbc -> b
    double Rweed -> c
    double Raccretion -> d
    double R0 -> e
    double D0 -> f
    astex.DynamicArray probes -> a
    astex.DynamicArray newProbes -> b
    astex.Lattice l -> a
    double maxRad -> g
    double[] p0 -> a
    double[] p1 -> b
    astex.IntArray burialNeighbours -> a
    int[] first -> a
    int[] count -> b
    int[] nn -> c
    int neighbourCount -> b
    int[] commonNeighbours -> d
    int commonCount -> c
    astex.Molecule generatePASS(astex.Arguments,astex.DynamicArray) -> a
    boolean obscured2(double[],double,int,int,int) -> a
    int burialCount(double[]) -> a
astex.generic.Generic -> dD:
    java.util.Hashtable properties -> a
    java.util.Vector listeners -> a
    java.lang.Object get(java.lang.Object,java.lang.Object) -> b
    java.lang.Object set(java.lang.Object,java.lang.Object) -> a
    void setClassname(java.lang.String) -> a
    double getDouble(java.lang.Object,double) -> a
    int getInteger(java.lang.Object,int) -> a
    java.lang.String getString(java.lang.Object,java.lang.String) -> a
    boolean getBoolean(java.lang.Object,boolean) -> a
    void setDouble(java.lang.Object,double) -> a
    void setInteger(java.lang.Object,int) -> a
    void setString(java.lang.Object,java.lang.String) -> a
    void setBoolean(java.lang.Object,boolean) -> a
astex.match -> cH:
    boolean matches(java.lang.String,java.lang.String) -> a
    boolean matchExprRecursor(java.lang.String,java.lang.String,int,int,int) -> a
astex.parser.CUP$parser$actions -> dv:
    astex.parser.parser parser -> a
    java_cup.runtime.Symbol CUP$parser$do_action(int,java_cup.runtime.lr_parser,java.util.Stack,int) -> a
astex.parser.Yylex -> aG:
    java.io.BufferedReader yy_reader -> a
    int yy_buffer_index -> a
    int yy_buffer_read -> b
    int yy_buffer_start -> c
    int yy_buffer_end -> d
    char[] yy_buffer -> a
    boolean yy_at_bol -> a
    int yy_lexical_state -> e
    int[] yy_state_dtrans -> a
    java.lang.String[] yy_error_string -> a
    int[] yy_acpt -> b
    int[] yy_cmap -> c
    int[] yy_rmap -> d
    int[][] yy_nxt -> a
    void setInput(java.io.Reader) -> a
    void yy_mark_start() -> a
    void yy_mark_end() -> b
    java.lang.String yytext() -> a
    int[][] unpackFromString(int,int,java.lang.String) -> a
astex.parser.parser -> d:
    short[][] _production_table -> a
    short[][] _action_table -> b
    short[][] _reduce_table -> c
    astex.parser.CUP$parser$actions action_obj -> a
    java.lang.StringBuffer urlContentsBuffer -> a
    astex.MoleculeRenderer renderer -> a
    short[][] production_table() -> a
    short[][] action_table() -> b
    short[][] reduce_table() -> c
    void init_actions() -> a
    java_cup.runtime.Symbol do_action(int,java_cup.runtime.lr_parser,java.util.Stack,int) -> a
    void setMoleculeRenderer(astex.MoleculeRenderer) -> a
astex.splitter.SplitterBar -> aI:
    java.awt.Cursor VERT_CURSOR -> a
    java.awt.Cursor HORIZ_CURSOR -> b
    java.awt.Cursor DEF_CURSOR -> c
    int orientation -> a
    boolean alreadyDrawn -> a
    java.awt.Rectangle originalBounds -> a
    java.awt.Window wBar -> a
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void mouseDrag(java.awt.event.MouseEvent) -> a
    void mouseEnter$161a084() -> a
    void mouseExit$161a084() -> b
    void mouseRelease(java.awt.event.MouseEvent) -> b
    void paint(java.awt.Graphics) -> paint
    void setOrientation(int) -> a
    void update(java.awt.Graphics) -> update
astex.splitter.SplitterBarMouseListener -> aS:
    astex.splitter.SplitterBar s -> a
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
astex.splitter.SplitterBarMouseMotionListener -> P:
    astex.splitter.SplitterBar s -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
astex.splitter.SplitterLayout -> ar:
    astex.splitter.SplitterBar dragee -> a
    int lastW -> a
    int lastH -> b
    boolean newComponentAdded -> a
    java.util.Hashtable relations -> a
    int fieldOrientation -> c
    void addLayoutComponent(java.awt.Component,java.lang.Object) -> addLayoutComponent
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
    java.awt.Dimension checkLayoutSize(java.awt.Container,boolean) -> a
    float getLayoutAlignmentX(java.awt.Container) -> getLayoutAlignmentX
    float getLayoutAlignmentY(java.awt.Container) -> getLayoutAlignmentY
    void invalidateLayout(java.awt.Container) -> invalidateLayout
    void layoutContainer(java.awt.Container) -> layoutContainer
    java.awt.Dimension maximumLayoutSize(java.awt.Container) -> maximumLayoutSize
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    java.lang.String toString() -> toString
astex.splitter.SplitterSpace -> dB:
    java.awt.Dimension getMinimumSize() -> getMinimumSize
    java.awt.Dimension getPreferredSize() -> getPreferredSize
astex.thinlet.ColorChooser -> astex.thinlet.ColorChooser:
astex.thinlet.LightCanvas -> astex.thinlet.LightCanvas:
    astex.MoleculeRenderer moleculeRenderer -> a
    astex.Renderer renderer -> a
    int width -> a
    int height -> b
    int w2 -> c
    int h2 -> d
    int activeLight -> e
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void update(java.awt.Graphics) -> update
    int l2cx(double) -> a
    int l2cy(double) -> b
    void paint(java.awt.Graphics) -> paint
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
astex.thinlet.ObjectEditor -> astex.thinlet.ObjectEditor:
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
    void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    void windowClosed(java.awt.event.WindowEvent) -> windowClosed
    void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
    void windowDeiconified(java.awt.event.WindowEvent) -> windowDeiconified
    void windowIconified(java.awt.event.WindowEvent) -> windowIconified
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
astex.thinlet.ThinletOracle -> astex.thinlet.ThinletOracle:
astex.thinlet.ThinletUI -> astex.thinlet.ThinletUI:
    astex.MoleculeRenderer moleculeRenderer -> a
    java.util.Hashtable components -> a
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
    void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    void windowClosed(java.awt.event.WindowEvent) -> windowClosed
    void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
    void windowDeiconified(java.awt.event.WindowEvent) -> windowDeiconified
    void windowIconified(java.awt.event.WindowEvent) -> windowIconified
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
    java.lang.String readTemplate(java.lang.String) -> a
    void moleculeAdded$6006c790(astex.Molecule) -> a
    void moleculeRemoved$6006c790(astex.Molecule) -> b
    void populateResidues(java.lang.Object,java.lang.Object) -> b
    void sort(java.lang.String[],int) -> a
    void genericAdded$4ea08005(astex.generic.Generic) -> a
    java.lang.String getColorString2(int) -> a
    void genericRemoved$4ea08005(astex.generic.Generic) -> b
    void mapAdded$722af5e2(astex.Map) -> a
    void addMap(java.lang.Object,astex.Map) -> a
    void atomSelected$2d89981b(astex.Atom) -> a
    boolean handleRendererEvent(astex.RendererEvent) -> a
    java.lang.Object createNode(java.lang.String,boolean,java.lang.Object) -> a
    java.lang.Object safeParse(java.lang.String) -> e
    java.lang.Object findComponent(java.lang.String) -> f
astex.thinlet.custom -> astex.thinlet.custom:
astex.thinlet.test -> astex.thinlet.test:
astex.xmt.Forcefield -> ao:
astex.xmt.Manipulator -> c:
    void pick(java.awt.event.MouseEvent,astex.MoleculeViewer,astex.Atom) -> a
    void drag(java.awt.event.MouseEvent,astex.MoleculeViewer,astex.Atom) -> b
    void release$b9dbf05(astex.MoleculeViewer) -> a
astex.xmt.ResidueDictionary -> cY:
    astex.StringArray bond0 -> a
    astex.StringArray bond1 -> b
    astex.DoubleArray bondLength -> a
    astex.DoubleArray bondSigma -> b
    astex.StringArray angle0 -> c
    astex.StringArray angle1 -> d
    astex.StringArray angle2 -> e
    astex.DoubleArray angleValue -> c
    astex.DoubleArray angleSigma -> d
    astex.StringArray improper0 -> f
    astex.StringArray improper1 -> g
    astex.StringArray improper2 -> h
    astex.StringArray improper3 -> i
    astex.DoubleArray improperValue -> e
    astex.DoubleArray improperSigma -> f
    astex.StringArray torsionNames -> j
    astex.DynamicArray torsionAffectedAtoms -> a
    astex.DynamicArray torsionAtoms -> b
    astex.StringArray rotamerNames -> k
    astex.DynamicArray rotamerTorsions -> c
    astex.DynamicArray rotamerValues -> d
    astex.Atom[] atoms -> a
    astex.xmt.ResidueDictionary createDictionary(astex.Residue) -> a
    void processRings(astex.Residue,astex.xmt.ResidueDictionary) -> a
    void addImpropers(astex.Atom,astex.xmt.ResidueDictionary) -> a
    int findTorsionNumber(java.lang.String) -> a
    int getRotamerIndex(java.lang.String) -> b
    int getRotamerCount() -> a
    astex.StringArray getRotamerTorsionNames() -> a
astex.xmt.Skeleton -> Z:
    int[] grid -> a
    float[] data -> a
    int[] status -> b
    int[] qlist -> c
    int[] index -> d
    int qcount -> a
    astex.Atom[] atoms -> a
    int[] offsets -> e
    int gridPointCount -> b
    int[] ijk -> f
    int quickChecks -> c
    int longChecks -> d
    astex.Point3d lastCenter -> a
    void IJK(int,int[]) -> a
    int INDEX(int,int,int) -> a
    boolean valid(int,int,int) -> a
    boolean allNeighboursValid(int,int,int) -> b
    void add2q(int,int,int) -> a
    boolean checkNeighbours(int,int,int,int,int,int,int) -> a
    void propagateSearch(int,int,int,int,int) -> a
    int a(int,int,int) -> b
    void indexSort(float[],int[],int,int) -> a
    int execute(astex.MoleculeViewer,astex.Arguments) -> a
astex.xmt.XMT -> e:
    java.util.Hashtable residueDictionaries -> a
    astex.DynamicArray torsionTerms -> a
    astex.Atom[] atoms -> a
    java.util.Stack undoCoordinates -> a
    void run() -> run
    void setTorsionAngle(astex.Atom,astex.Atom,astex.Atom,astex.Atom,astex.DynamicArray,double) -> a
    void editResidueRotamer(astex.Residue,astex.xmt.ResidueDictionary,int) -> a
    void examineResidue$5ffb7a8f(astex.Residue) -> a
    void showResidueTorsions(astex.MoleculeViewer) -> a
    void getTorsionAtoms(astex.Residue,astex.xmt.ResidueDictionary,java.lang.String,astex.DynamicArray,astex.DynamicArray) -> a
    astex.xmt.ResidueDictionary getResidueDictionary(astex.Residue) -> a
    boolean checkRotamer(astex.Residue,astex.xmt.ResidueDictionary,int) -> a
    boolean restoreCoordinates() -> a
astex.xmt.XMTManipulator -> bh:
    java.awt.event.MouseEvent lastMouseEvent -> a
    astex.Point3d p -> a
    void pick(java.awt.event.MouseEvent,astex.MoleculeViewer,astex.Atom) -> a
    void drag(java.awt.event.MouseEvent,astex.MoleculeViewer,astex.Atom) -> b
    void release$b9dbf05(astex.MoleculeViewer) -> a
astex.xmt.XMTManipulator2 -> af:
    java.awt.event.MouseEvent lastMouseEvent -> a
    boolean optimizing -> a
    void pick(java.awt.event.MouseEvent,astex.MoleculeViewer,astex.Atom) -> a
    void drag(java.awt.event.MouseEvent,astex.MoleculeViewer,astex.Atom) -> b
    void release$b9dbf05(astex.MoleculeViewer) -> a
astex.xmt.XMTUserInterface -> bA:
    astex.MoleculeRenderer moleculeRenderer -> a
    astex.MoleculeViewer moleculeViewer -> a
    java.awt.Choice rotamerChoice -> a
    jclass.bwt.JCCheckbox closeContacts -> a
    jclass.bwt.JCCheckbox energyCB -> b
    jclass.bwt.JCCheckbox simplexCB -> c
    jclass.bwt.JCCheckbox ramachandranCB -> d
    jclass.bwt.JCCheckbox densityCB -> e
    jclass.bwt.JCCheckbox sculptCB -> f
    jclass.bwt.JCCheckbox restrainedCB -> g
    jclass.bwt.JCCheckbox featureizeCB -> h
    jclass.bwt.JCCheckbox skeletonizeCB -> i
    jclass.bwt.JCButton flipB -> a
    jclass.bwt.JCComboBox conformationCount -> a
    jclass.bwt.JCComboBox iterationCount -> b
    jclass.bwt.JCComboBox tolerance -> c
    jclass.bwt.JCComboBox kTComboBox -> d
    jclass.bwt.JCComboBox debugLevel -> e
    java.awt.Choice fragmentChoice -> b
    astex.Residue currentResidue -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
    void itemStateChanged(jclass.bwt.JCItemEvent) -> a
    void populateFragmentChoice(java.awt.Choice) -> a
    void actionPerformed(jclass.bwt.JCActionEvent) -> a
    void optimizeTorsions(int) -> a
java_cup.runtime.Symbol -> di:
    int sym -> a
    int parse_state -> b
    boolean used_by_parser -> a
    int left -> c
    int right -> d
    java.lang.Object value -> a
    java.lang.String toString() -> toString
java_cup.runtime.lr_parser -> aC:
    boolean _done_parsing -> a
    int tos -> a
    java_cup.runtime.Symbol cur_token -> a
    java.util.Stack stack -> a
    short[][] production_tab -> a
    short[][] action_tab -> b
    short[][] reduce_tab -> c
    astex.parser.Yylex _scanner$66a082aa -> a
    java_cup.runtime.Symbol[] lookahead -> a
    int lookahead_pos -> b
    short[][] production_table() -> a
    short[][] action_table() -> b
    short[][] reduce_table() -> c
    void done_parsing() -> b
    java_cup.runtime.Symbol do_action(int,java_cup.runtime.lr_parser,java.util.Stack,int) -> a
    void init_actions() -> a
    java_cup.runtime.Symbol scan() -> b
    void report_fatal_error(java.lang.String,java.lang.Object) -> a
    void report_error(java.lang.String,java.lang.Object) -> b
    short get_action(int,int) -> a
    short get_reduce(int,int) -> b
    java_cup.runtime.Symbol parse() -> a
    boolean error_recovery(boolean) -> a
    void read_lookahead() -> c
    java_cup.runtime.Symbol cur_err_token() -> c
    boolean advance_lookahead() -> a
    void restart_lookahead() -> d
    boolean try_parse_ahead(boolean) -> b
    void parse_lookahead(boolean) -> a
    short[][] unpackFromStrings(java.lang.String[]) -> a
java_cup.runtime.virtual_parse_stack -> aV:
    java.util.Stack real_stack -> a
    int real_next -> a
    java.util.Stack vstack -> b
    void get_from_real() -> b
    int top() -> a
    void pop() -> a
    void push(int) -> a
jclass.base.BaseComponent -> V:
    java.applet.Applet applet -> a
    java.applet.AppletContext applet_context -> a
    boolean in_repaint -> g
    boolean needs_layout -> h
    int border -> n
    int border_style -> o
    boolean clipToScreen -> a
    java.lang.Object LOCK -> b
    boolean double_buffer -> i
    boolean has_focus -> j
    java.lang.Object userdata -> a
    java.awt.Insets insets -> a
    boolean do_repaint -> k
    java.awt.Rectangle paint_rect -> b
    java.awt.Image dblbuffer_image -> a
    java.awt.Graphics dblbuffer_image_gc -> a
    boolean realized -> b
    java.awt.Rectangle rect -> c
    java.util.Hashtable images -> a
    java.lang.Object getAWTLock() -> b
    void setBackground(java.awt.Color) -> setBackground
    void setForeground(java.awt.Color) -> setForeground
    int getBorderThickness() -> f
    void setBorderThickness(int) -> h
    int getBorderStyle() -> g
    void setBorderStyle(int) -> i
    void setInsets(java.awt.Insets) -> a
    java.awt.Insets getInsets() -> a
    java.awt.Frame getFrame() -> a
    java.lang.Object getUserData() -> c
    int getUserDataInt() -> h
    void setUserData(java.lang.Object) -> c
    java.awt.Image getDoubleBufferImage() -> a
    java.awt.Graphics getDoubleBufferGraphics() -> a
    boolean isShowing() -> isShowing
    void repaint() -> repaint
    void repaint(java.awt.Rectangle) -> a
    void paintImmediately(int,int,int,int) -> a
    void paint(java.awt.Graphics) -> paint
    void repaint(int,int,int,int) -> repaint
    void update(java.awt.Graphics) -> update
    void updateParent() -> d
    void paintComponent(java.awt.Graphics) -> a
    void fillBackground(java.awt.Graphics) -> b
    boolean intersects(java.awt.Rectangle,int) -> a
    void printAll(java.awt.Graphics) -> printAll
    void addNotify() -> addNotify
    void removeNotify() -> removeNotify
    java.applet.AppletContext getAppletContext() -> a
    boolean getDoubleBuffer() -> a
    void setDoubleBuffer(boolean) -> c
    boolean hasFocus() -> hasFocus
    boolean lostFocus102(java.awt.Event,java.lang.Object) -> a
    boolean gotFocus102(java.awt.Event,java.lang.Object) -> b
    void processFocusEvent(java.awt.event.FocusEvent) -> processFocusEvent
    void validate() -> validate
    java.awt.Image createImage(int,int) -> createImage
    void copyArea(java.awt.Graphics,int,int,int,int,int,int) -> a
    java.awt.Image createImage(java.awt.Component,java.awt.Image,int,int) -> a
    java.awt.Image createImage(java.awt.Component,int,int) -> a
    java.awt.Point translateToParent(java.awt.Container,java.awt.Component,int,int) -> a
    java.awt.Point translateFromParent(java.awt.Container,java.awt.Component,int,int) -> b
    java.awt.Window getWindow(java.awt.Component) -> a
    void setApplet(java.applet.Applet) -> a
    java.applet.Applet getApplet() -> a
    java.applet.Applet getApplet(java.awt.Component) -> a
    java.applet.AppletContext getAppletContext(java.applet.Applet) -> a
jclass.base.Border -> br:
    java.awt.Color WHITE_BRIGHTER -> a
    java.awt.Color WHITE_DARKER -> b
    java.awt.Color BLACK_BRIGHTER -> c
    java.awt.Color BLACK_DARKER -> d
    void drawBottomLines(java.awt.Graphics,int,int,int,int,int,java.awt.Color) -> a
    void drawNormal(java.awt.Graphics,int,int,int,int,int,java.awt.Color,java.awt.Color) -> a
    java.awt.Color brighter(java.awt.Color) -> a
    java.awt.Color darker(java.awt.Color) -> b
    void draw(java.awt.Graphics,int,int,int,int,int,int,java.awt.Color,java.awt.Color) -> a
    void draw(java.awt.Graphics,int,int,int,int,int,int,java.awt.Color,java.awt.Color,java.awt.Color) -> a
jclass.base.TransientComponent -> ca:
    long popdown_event_timestamp -> a
    long mouse_down_event_timestamp -> b
    int highlight -> p
    java.awt.Color highlight_color -> c
    int pref_width -> a
    int pref_height -> b
    boolean traversable -> l
    java.awt.Graphics draw_gc -> a
    int[][] keyCodes -> a
    boolean ignoreNextEvent -> a
    void processFocusEvent(java.awt.event.FocusEvent) -> processFocusEvent
    java.awt.Event convertEvent(java.awt.Component,java.awt.event.KeyEvent) -> a
    boolean isBustedVM() -> c
    void processKeyEvent(java.awt.event.KeyEvent) -> processKeyEvent
    void processMouseEvent(java.awt.event.MouseEvent) -> processMouseEvent
    void processMouseMotionEvent(java.awt.event.MouseEvent) -> processMouseMotionEvent
    int getPreferredWidthInternal() -> i
    int getPreferredHeightInternal() -> j
    java.awt.Dimension preferredSize() -> preferredSize
    java.awt.Dimension minimumSize() -> minimumSize
    int preferredWidth() -> b
    int preferredHeight() -> c_
    void setPreferredSize(int,int) -> e
    void setPreferredSize(java.awt.Dimension) -> a
    void enable() -> enable
    void disable() -> disable
    void drawHighlight(boolean) -> a
    void drawHighlight(java.awt.Graphics,boolean) -> a
    void drawHighlightAndBorder(java.awt.Graphics) -> d
    boolean gotFocus102(java.awt.Event,java.lang.Object) -> b
    void reshape(int,int,int,int) -> reshape
    void layout() -> layout
    boolean isTraversable() -> b
    boolean isFocusTraversable() -> isFocusTraversable
    void setTraversable(boolean) -> d
    int getHighlightThickness() -> k
    void setHighlightThickness(int) -> j
    java.awt.Color getHighlightColor() -> b
    void setHighlightColor(java.awt.Color) -> a
    java.awt.Rectangle getPaintRect() -> a
    void paint(java.awt.Graphics) -> paint
    java.awt.Rectangle getDrawingArea() -> b
    void getDrawingArea(java.awt.Rectangle) -> b
    int getDrawingAreaHeight() -> l
    int getDrawingAreaWidth() -> m
    void drawBorder(java.awt.Graphics) -> c
    boolean lostFocus102(java.awt.Event,java.lang.Object) -> a
jclass.bwt.AdjustableObject -> k:
    int getOrientation() -> getOrientation
    void setMinimum(int) -> setMinimum
    int getMinimum() -> getMinimum
    void setMaximum(int) -> setMaximum
    int getMaximum() -> getMaximum
    void setUnitIncrement(int) -> setUnitIncrement
    int getUnitIncrement() -> getUnitIncrement
    void setBlockIncrement(int) -> setBlockIncrement
    int getBlockIncrement() -> getBlockIncrement
    void setVisibleAmount(int) -> setVisibleAmount
    int getVisibleAmount() -> getVisibleAmount
    void setValue(int) -> setValue
    int getValue() -> getValue
    void addAdjustmentListener(java.awt.event.AdjustmentListener) -> addAdjustmentListener
    void removeAdjustmentListener(java.awt.event.AdjustmentListener) -> removeAdjustmentListener
jclass.bwt.ArrowButtonConverter -> cm:
    int[] orientation_values -> a
    java.lang.String[] orientation_strings -> a
    void getParams(jclass.bwt.JCArrowButton) -> a
    void checkOrientation(int) -> a
jclass.bwt.BWTUtil -> x:
    int[] copyList(int[],int,int) -> a
    boolean[] copyList(boolean[],int,boolean) -> a
    java.awt.Image createImage(java.awt.Component,int,int) -> a
    boolean instanceOf(java.lang.Object,java.lang.String) -> a
    int getWidth(java.lang.Object,java.awt.Component) -> a
    int getWidth(java.lang.Object,java.awt.Component,java.awt.Font) -> a
    int stringWidth(java.awt.FontMetrics,java.awt.Font,java.lang.String) -> a
    int getHeight(java.lang.Object,java.awt.Component) -> b
    int getHeight(java.lang.Object,java.awt.Component,java.awt.Font) -> b
    java.lang.String toString(java.lang.Object) -> a
    boolean startsWith(java.lang.Object,char) -> a
    boolean isRight(int) -> a
    boolean isCenter(int) -> b
    boolean isMiddle(int) -> c
    boolean isBottom(int) -> d
    void draw(java.awt.Component,java.awt.Graphics,java.lang.Object,int,java.awt.Rectangle) -> a
    void drawDashedLine(java.awt.Graphics,int,int,int,int) -> b
    void drawDashedRect(java.awt.Graphics,int,int,int,int) -> a
    int getMouseButton(java.awt.Event) -> a
    void setCursor(java.awt.Component,int) -> a
jclass.bwt.CheckboxConverter -> aN:
    int[] indicator_values -> a
    java.lang.String[] indicator_strings -> a
    void getParams(jclass.bwt.JCCheckbox) -> a
    void checkIndicator(int) -> a
jclass.bwt.CheckboxGroupConverter -> i:
    java.lang.String[] orient_strings -> a
    int[] orient_values -> a
    void getParams(jclass.bwt.JCCheckboxGroup) -> a
jclass.bwt.ComboBoxConverter -> ad:
    int[] style_values -> a
    java.lang.String[] style_strings -> a
    void getParams(jclass.bwt.JCComboBox) -> a
    void checkStyle(int) -> a
jclass.bwt.ComboDialog -> dh:
    jclass.bwt.JCComboBox combo -> a
    boolean handleEvent(java.awt.Event) -> handleEvent
jclass.bwt.ComboField -> dr:
    jclass.bwt.JCComboBox combo -> a
    void drawHighlight(java.awt.Graphics,boolean) -> a
    boolean mouseDown(java.awt.Event,int,int) -> mouseDown
    void setText(java.lang.String) -> a
    boolean keyDown(java.awt.Event,int) -> keyDown
    boolean insertChar(java.awt.Event,int) -> a
jclass.bwt.ComboList -> bb:
    jclass.bwt.JCComboBox box -> a
    boolean exited -> a
    boolean bg_set -> b
    boolean fg_set -> c
    boolean fn_set -> d
    void setBackground(java.awt.Color) -> setBackground
    void setForeground(java.awt.Color) -> setForeground
    void setFont(java.awt.Font) -> setFont
    boolean mouseMove(java.awt.Event,int,int) -> mouseMove
    boolean mouseEnter(java.awt.Event,int,int) -> mouseEnter
    boolean mouseExit(java.awt.Event,int,int) -> mouseExit
jclass.bwt.ComboListComponent -> bm:
    jclass.bwt.ComboList combo_list -> a
    boolean keyDown(java.awt.Event,int) -> keyDown
    boolean lostFocus(java.awt.Event,java.lang.Object) -> lostFocus
    boolean mouseMove(java.awt.Event,int,int) -> mouseMove
    boolean mouseUp(java.awt.Event,int,int) -> mouseUp
jclass.bwt.ComboListMouseListener -> cS:
    jclass.bwt.ComboList list -> a
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
jclass.bwt.Focus -> dm:
    boolean isTraversable(java.awt.Component) -> a
jclass.bwt.GroupBoxConverter -> B:
    void getParams(jclass.bwt.JCGroupBox) -> a
jclass.bwt.HeaderButton -> aw:
    jclass.bwt.JCHeader header -> a
    int direction -> d
    void drawHighlight(java.awt.Graphics,boolean) -> a
    boolean mouseMove(java.awt.Event,int,int) -> mouseMove
    boolean mouseExit(java.awt.Event,int,int) -> mouseExit
    boolean mouseDown(java.awt.Event,int,int) -> mouseDown
    boolean mouseDrag(java.awt.Event,int,int) -> mouseDrag
    boolean mouseUp(java.awt.Event,int,int) -> mouseUp
jclass.bwt.HeaderLabel -> cB:
    jclass.bwt.JCHeader header -> a
    boolean mouseMove(java.awt.Event,int,int) -> mouseMove
    boolean mouseExit(java.awt.Event,int,int) -> mouseExit
    boolean mouseDown(java.awt.Event,int,int) -> mouseDown
    boolean mouseDrag(java.awt.Event,int,int) -> mouseDrag
    boolean mouseUp(java.awt.Event,int,int) -> mouseUp
jclass.bwt.Indicator -> du:
    java.lang.String[] box_pixels -> a
    java.lang.String[] cross_pixels -> b
    java.lang.String[] mixed_cross_pixels -> c
    java.lang.String[] check_pixels -> d
    java.lang.String[] mixed_check_pixels -> e
    java.lang.String[] circle_pixels -> f
    java.lang.String[] circle_empty_pixels -> g
    java.lang.String[] diamond_pixels -> h
    void draw(jclass.bwt.JCCheckbox,java.awt.Graphics) -> a
    void drawImage(jclass.bwt.JCCheckbox,java.awt.Graphics,java.lang.String[],java.awt.Image,int) -> a
    java.awt.Color getFillColor(jclass.bwt.JCCheckbox) -> a
    void drawBox(jclass.bwt.JCCheckbox,java.awt.Graphics) -> b
jclass.bwt.ItemSelectableObject -> cA:
    java.lang.Object[] getSelectedObjects() -> getSelectedObjects
    void addItemListener(java.awt.event.ItemListener) -> addItemListener
    void removeItemListener(java.awt.event.ItemListener) -> removeItemListener
jclass.bwt.JCAWTEvent -> dq:
jclass.bwt.JCActionEvent -> cC:
jclass.bwt.JCActionListener -> bK:
    void actionPerformed(jclass.bwt.JCActionEvent) -> a
jclass.bwt.JCAdjustmentEvent -> bH:
    java.awt.Adjustable adj -> a
jclass.bwt.JCAdjustmentListener -> A:
    void adjustmentValueChanged(jclass.bwt.JCAdjustmentEvent) -> a
jclass.bwt.JCArrowButton -> dC:
    int orientation -> d
    java.awt.Dimension arrow_size -> a
    int initial_delay -> f
    java.lang.Thread thread -> a
    boolean thread_stop -> b
    int thread_counter -> g
    int tn -> h
    java.awt.Color border_color -> a
    java.awt.Color right_border_color -> b
    int nameCounter -> i
    void getParameters() -> a
    void setBackground(java.awt.Color) -> setBackground
    void setOrientation(int) -> a
    int preferredWidth() -> b
    int preferredHeight() -> c_
    void drawHighlight(java.awt.Graphics,boolean) -> a
    void drawBorder(java.awt.Graphics) -> c
    void paintComponent(java.awt.Graphics) -> a
    void getDrawingArea(java.awt.Rectangle) -> b
    void disable() -> disable
    void armAction(java.awt.Event) -> a
    void disarmAction(java.awt.Event) -> b
    boolean mouseDrag(java.awt.Event,int,int) -> mouseDrag
    boolean mouseMove(java.awt.Event,int,int) -> mouseMove
    boolean mouseDown(java.awt.Event,int,int) -> mouseDown
    boolean mouseUp(java.awt.Event,int,int) -> mouseUp
    void run() -> run
jclass.bwt.JCButton -> bL:
    java.lang.Object arm_label -> c
    boolean armed -> a
    int old_shadowtype -> d
    java.lang.String actionCommand -> b
    boolean inside_button -> b
    boolean is_action_button -> c
    jclass.util.JCVector actionListeners -> a
    jclass.util.JCVector buttonListeners -> b
    int nameCounter -> f
    int arm_offset -> e
    void getParameters() -> a
    void addActionListener(jclass.bwt.JCActionListener) -> a
    void armAction(java.awt.Event) -> a
    void disarmAction(java.awt.Event) -> b
    void clickAction(java.awt.Event) -> c
    void layout() -> layout
    void drawValue(java.awt.Graphics,java.lang.Object) -> a
    void drawHighlight(java.awt.Graphics,boolean) -> a
    boolean mouseEnter(java.awt.Event,int,int) -> mouseEnter
    boolean mouseExit(java.awt.Event,int,int) -> mouseExit
    boolean mouseMove(java.awt.Event,int,int) -> mouseMove
    boolean mouseDrag(java.awt.Event,int,int) -> mouseDrag
    boolean mouseDown(java.awt.Event,int,int) -> mouseDown
    boolean mouseUp(java.awt.Event,int,int) -> mouseUp
    boolean keyDown(java.awt.Event,int) -> keyDown
    int preferredWidth() -> b
    int preferredHeight() -> c_
jclass.bwt.JCButtonEvent -> cf:
jclass.bwt.JCCheckbox -> dA:
    int indicator -> d
    java.awt.Image[] image_list -> a
    java.awt.Color select_color -> a
    java.awt.Color unselect_color -> b
    jclass.bwt.JCCheckboxGroup group -> a
    boolean armed -> b
    int state -> e
    int num_states -> f
    int old_state -> k
    int new_state -> l
    int nameCounter -> m
    int label_offset -> q
    int ind_height -> g
    int ind_width -> h
    int ind_x -> i
    int ind_y -> j
    boolean indicator_set -> a
    jclass.util.JCVector itemListeners -> a
    void getParameters() -> a
    jclass.bwt.JCCheckboxGroup makeGroup(java.lang.Object[],int[],boolean) -> a
    void setIndicator(int) -> a
    void setSelectColor(java.awt.Color) -> b
    void setUnselectColor(java.awt.Color) -> c
    void setState(int) -> b
    void setIndicatorSize() -> b
    void addNotify() -> addNotify
    void layout() -> layout
    void drawHighlight(java.awt.Graphics,boolean) -> a
    void paintComponent(java.awt.Graphics) -> a
    void drawIndicator(java.awt.Graphics) -> d
    int preferredWidth() -> b
    int preferredHeight() -> c_
    void addItemListener(jclass.bwt.JCItemListener) -> a
    void armAction$45a7f028() -> c
    void clickAction(java.awt.Event) -> a
    boolean mouseExit(java.awt.Event,int,int) -> mouseExit
    boolean mouseEnter(java.awt.Event,int,int) -> mouseEnter
    boolean mouseDown(java.awt.Event,int,int) -> mouseDown
    boolean mouseUp(java.awt.Event,int,int) -> mouseUp
    boolean keyDown(java.awt.Event,int) -> keyDown
jclass.bwt.JCCheckboxGroup -> R:
    jclass.util.JCVector boxes -> a
    jclass.bwt.JCCheckbox current -> a
    int orientation -> a
    boolean radio_behavior -> a
    jclass.util.JCVector itemListeners -> b
    int nameCounter -> c
    void getParameters() -> a
    java.awt.Component add(jclass.bwt.JCCheckbox) -> a
    void manage(jclass.bwt.JCCheckbox) -> a
    jclass.bwt.JCCheckbox getCheckbox(int) -> a
    void setOrientation(int) -> a
    jclass.bwt.JCCheckbox getCurrent() -> a
    void setCurrent(jclass.bwt.JCCheckbox) -> b
    void setRadioBehavior(boolean) -> a
    int getValue() -> c
    void addNotify() -> addNotify
jclass.bwt.JCComboBox -> Q:
    jclass.bwt.ComboField text -> a
    jclass.bwt.ComboList list -> a
    jclass.bwt.JCArrowButton button -> a
    int style -> a
    long list_popdown_time -> b
    long list_poppedup_time -> a
    boolean arrow_key_spinning_allowed -> b
    boolean list_poppedup -> a
    boolean using_window -> c
    java.awt.Window list_window -> a
    java.awt.Component list_child -> a
    jclass.bwt.JCListEvent last_list_event -> a
    int border -> b
    jclass.util.JCVector itemListeners -> a
    jclass.util.JCVector actionListeners -> b
    jclass.util.JCVector listeners -> c
    int nameCounter -> c
    jclass.bwt.JCComboBox last_to_lose_focus -> a
    boolean visible_rows_set -> d
    java.awt.event.WindowListener windowListener -> a
    int last_key -> d
    java.lang.Object getLastToLoseFocus() -> a
    void getParameters() -> a
    java.lang.String getText() -> b
    void setStyle(int) -> a
    void removeAll() -> removeAll
    java.lang.String getSelectedItem() -> a
    int getSelectedIndex() -> c
    int preferredWidth() -> a
    int preferredHeight() -> b
    void setListProperties() -> d
    void addNotify() -> addNotify
    void removeNotify() -> removeNotify
    void requestFocus() -> requestFocus
    void setBackground(java.awt.Color) -> setBackground
    void setForeground(java.awt.Color) -> setForeground
    void layout() -> layout
    void translatePointFromScreen(java.awt.Point,java.awt.Component) -> a
    void showListAction$728b4daa() -> b
    void hidePopup() -> c
    void setTextAction(java.lang.String) -> a
    jclass.bwt.JCComboBoxEvent postComboBoxEvent(int,java.lang.Object) -> a
    void itemStateChanged(jclass.bwt.JCItemEvent) -> a
    int getNextAutoSearchIndex(java.awt.Event,int) -> a
    boolean keyDown(java.awt.Event,int) -> keyDown
    void actionPerformed(jclass.bwt.JCActionEvent) -> a
    void listItemSelectEnd(jclass.bwt.JCListEvent) -> a
    void setLayout(java.awt.LayoutManager) -> setLayout
    void paintInterior(java.awt.Graphics) -> a
    void addKeyListener(java.awt.event.KeyListener) -> addKeyListener
    void removeKeyListener(java.awt.event.KeyListener) -> removeKeyListener
    void addFocusListener(java.awt.event.FocusListener) -> addFocusListener
    void removeFocusListener(java.awt.event.FocusListener) -> removeFocusListener
    boolean isEditable() -> a
    void checkButton() -> e
jclass.bwt.JCComboBox$ComboPopupWindowListener -> I:
    jclass.bwt.JCComboBox this$0 -> a
    void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
jclass.bwt.JCComboBox$ComboWindowListener -> cy:
    jclass.bwt.JCComboBox this$0 -> a
    void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    void windowDeiconified(java.awt.event.WindowEvent) -> windowDeiconified
    void windowClosed(java.awt.event.WindowEvent) -> windowClosed
jclass.bwt.JCComboBoxEvent -> bk:
    java.lang.Object value -> a
jclass.bwt.JCComboBoxListener -> an:
jclass.bwt.JCComponent -> bv:
    java.lang.String version -> a
    jclass.util.JCConverter conv -> a
    java.lang.String getParam(java.lang.String) -> a
    void getParameters() -> a
    void getParameters(java.applet.Applet) -> b
    void addNotify() -> addNotify
    void setFont(java.awt.Font) -> setFont
    void setBackground(java.awt.Color) -> setBackground
    void setForeground(java.awt.Color) -> setForeground
    void setHighlightThickness(int) -> j
    void setHighlightColor(java.awt.Color) -> a
    void setInsets(java.awt.Insets) -> a
    void setCursor(int) -> k
    void setDoubleBuffer(boolean) -> c
    boolean mouseDown(java.awt.Event,int,int) -> mouseDown
    void requestFocus() -> requestFocus
    boolean keyDown(java.awt.Event,int) -> keyDown
    void setBounds(java.awt.Component,int,int,int,int) -> a
    void setBounds(java.awt.Rectangle,int,int,int,int) -> a
    java.awt.Dimension getPreferredSize(java.awt.Component) -> a
    java.awt.Insets getInsets(java.awt.Container) -> a
jclass.bwt.JCContainer -> bw:
    java.applet.Applet applet -> a
    java.awt.Image dblbuffer_image -> a
    jclass.util.JCConverter conv -> a
    int pref_width -> i
    int pref_height -> j
    java.awt.Insets insets -> a
    boolean in_pref_size -> a
    boolean double_buffer -> e
    java.awt.Rectangle paint_rect -> a
    boolean has_focus -> f
    boolean hasFocus() -> hasFocus
    java.lang.String getParam(java.lang.String) -> a
    void getParameters() -> a
    void getParameters(java.applet.Applet) -> a
    void requestFocus() -> requestFocus
    java.awt.Component add(java.awt.Component) -> add
    void addImpl(java.awt.Component,java.lang.Object,int) -> addImpl
    void enable() -> enable
    void disable() -> disable
    boolean isShowing() -> isShowing
    void setBackground(java.awt.Color) -> setBackground
    void setForeground(java.awt.Color) -> setForeground
    void repaint() -> repaint
    void repaint(java.awt.Rectangle) -> a
    void repaint(int,int,int,int) -> repaint
    void updateParent() -> a_
    void addNotify() -> addNotify
    void setInsets(java.awt.Insets) -> a
    java.awt.Insets insets() -> insets
    int preferredWidth() -> a
    int preferredHeight() -> b
    void setPreferredSize(int,int) -> e
    java.awt.Dimension preferredSize() -> preferredSize
    void reshape(int,int,int,int) -> reshape
    void setCursor(int) -> c
    java.awt.Component getComponent(int) -> getComponent
    int getComponent(java.awt.Component) -> a
    java.awt.Graphics getDoubleBufferGraphics() -> a
    void paintInterior(java.awt.Graphics) -> a
    void fillBackground(java.awt.Graphics) -> b
    java.awt.Rectangle getPaintRect() -> a
    void paint(java.awt.Graphics) -> paint
    void printAll(java.awt.Graphics) -> printAll
    void processMouseEvent(java.awt.event.MouseEvent) -> processMouseEvent
    void processMouseMotionEvent(java.awt.event.MouseEvent) -> processMouseMotionEvent
jclass.bwt.JCContainer$ContainerFocusListener -> dp:
    jclass.bwt.JCContainer this$0 -> a
    void focusGained(java.awt.event.FocusEvent) -> focusGained
    void focusLost(java.awt.event.FocusEvent) -> focusLost
jclass.bwt.JCEventListener -> dz:
jclass.bwt.JCGridLayout -> aH:
jclass.bwt.JCGroupBox -> bZ:
    int shadow -> b
    int title_align -> a
    java.lang.Object title -> a
    int title_width -> c
    int title_height -> d
    java.awt.Rectangle title_rect -> a
    int nameCounter -> e
    int[] align_values -> a
    void getParameters() -> a
    void setTitle(java.lang.Object) -> a
    void addNotify() -> addNotify
    void calcTitleSize() -> c
    void layout() -> layout
    void reshape(int,int,int,int) -> reshape
    java.awt.Insets insets() -> insets
    void paintInterior(java.awt.Graphics) -> a
    int preferredWidth() -> a
jclass.bwt.JCHeader -> aQ:
    jclass.bwt.JCMultiColumnData data -> a
    jclass.bwt.JCMultiColumnInterface comp -> a
    int resize_col -> a
    boolean resizing -> a
    boolean num_columns_set -> b
    boolean update_parent -> c
    boolean batched -> d
    jclass.util.JCVector actionListeners -> a
    int nameCounter -> b
    int mouse_down_x -> c
    int x_save -> d
    void getParameters() -> a
    void setFont(java.awt.Font) -> setFont
    void setMultiColumnComponent(jclass.bwt.JCMultiColumnInterface) -> a
    jclass.bwt.JCComponent[] getLabels() -> a
    void setColumnLabels(jclass.util.JCVector) -> a
    void setLabels(jclass.util.JCVector) -> b
    void setColumnButtons(jclass.util.JCVector) -> c
    void setButtons(jclass.util.JCVector) -> d
    void updateParent() -> a_
    void addNotify() -> addNotify
    void layout() -> layout
    void recalc() -> c
    int preferredHeight() -> b
    int firstColumnOffset() -> e
    int preferredWidth() -> a
    java.awt.Dimension preferredSize() -> preferredSize
    void addActionListener(jclass.bwt.JCActionListener) -> a
    boolean mouseMove(java.awt.Event) -> a
    boolean mouseExit$45a7f02c() -> a
    boolean mouseDown(java.awt.Event) -> b
    boolean mouseDrag(java.awt.Event) -> c
    boolean mouseUp(java.awt.Event) -> d
    boolean mouseExit(java.awt.Event,int,int) -> mouseExit
    void drawLine(boolean,int) -> a
    int calcWidth(int) -> a
    int[] getColumnWidths() -> a
    int getColumnDisplayWidth(int) -> b
    void setColumnWidth(int,int) -> a
    int getNumColumns() -> c
    void setNumColumns(int) -> a
    int[] getColumnAlignments() -> b
    int getColumnAlignment(int) -> c
    void setColumnAlignments(int[]) -> a
    int getColumnPosition(int) -> d
    int getColumnLeftMargin(int) -> e
    void setColumnLeftMargin(int,int) -> b
    int getColumnRightMargin(int) -> f
    void setColumnRightMargin(int,int) -> c
    jclass.bwt.JCMultiColumnData getMultiColumnData() -> a
    int[] getColumnDisplayWidths() -> c
    int getColumnWidth(int) -> g
    void setColumnDisplayWidth(int,int) -> d
    int getColumnResizePolicy() -> d
    void setColumnResizePolicy(int) -> a_
    void setLayout(java.awt.LayoutManager) -> setLayout
jclass.bwt.JCItemEvent -> cL:
    java.awt.ItemSelectable selectable_item -> a
    java.lang.Object getItem() -> getItem
    int getStateChange() -> getStateChange
jclass.bwt.JCItemListener -> bj:
    void itemStateChanged(jclass.bwt.JCItemEvent) -> a
jclass.bwt.JCLabel -> U:
    int alignment -> a
    java.lang.Object label -> a
    int label_width -> b
    int label_height -> c
    java.awt.Rectangle label_rect -> a
    java.lang.String url -> b
    int nameCounter -> d
    void getParameters() -> a
    void setFont(java.awt.Font) -> setFont
    void setFontInternal(java.awt.Font) -> a
    void setLabel(java.lang.Object) -> a
    void drawValue(java.awt.Graphics,java.lang.Object) -> a
    void paintComponent(java.awt.Graphics) -> a
    void setLabelSize(java.lang.Object) -> d
    void setLabelSize(java.lang.Object,java.awt.Font) -> a
    void addNotify() -> addNotify
    int preferredWidth() -> b
    int preferredHeight() -> c_
    void layout() -> layout
    void layout(java.lang.Object) -> b
    boolean mouseMove(java.awt.Event,int,int) -> mouseMove
    boolean mouseUp(java.awt.Event,int,int) -> mouseUp
jclass.bwt.JCList -> dg:
    jclass.bwt.JCListComponent list -> a
    int nameCounter -> d
    void setList(jclass.bwt.JCListComponent) -> a
    int preferredWidth() -> a
    int getViewportHeight() -> a_
    void scrollVertical(jclass.bwt.JCScrollableInterface,jclass.bwt.JCAdjustmentEvent,int) -> a
    jclass.util.JCVector getItems() -> a
    java.lang.Object getItem(int) -> a
    void removeAll() -> removeAll
    int find(java.lang.Object) -> a
    boolean getWrapAroundSearch() -> a
    void select(int) -> d
    void select(int,boolean) -> a
    void deselectAll() -> d
    void setVisibleRows(int) -> e
    void makeVisible(int) -> f
    void setFont(java.awt.Font) -> setFont
    void disable() -> disable
    void addKeyListener(java.awt.event.KeyListener) -> addKeyListener
    void removeKeyListener(java.awt.event.KeyListener) -> removeKeyListener
    void addFocusListener(java.awt.event.FocusListener) -> addFocusListener
    void removeFocusListener(java.awt.event.FocusListener) -> removeFocusListener
jclass.bwt.JCListComponent -> S:
    jclass.util.JCVector items -> a
    int visible_rows -> a
    boolean[] selected -> a
    boolean[] last_selected -> b
    java.awt.Color selected_bg -> a
    java.awt.Color selected_fg -> b
    boolean multiple_select -> a
    int spacing -> b
    boolean batched -> m
    int pref_height_internal -> q
    int pref_width_internal -> r
    int row_height_ext -> c
    int row_height -> s
    int[] row_heights -> a
    int[] row_pos -> b
    int horiz_origin -> t
    int vert_origin -> u
    int top_row -> d
    int bottom_row -> e
    int last_row -> f
    boolean auto_select -> b
    java.lang.Object[] userdata_list -> a
    java.awt.Rectangle draw_rect -> a
    java.awt.Insets vis -> b
    boolean did_selection -> c
    int last_selected_item -> g
    int start_item -> h
    int old_start_item -> i
    int end_item -> j
    int old_end_item -> k
    boolean appending -> d
    int focus_row -> l
    boolean kbd_select -> e
    int selection_type -> m
    boolean wrap_around_search -> f
    jclass.util.JCVector actionListeners -> c
    jclass.util.JCVector itemListeners -> b
    int nameCounter -> v
    jclass.bwt.JCScrolledWindow scrolled_window -> a
    java.awt.Rectangle clip_rect -> d
    void getParameters() -> a
    void addItemListener(jclass.bwt.JCItemListener) -> a
    void addActionListener(jclass.bwt.JCActionListener) -> a
    void setFont(java.awt.Font) -> setFont
    java.lang.Object getItem(int) -> a
    void setItems(jclass.util.JCVector) -> a
    int getSelectedIndex() -> a
    void makeVisible(int) -> a
    java.lang.Object getSelectedItem() -> a
    void deselectAll() -> b
    boolean isSelected(int) -> a
    java.awt.Rectangle getBounds(int,boolean) -> a
    void setAutoSelect(boolean) -> a
    int getRowHeight(int) -> a
    int getRowPosition(int) -> b
    void setRowHeight(int) -> b
    int eventToRow(java.awt.Event,boolean) -> a
    void setVisibleRows(int) -> c
    java.awt.Color getSelectedBackground() -> a
    int findPrevItem(char,int) -> a
    int findNextItem(char,int) -> b
    void calcSize(boolean) -> b
    void updateSelectedList() -> c
    void updateUserdataList() -> e
    int space() -> n
    void repaint() -> repaint
    void addNotify() -> addNotify
    int preferredWidth() -> b
    int preferredHeight() -> c_
    void paintRow(int) -> d
    void drawHighlight(int,boolean) -> a
    void drawHighlight(java.awt.Graphics,int,boolean) -> a
    void paintRow(int,java.awt.Graphics) -> a
    void setFocus(int) -> e
    void calcBottomRow() -> f
    void paintComponent(java.awt.Graphics) -> a
    boolean doubleClickAction(java.awt.Event,int) -> a
    boolean mouseDrag(java.awt.Event,int,int) -> mouseDrag
    boolean mouseDown(java.awt.Event,int,int) -> mouseDown
    boolean mouseUp(java.awt.Event,int,int) -> mouseUp
    boolean keyDown(java.awt.Event,int) -> keyDown
    int getHorizOrigin() -> d_
    void setHorizOrigin(int) -> f
    int getVertOrigin() -> e
    void setVertOrigin(int) -> g
jclass.bwt.JCListEvent -> L:
    java.awt.Event event -> a
    boolean doit -> a
jclass.bwt.JCListInterface -> w:
    java.lang.Object getItem(int) -> a
jclass.bwt.JCListListener -> D:
jclass.bwt.JCMultiColumnData -> cs:
    jclass.bwt.JCMultiColumnInterface multi -> a
    jclass.bwt.JCComponent comp -> a
    int[] column_display_widths -> a
    int column_resize_policy -> a
    int[] column_widths -> d
    int[] column_widths_ext -> b
    int num_columns -> b
    int[] alignments -> c
    int[] left_margins -> e
    int[] right_margins -> f
    java.awt.Rectangle rect -> a
    void adjustDrawingRect(int,java.awt.Rectangle,java.awt.Rectangle) -> a
    void draw(java.awt.Graphics,java.lang.Object,java.awt.Rectangle) -> a
    int preferredWidth() -> a
    void calcColumnWidths() -> a
    int getColumnWidth(int) -> a
    void setColumnWidth(int,int) -> a
    void setColumnWidthInternal(int,int) -> b
    int getColumnAlignment(int) -> b
    int[] getColumnAlignments() -> a
    void setColumnAlignments(int[]) -> a
    int getColumnPosition(int) -> c
    int getColumnLeftMargin(int) -> d
    void setColumnLeftMargin(int,int) -> c
    int getColumnRightMargin(int) -> e
    void setColumnRightMargin(int,int) -> d
    int getColumnDisplayWidth(int) -> f
    void setColumnDisplayWidth(int,int) -> e
jclass.bwt.JCMultiColumnInterface -> co:
    void setColumnLabels(jclass.util.JCVector) -> a
    void setColumnButtons(jclass.util.JCVector) -> c
    int[] getColumnWidths() -> a
    int getColumnWidth(int) -> g
    int getColumnPosition(int) -> d
    void setColumnWidth(int,int) -> a
    int getNumColumns() -> c
    void setNumColumns(int) -> a
    int getColumnLeftMargin(int) -> e
    void setColumnLeftMargin(int,int) -> b
    int getColumnRightMargin(int) -> f
    void setColumnRightMargin(int,int) -> c
    int[] getColumnAlignments() -> b
    int getColumnAlignment(int) -> c
    void setColumnAlignments(int[]) -> a
    int calcWidth(int) -> a
    jclass.bwt.JCMultiColumnData getMultiColumnData() -> a
    int getColumnDisplayWidth(int) -> b
    void setColumnDisplayWidth(int,int) -> d
    int[] getColumnDisplayWidths() -> c
    int getColumnResizePolicy() -> d
    void setColumnResizePolicy(int) -> a_
jclass.bwt.JCMultiColumnWindow -> cj:
    boolean column_label_sort -> a
    jclass.bwt.Viewport headerArea -> a
    jclass.bwt.JCHeader header -> a
    jclass.bwt.JCMultiColumnInterface comp -> a
    jclass.bwt.JCHeader getHeader() -> a
    void setHeader(jclass.bwt.JCHeader) -> a
    void setColumnLabels(jclass.util.JCVector) -> a
    void setColumnButtons(jclass.util.JCVector) -> c
    void setViewport(jclass.bwt.JCMultiColumnInterface) -> a
    int reshapeHeader(int,int,int) -> a
    int headerHeight() -> e
    void reshapeViewport(int,int,int,int) -> a
    int preferredHeight() -> b
    int getViewportWidth() -> b_
    void setFont(java.awt.Font) -> setFont
    void sortByColumn$5ca589da(int,jclass.bwt.JCOutlinerComponent,int) -> a
    void addNotify() -> addNotify
    void scrollHorizontal(jclass.bwt.JCAdjustmentEvent,int) -> a
    void actionPerformed(jclass.bwt.JCActionEvent) -> a
    int[] getColumnWidths() -> a
    int getColumnWidth(int) -> g
    void setColumnWidth(int,int) -> a
    int getNumColumns() -> c
    void setNumColumns(int) -> a
    int[] getColumnAlignments() -> b
    int getColumnAlignment(int) -> c
    void setColumnAlignments(int[]) -> a
    int getColumnPosition(int) -> d
    int getColumnLeftMargin(int) -> e
    void setColumnLeftMargin(int,int) -> b
    int getColumnRightMargin(int) -> f
    void setColumnRightMargin(int,int) -> c
    int calcWidth(int) -> a
    jclass.bwt.JCMultiColumnData getMultiColumnData() -> a
    int[] getColumnDisplayWidths() -> c
    int getColumnDisplayWidth(int) -> b
    void setColumnDisplayWidth(int,int) -> d
    int getColumnResizePolicy() -> d
    void setColumnResizePolicy(int) -> a_
jclass.bwt.JCOutliner -> ae:
    jclass.bwt.JCOutlinerComponent outliner -> a
    int nameCounter -> d
    void setOutliner(jclass.bwt.JCOutlinerComponent) -> a
    void setVertScrollbarValues() -> c
    void setHorizScrollbarValues() -> b
    int getViewportHeight() -> a_
    void scrollVertical(jclass.bwt.JCScrollableInterface,jclass.bwt.JCAdjustmentEvent,int) -> a
    void addItemListener(jclass.bwt.JCItemListener) -> a
    void folderChanged(jclass.bwt.JCOutlinerNode) -> a
    void setRootVisible(boolean) -> b
    void sortByColumn$5ca589da(int,jclass.bwt.JCOutlinerComponent,int) -> a
jclass.bwt.JCOutlinerComponent -> cr:
    boolean clearSelectionOnSingleClickInRange -> a
    jclass.bwt.JCOutlinerNode root -> a
    boolean multiple_select -> b
    boolean auto_select -> c
    int visible_rows -> a
    int num_rows -> c
    jclass.util.JCVector selected_nodes -> b
    jclass.bwt.JCOutlinerNode focus_node -> b
    boolean batched -> d
    java.awt.Event last_event -> a
    int node_height -> d
    int node_indent -> e
    int horiz_origin -> f
    int vert_origin -> g
    int spacing -> h
    int[] state_list -> a
    boolean root_visible -> e
    jclass.util.JCVector visible_nodes -> a
    int bottom_y -> i
    jclass.bwt.OutlinerMultiColumnData data -> a
    jclass.bwt.JCMultiColumnWindow scrolled_window -> a
    jclass.util.JCVector node_list -> c
    boolean root_shortcut -> f
    int sort_column -> j
    int sort_direction -> k
    jclass.bwt.JCOutlinerComponent sort_method$679358b1 -> a
    int pref_width_internal -> l
    jclass.bwt.JCOutlinerNodeStyle[] style_list -> a
    jclass.bwt.JCOutlinerNodeStyle default_style -> a
    java.awt.Image shortcut_open_icon -> b
    java.awt.Image shortcut_close_icon -> c
    java.io.ByteArrayOutputStream output_stream -> a
    java.io.ByteArrayInputStream input_stream -> a
    java.io.ObjectOutputStream out -> a
    java.io.ObjectInputStream in -> a
    java.util.ResourceBundle li -> a
    boolean show_popup -> m
    int full_node_height -> b
    java.awt.Rectangle draw_rect -> a
    jclass.util.JCVector itemListeners -> d
    jclass.util.JCVector actionListeners -> e
    int nameCounter -> m
    java.lang.String[] item_icon -> a
    java.lang.String[] folder_open_icon -> b
    java.lang.String[] folder_closed_icon -> c
    java.lang.String[] shortcut_open_icon_string -> d
    java.lang.String[] shortcut_close_icon_string -> e
    int drag_drop -> q
    jclass.bwt.JCOutlinerNode drag_node -> c
    jclass.bwt.JCOutlinerNode drop_node -> d
    void getParameters() -> a
    void setFont(java.awt.Font) -> setFont
    void processRootNode() -> c
    jclass.bwt.JCHeader getHeader() -> a
    jclass.bwt.JCMultiColumnWindow getScrolledWindow() -> a
    void setColumnLabels(jclass.util.JCVector) -> a
    void setColumnButtons(jclass.util.JCVector) -> c
    void folderChanged(jclass.bwt.JCOutlinerNode) -> a
    jclass.bwt.JCOutlinerNode getRootNode() -> a
    void setRootNode(jclass.bwt.JCOutlinerNode) -> b
    void setTree(java.lang.String[]) -> a
    boolean getRootVisible() -> c
    void setRootVisible(boolean) -> a
    int getNodeHeight() -> a
    void setNodeHeight(int) -> c
    boolean getAllowMultipleSelections() -> d
    void setAllowMultipleSelections(boolean) -> b
    boolean getAutoSelect() -> e
    void setAutoSelect(boolean) -> e
    int getNodeIndent() -> n
    void setNodeIndent(int) -> d
    int[] getStateList() -> d
    void mapStateInNode(jclass.bwt.JCOutlinerNode) -> c
    void setStateList(int[]) -> b
    void setForeground(java.awt.Color) -> setForeground
    void setBackground(java.awt.Color) -> setBackground
    int getSpacing() -> o
    void setSpacing(int) -> e
    int getVisibleRows() -> p
    void setVisibleRows(int) -> l
    void selectNode(jclass.bwt.JCOutlinerNode,java.awt.Event) -> b
    void postNodeSelectEnd(jclass.bwt.JCOutlinerEvent) -> a
    void multiSelectNode(jclass.bwt.JCOutlinerNode,java.awt.Event) -> c
    void setFocusNode(jclass.bwt.JCOutlinerNode,java.awt.Event) -> a
    int calculateStyleHeight(jclass.bwt.JCOutlinerNodeStyle) -> a
    int preferredHeight() -> c_
    int preferredWidth() -> b
    void repaint() -> repaint
    void createShortcutIcons() -> e
    void addNotify() -> addNotify
    void paintComponent(java.awt.Graphics) -> a
    boolean setNodeState(jclass.bwt.JCOutlinerNode,int,boolean) -> a
    boolean makeNodeVisible(jclass.bwt.JCOutlinerNode) -> a
    int getNextState(jclass.bwt.JCOutlinerNode) -> a
    jclass.bwt.JCOutlinerNode getNextVisibleNode(jclass.bwt.JCOutlinerNode) -> a
    void addItemListener(jclass.bwt.JCItemListener) -> a
    jclass.bwt.JCOutlinerEvent postActionEvent$3d162cf4(int,jclass.bwt.JCOutlinerNode,int) -> a
    boolean keyDown(java.awt.Event,int) -> keyDown
    jclass.bwt.JCOutlinerNode eventToNode(java.awt.Event) -> a
    boolean eventInShortcut(java.awt.Event,jclass.bwt.JCOutlinerNode) -> a
    boolean mouseDown(java.awt.Event,int,int) -> mouseDown
    java.awt.Component locateComponent(java.awt.Container,int,int) -> a
    boolean mouseDrag(java.awt.Event,int,int) -> mouseDrag
    boolean mouseUp(java.awt.Event,int,int) -> mouseUp
    boolean drop(java.awt.Event) -> a
    jclass.bwt.JCOutlinerNodeStyle getStyle(jclass.bwt.JCOutlinerNode) -> a
    java.awt.Rectangle getBounds(jclass.bwt.JCOutlinerNode,java.awt.Rectangle) -> a
    java.awt.Image getIcon(jclass.bwt.JCOutlinerNode) -> a
    boolean shouldBeDrawn(jclass.bwt.JCOutlinerNode) -> b
    boolean isVisible(jclass.bwt.JCOutlinerNode) -> c
    java.awt.Graphics getFirstColumnGC(java.awt.Graphics) -> a
    boolean drawNode(jclass.bwt.JCOutlinerNode,boolean) -> a
    boolean drawNode(jclass.bwt.JCOutlinerNode,java.awt.Graphics,java.awt.Graphics,boolean) -> a
    int drawNode(jclass.bwt.JCOutlinerNode,int,int,java.awt.Graphics) -> a
    int countRows(jclass.bwt.JCOutlinerNode) -> b
    int countRows(jclass.bwt.JCOutlinerNode,jclass.bwt.JCOutlinerNode) -> a
    int countAllNodes(jclass.bwt.JCOutlinerNode,jclass.util.JCVector) -> a
    jclass.bwt.JCOutlinerNode findNode(jclass.bwt.JCOutlinerNode,int) -> a
    boolean compare(java.lang.Object,java.lang.Object) -> a
    void sort$5ca589da(int,jclass.bwt.JCOutlinerComponent,int) -> a
    void sort(jclass.bwt.JCOutlinerFolderNode) -> a
    int calcWidth(int) -> a
    int[] getColumnWidths() -> a
    int getColumnWidth(int) -> g
    void setColumnWidth(int,int) -> a
    int getNumColumns() -> c
    void setNumColumns(int) -> a
    int[] getColumnAlignments() -> b
    int getColumnAlignment(int) -> c
    void setColumnAlignments(int[]) -> a
    int getColumnPosition(int) -> d
    int getColumnLeftMargin(int) -> e
    void setColumnLeftMargin(int,int) -> b
    int getColumnRightMargin(int) -> f
    void setColumnRightMargin(int,int) -> c
    jclass.bwt.JCMultiColumnData getMultiColumnData() -> a
    int[] getColumnDisplayWidths() -> c
    int getColumnDisplayWidth(int) -> b
    void setColumnDisplayWidth(int,int) -> d
    int getColumnResizePolicy() -> d
    void setColumnResizePolicy(int) -> a_
    int getHorizOrigin() -> d_
    void setHorizOrigin(int) -> f
    int getVertOrigin() -> e
    void setVertOrigin(int) -> g
    boolean cmpKeyStroke(java.lang.String,int) -> a
    boolean pasteFromClipboard$45a7f02c() -> f
    void cutToClipboard(java.awt.Event) -> a
    void copyToClipboard$45a7f028() -> b
jclass.bwt.JCOutlinerEvent -> db:
    int new_state -> a
    boolean doit -> a
jclass.bwt.JCOutlinerFolderNode -> cD:
    int state -> a
    jclass.util.JCVector children -> a
    int shortcut_x -> b
    int shortcut_y -> c
    void addNode(jclass.bwt.JCOutlinerNode,int) -> a
    jclass.util.JCVector getChildren() -> a
    void removeChild(jclass.bwt.JCOutlinerNode) -> a
    int getState() -> a
    java.lang.Object clone() -> clone
jclass.bwt.JCOutlinerInterface -> av:
jclass.bwt.JCOutlinerListener -> ai:
    void outlinerFolderStateChangeBegin(jclass.bwt.JCOutlinerEvent) -> a
jclass.bwt.JCOutlinerNode -> dd:
    java.lang.Object label -> a
    java.lang.Object userData -> b
    jclass.bwt.JCOutlinerFolderNode parent -> a
    jclass.bwt.JCOutlinerNodeStyle style -> a
    jclass.bwt.JCOutlinerComponent outliner -> a
    int row -> d
    int indent -> e
    int sequence -> f
    boolean selected -> a
    void draw() -> a
    void setLabel(java.lang.Object) -> a
    jclass.bwt.JCOutlinerFolderNode getParent() -> a
    jclass.bwt.JCOutlinerNodeStyle getStyle() -> a
    void setStyle(jclass.bwt.JCOutlinerNodeStyle) -> a
    java.lang.Object getUserData() -> a
    void setUserData(java.lang.Object) -> b
    int getState() -> a
    jclass.util.JCVector getChildren() -> a
    int getLevel() -> b
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
jclass.bwt.JCOutlinerNodeStyle -> dy:
    java.awt.Color background_selected -> a
    java.awt.Font font -> a
    java.awt.Color foreground -> b
    java.awt.Color foreground_selected -> c
    java.awt.Color line_color -> d
    boolean shortcut -> a
    java.awt.Image item -> a
    java.awt.Image item_selected -> b
    java.awt.Image folder_closed -> c
    java.awt.Image folder_closed_selected -> d
    java.awt.Image folder_open -> e
    java.awt.Image folder_open_selected -> f
    int icon_spacing -> a
    void setFont(java.awt.Font) -> a
    void setForeground(java.awt.Color) -> a
    void setShortcut(boolean) -> a
    void setItemIcon(java.awt.Image) -> a
    void setFolderClosedIcon(java.awt.Image) -> b
    void setFolderOpenIcon(java.awt.Image) -> c
jclass.bwt.JCOutlinerPrinter -> ab:
    int page_resolution -> a
jclass.bwt.JCScrollableInterface -> aW:
    int getHorizOrigin() -> d_
    void setHorizOrigin(int) -> f
    int getVertOrigin() -> e
    void setVertOrigin(int) -> g
jclass.bwt.JCScrollbar -> b:
    jclass.bwt.JCArrowButton incr_arrow -> a
    jclass.bwt.JCArrowButton decr_arrow -> b
    jclass.bwt.ScrollbarThumb thumb -> a
    int nameCounter -> g
    int value -> a
    int min -> b
    int max -> c
    int dir -> h
    jclass.util.JCVector adjustmentListeners -> a
    int line_incr -> d
    int page_incr -> e
    long filter_time -> a
    long last_time -> b
    int visible -> f
    int major -> k
    int minor -> l
    int trough_size -> m
    int slider_size -> n
    java.awt.Image disabled_image -> a
    int dragStart -> o
    int dragValueStart -> p
    jclass.util.JCImageCreator creator -> a
    boolean new_bg -> a
    java.lang.String[] disabled_pixels -> a
    void getParameters() -> a
    void getParameters(java.applet.Applet) -> a
    java.lang.String getParam(java.lang.String) -> a
    boolean isFocusTraversable() -> isFocusTraversable
    void setOrientation(int) -> b
    int check(int) -> a
    void setValue(int) -> a
    void setValue(int,int,boolean) -> a
    void setValues(int,int,int,int) -> a
    boolean dragging() -> a
    int preferredWidth() -> a
    int preferredHeight() -> b
    void addAdjustmentListener(jclass.bwt.JCAdjustmentListener) -> a
    void actionPerformed(jclass.bwt.JCActionEvent) -> a
    boolean mouseUp(java.awt.Event,int,int) -> mouseUp
    boolean mouseDown(java.awt.Event,int,int) -> mouseDown
    boolean mouseDrag(java.awt.Event,int,int) -> mouseDrag
    boolean keyDown(java.awt.Event,int) -> keyDown
    void reshape(int,int,int,int) -> reshape
    void moveThumb() -> c
    void layout() -> layout
    void paintInterior(java.awt.Graphics) -> a
    void setForeground(java.awt.Color) -> setForeground
    void setBackground(java.awt.Color) -> setBackground
    void setLayout(java.awt.LayoutManager) -> setLayout
jclass.bwt.JCScrolledWindow -> N:
    int sb_display -> a
    int sb_offset -> b
    jclass.bwt.JCScrollbar vert_sb -> a
    jclass.bwt.JCScrollbar horiz_sb -> b
    int keystroke -> c
    int nameCounter -> d
    java.awt.Component viewport -> a
    boolean smartscroll -> a
    java.awt.Rectangle rect -> a
    void getParameters() -> a
    void setScrollbarDisplay(int) -> b_
    void setSmartScroll(boolean) -> a
    int sb_size() -> f
    int preferredWidth() -> a
    int preferredHeight() -> b
    int getViewportWidth() -> b_
    int getViewportHeight() -> a_
    java.awt.Component add(java.awt.Component) -> add
    java.awt.Component add(java.lang.String,java.awt.Component) -> add
    java.awt.Component add(java.awt.Component,int) -> add
    void add(java.awt.Component,java.lang.Object) -> add
    void add(java.awt.Component,java.lang.Object,int) -> add
    void addImpl(java.awt.Component,java.lang.Object,int) -> addImpl
    void addInternal(java.awt.Component) -> a
    void addNotify() -> addNotify
    void setHorizScrollbarValues() -> b
    void setVertScrollbarValues() -> c
    int reshapeHeader(int,int,int) -> a
    int headerHeight() -> e
    void reshapeViewport(int,int,int,int) -> a
    void layout() -> layout
    void scrollVertical(jclass.bwt.JCScrollableInterface,jclass.bwt.JCAdjustmentEvent,int) -> a
    void scrollVertical(jclass.bwt.JCAdjustmentEvent,int) -> b
    void scrollHorizontal(jclass.bwt.JCAdjustmentEvent,int) -> a
    void scrollVertical(int) -> b
    void scrollHorizontal(int) -> d
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
    void keyReleased(java.awt.event.KeyEvent) -> keyReleased
    void keyTyped(java.awt.event.KeyEvent) -> keyTyped
    void adjustmentValueChanged(jclass.bwt.JCAdjustmentEvent) -> a
    void setLayout(java.awt.LayoutManager) -> setLayout
jclass.bwt.JCSerializable -> s:
jclass.bwt.JCSlider -> bn:
    jclass.bwt.ScrollbarThumb thumb -> a
    int value -> a
    int min -> e
    int max -> f
    int dir -> b
    int trough_offset -> c
    jclass.util.JCVector adjustmentListeners -> a
    int line_incr -> g
    int page_incr -> h
    long last_time -> a
    int trough_size -> k
    int slider_size -> l
    int visible -> m
    int major -> n
    int minor -> o
    int dragStart -> p
    int dragValueStart -> q
    int thumb_major -> r
    int thumb_minor -> s
    int THUMB_SIZE -> t
    int HALF_THUMB_SIZE -> u
    int num_ticks -> d
    boolean auto_tick -> a
    jclass.bwt.JCLabel min_label -> a
    jclass.bwt.JCLabel max_label -> b
    int nameCounter -> v
    void getParameters() -> a
    void setOrientation(int) -> d
    int check(int) -> a
    void setValue(int) -> a
    void setValue(int,boolean) -> a
    void setValue(int,int,boolean) -> a
    void addAdjustmentListener(jclass.bwt.JCAdjustmentListener) -> a
    boolean dragging() -> a
    boolean mouseUp(java.awt.Event,int,int) -> mouseUp
    boolean mouseDown(java.awt.Event,int,int) -> mouseDown
    boolean mouseDrag(java.awt.Event,int,int) -> mouseDrag
    boolean keyDown(java.awt.Event,int) -> keyDown
    void reshape(int,int,int,int) -> reshape
    void moveThumb() -> c
    int toValue(int) -> b
    void setBackground(java.awt.Color) -> setBackground
    void setLayout(java.awt.LayoutManager) -> setLayout
    void setNumTicks(int) -> b
    int preferredWidth() -> a
    int preferredHeight() -> b
    void resizeThumb$255f295() -> d
    void layout() -> layout
    void paintInterior(java.awt.Graphics) -> a
jclass.bwt.JCSpinBox -> ci:
    jclass.bwt.SpinField text -> a
    jclass.bwt.SpinArrowButton decr_arrow -> a
    jclass.bwt.SpinArrowButton incr_arrow -> b
    int position -> e
    int min -> a
    int max -> b
    int incr -> c
    int decimals -> d
    java.lang.Object value -> a
    boolean auto_arrow_disable -> a
    int border -> f
    int pow -> g
    char decimal_point_char -> a
    jclass.util.JCVector listeners -> a
    int nameCounter -> h
    void getParameters() -> a
    void setAutoArrowDisable(boolean) -> a
    void setDecimalPlaces(int) -> a
    void setIncrement(int) -> b
    void setMinimum(int) -> d
    void setMaximum(int) -> e
    int getIntValue() -> c
    void setIntValue(int) -> f
    java.lang.String getValue() -> a
    void addSpinBoxListener(jclass.bwt.JCSpinBoxListener) -> a
    int preferredWidth() -> a
    int preferredHeight() -> b
    void layout() -> layout
    void setBackground(java.awt.Color) -> setBackground
    void setForeground(java.awt.Color) -> setForeground
    void paintInterior(java.awt.Graphics) -> a
    void addKeyListener(java.awt.event.KeyListener) -> addKeyListener
    void removeKeyListener(java.awt.event.KeyListener) -> removeKeyListener
    void addFocusListener(java.awt.event.FocusListener) -> addFocusListener
    void removeFocusListener(java.awt.event.FocusListener) -> removeFocusListener
    jclass.bwt.JCSpinBoxEvent postSpinBoxEvent(int,java.lang.Object) -> a
    char getDecimalPointChar() -> a
    void setTextValue(java.lang.Object) -> a
    void setTextAction(int) -> g
    void enableArrowButtons() -> c
    boolean validateKey(char) -> a
    boolean validate(java.lang.Object) -> a
    void actionPerformed(jclass.bwt.JCActionEvent) -> a
    void setLayout(java.awt.LayoutManager) -> setLayout
jclass.bwt.JCSpinBoxEvent -> aj:
    java.lang.Object value -> a
    boolean doit -> a
jclass.bwt.JCSpinBoxListener -> cv:
    void spinBoxChangeEnd(jclass.bwt.JCSpinBoxEvent) -> a
jclass.bwt.JCTabButton -> cE:
    java.awt.Component page -> a
    jclass.bwt.JCTabManager tab_manager -> a
    jclass.bwt.TabPanel tab_panel -> a
    int shape -> d
    boolean size_adjusted -> c
    java.awt.Polygon polygon -> a
    boolean current_tab -> b
    int nameCounter -> f
    boolean valid -> d
    boolean visible -> e
    void toFront() -> b
    boolean inside(int,int) -> inside
    void setPage(java.awt.Component) -> a
    void layout() -> layout
    java.awt.Font getCurrentTabFont(jclass.bwt.JCTabManager) -> a
    boolean isValid() -> isValid
    boolean isShowing() -> isShowing
    void show() -> show
    void hide() -> hide
    java.awt.peer.ComponentPeer getPeer() -> getPeer
    void validate() -> validate
    void invalidate() -> invalidate
    boolean isVisible() -> isVisible
    void addNotify() -> addNotify
    int preferredWidth() -> b
    void fillBackground(java.awt.Graphics) -> b
    void paintComponent(java.awt.Graphics) -> a
    void drawBorder(java.awt.Graphics) -> c
    java.awt.Graphics getGraphics() -> getGraphics
    void drawHighlight(java.awt.Graphics,boolean) -> a
    void drawEdgeBorder(java.awt.Graphics) -> d
    void reshape(int,int,int,int) -> reshape
    void repaint(int,int,int,int) -> repaint
    void resize(boolean) -> a
    boolean gotFocus(java.awt.Event,java.lang.Object) -> gotFocus
    void armAction(java.awt.Event) -> a
    void disarmAction(java.awt.Event) -> b
jclass.bwt.JCTabManager -> be:
    java.awt.Component current_page -> a
    int current_tab -> a
    int first_tab -> b
    int last_tab -> c
    int tab_alignment -> d
    int tab_color_policy -> e
    java.awt.Font tab_current_font -> a
    boolean tab_resize -> a
    boolean tab_stretch -> b
    int tab_side -> f
    int tab_spacing -> g
    int tab_shape -> h
    boolean show_page -> c
    java.lang.String[] tab_labels -> a
    jclass.bwt.TabPanel tab_panel -> a
    jclass.bwt.TabPageArea page_area -> a
    jclass.util.JCVector listeners -> a
    int nameCounter -> k
    boolean first -> d
    void getParameters() -> a
    int getTab(jclass.bwt.JCTabButton) -> a
    jclass.bwt.JCTabButton getTab(int) -> a
    void setCurrentTab(int,boolean) -> a
    void setCurrentPage(java.awt.Component) -> a
    void setFirstVisibleTab(int) -> a
    void makeTabVisible(int) -> b
    int setTabPage(int,java.lang.Object,java.awt.Component) -> a
    int addPage(java.lang.Object,java.awt.Component) -> a
    void addImpl(java.awt.Component,java.lang.Object,int) -> addImpl
    void setLayout(java.awt.LayoutManager) -> setLayout
    void reshape(int,int,int,int) -> reshape
jclass.bwt.JCTabManagerEvent -> aD:
    java.awt.Component next_page -> a
    boolean doit -> a
jclass.bwt.JCTextComponent -> cO:
    java.util.ResourceBundle li -> a
    java.awt.PopupMenu popup_menu -> a
    java.lang.Thread cursor_thread -> a
    int cursor_pos -> a
    boolean cursor_visible -> d
    boolean paint_cursor -> e
    boolean display_cursor -> a
    boolean show_cursor -> f
    int disabled_repaint_count -> j
    int action_count -> k
    boolean needs_repaint -> m
    boolean do_repaint -> n
    java.awt.Window window -> a
    boolean dialog_bug -> o
    int num_char -> b
    int max_length -> c
    int columns -> d
    char[] text -> a
    int alignment -> e
    boolean dispose -> p
    int select_start -> f
    int select_end -> g
    int select_anchor -> l
    int selection_type -> m
    int horiz_origin -> h
    int vert_origin -> q
    jclass.util.JCVector cursorListeners -> a
    jclass.util.JCVector valueListeners -> b
    jclass.cell.CellEditorSupport cell_editor_support -> a
    boolean editable -> b
    boolean overstrike -> c
    boolean changed -> q
    int string_case -> i
    java.awt.Color selected_fg -> a
    java.awt.Color selected_bg -> b
    java.awt.FontMetrics fm -> a
    java.awt.Event last_event -> a
    int cursor_blink_rate -> r
    boolean ignore_select_extensions -> r
    java.awt.Rectangle rect -> a
    int[] select_list -> a
    java.lang.String clipboard -> b
    boolean last_state -> s
    boolean last_overstrike -> t
    int last_x -> s
    int last_y -> t
    boolean first -> u
    java.awt.Point p1 -> a
    java.awt.Point p2 -> b
    boolean pasting -> v
    void getParameters() -> a
    void setFont(java.awt.Font) -> setFont
    boolean getChanged() -> c
    java.lang.String getText() -> a
    char[] getTextChars() -> a
    void setText(java.lang.String) -> a
    boolean deleteSelection() -> d
    boolean deleteRange(int,int) -> a
    void insert(java.lang.String,int) -> a
    void replaceRange(java.lang.String,int,int) -> a
    boolean replaceRangeInternal(java.lang.String,int,int) -> a
    void replaceTextInternal(java.lang.String,int,int) -> b
    int checkCursorPosition(int) -> b
    void setCursorPosition(int) -> d
    int getCaretPosition() -> a
    void setCaretPosition(int) -> b
    void setShowCursorPosition(boolean) -> a
    void selectAll() -> b
    void select(int,int) -> a
    boolean isWordDelimiter(char) -> a
    boolean isLineDelimiter(char) -> b
    void select(int,int,int) -> a
    int positionToX(int) -> a
    void paintCursor(boolean,java.awt.Graphics,int,int) -> a
    void paintCursor(boolean) -> f
    void run() -> run
    void setEditable(boolean) -> b
    java.awt.Color getSelectedBackground() -> a
    void setSelectedBackground(java.awt.Color) -> b
    void setSelectedForeground(java.awt.Color) -> c
    void setColumns(int) -> c
    boolean getEditable() -> e
    boolean isEditable() -> f
    void showPosition(int) -> a
    void setFm() -> f
    int preferredHeight() -> c_
    int preferredWidth() -> b
    void addNotify() -> addNotify
    void reshape(int,int,int,int) -> reshape
    void repaint() -> repaint
    int pointToPosition(int,int) -> a
    java.awt.Point positionToPoint(int,java.awt.Point) -> a
    void repaintPositions(int,int) -> b
    void beep() -> c
    boolean pasteFromClipboard$45a7f02c() -> g
    void writeClipboard(java.lang.String) -> b
    java.lang.String getStringFromTransferable(java.awt.datatransfer.Transferable) -> a
    java.lang.String readClipboard() -> b
    void cutToClipboard(java.awt.Event) -> a
    void copyToClipboard$45a7f028() -> e
    int getSelectionType(int) -> c
    void startAction(java.awt.Event) -> b
    void endAction() -> g
    void selectExtend(java.awt.Event) -> c
    boolean mouseDown(java.awt.Event,int,int) -> mouseDown
    boolean mouseDrag(java.awt.Event,int,int) -> mouseDrag
    boolean mouseUp(java.awt.Event,int,int) -> mouseUp
    void scrollHome(java.awt.Event) -> d
    void scrollEnd(java.awt.Event) -> e
    boolean insertChar(java.awt.Event,int) -> a
    boolean deleteChar(java.awt.Event,boolean) -> a
    boolean keyDown(java.awt.Event,int) -> keyDown
    java.awt.MenuItem createMenuItem(java.lang.String) -> a
    boolean cmpKeyStroke(java.lang.String,int) -> a
    void blinkCursor(boolean) -> e
    boolean gotFocus102(java.awt.Event,java.lang.Object) -> b
    boolean lostFocus102(java.awt.Event,java.lang.Object) -> a
    void disable() -> disable
jclass.bwt.JCTextComponent$1 -> aU:
jclass.bwt.JCTextComponent$Copy -> v:
    jclass.bwt.JCTextComponent this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jclass.bwt.JCTextComponent$Cut -> cR:
    jclass.bwt.JCTextComponent this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jclass.bwt.JCTextComponent$Delete -> by:
    jclass.bwt.JCTextComponent this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jclass.bwt.JCTextComponent$Paste -> am:
    jclass.bwt.JCTextComponent this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jclass.bwt.JCTextComponent$SelectAll -> cW:
    jclass.bwt.JCTextComponent this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jclass.bwt.JCTextCursorEvent -> cG:
    int current_pos -> b
    int new_pos -> a
    boolean doit -> a
    java.lang.String paramString() -> paramString
jclass.bwt.JCTextEvent -> cX:
    int start -> a
    int end -> b
    java.lang.String text -> a
    boolean doit -> a
    java.lang.String paramString() -> paramString
jclass.bwt.JCTextField -> bp:
    jclass.util.JCVector actionListeners -> a
    int nameCounter -> j
    void setText(java.lang.String) -> a
    void getParameters() -> a
    int positionToX(int) -> a
    void showPosition(int) -> a
    void addActionListener(jclass.bwt.JCActionListener) -> a
    int drawLine(java.awt.Graphics,java.lang.String,int,int) -> a
    void paintComponent(java.awt.Graphics) -> a
    int pointToPosition(int,int) -> a
    boolean keyDown(java.awt.Event,int) -> keyDown
jclass.bwt.JCVersion -> bc:
    java.lang.String versionString -> a
    java.lang.String getVersionString() -> a
jclass.bwt.LabelConverter -> de:
    int[] alignment_values -> a
    java.lang.String[] alignment_strings -> a
    java.lang.String[] shadowtype_strings -> b
    int[] shadowtype_values -> b
    void getParams(jclass.bwt.JCLabel) -> a
    int toAlignment(jclass.util.JCConverter,java.lang.String,int) -> a
jclass.bwt.ListSelection -> dF:
    int last_x -> a
    int last_y -> b
    boolean postEvent(jclass.bwt.JCListComponent,int,java.awt.Event,int) -> a
    void selectRange(jclass.bwt.JCListComponent,int,int,boolean) -> a
    void restoreRange(jclass.bwt.JCListComponent,int,int,boolean) -> b
    void arrangeRange(jclass.bwt.JCListComponent,int) -> a
    boolean beginSelect(jclass.bwt.JCListComponent,java.awt.Event) -> a
    boolean endSelect(jclass.bwt.JCListComponent,java.awt.Event) -> b
    boolean mouseDrag(jclass.bwt.JCListComponent,java.awt.Event) -> c
    void clickRow(jclass.bwt.JCListComponent,java.awt.Event) -> b
    void kbdExtendedItem(jclass.bwt.JCListComponent,int,java.awt.Event) -> a
    void selectFocusRow(jclass.bwt.JCListComponent,java.awt.Event) -> a
    boolean prevRow(jclass.bwt.JCListComponent,java.awt.Event) -> q
    boolean nextRow(jclass.bwt.JCListComponent,java.awt.Event) -> r
    boolean normalNextRow(jclass.bwt.JCListComponent,java.awt.Event) -> d
    boolean shiftNextRow(jclass.bwt.JCListComponent,java.awt.Event) -> e
    boolean ctrlNextRow(jclass.bwt.JCListComponent,java.awt.Event) -> f
    boolean ctrlShiftNextRow(jclass.bwt.JCListComponent,java.awt.Event) -> g
    boolean normalPrevRow(jclass.bwt.JCListComponent,java.awt.Event) -> h
    boolean shiftPrevRow(jclass.bwt.JCListComponent,java.awt.Event) -> i
    boolean ctrlPrevRow(jclass.bwt.JCListComponent,java.awt.Event) -> j
    boolean ctrlShiftPrevRow(jclass.bwt.JCListComponent,java.awt.Event) -> k
    boolean beginExtend(jclass.bwt.JCListComponent,java.awt.Event) -> l
    boolean endExtend(jclass.bwt.JCListComponent,java.awt.Event) -> m
    boolean beginToggle(jclass.bwt.JCListComponent,java.awt.Event) -> n
    boolean endToggle(jclass.bwt.JCListComponent,java.awt.Event) -> o
    boolean kbdSelect(jclass.bwt.JCListComponent,java.awt.Event) -> p
    void select(jclass.bwt.JCListComponent,int,boolean,java.awt.Event) -> a
jclass.bwt.MultiColumnConverter -> W:
    int[] column_resize_policy_values -> a
    java.lang.String[] column_resize_policy_strings -> a
    java.lang.String getParam(jclass.bwt.JCMultiColumnInterface,java.lang.String) -> a
    void getParams(jclass.bwt.JCMultiColumnInterface,jclass.util.JCConverter) -> a
jclass.bwt.OutlinerConverter -> m:
    java.lang.String[] state_strings -> a
    int[] state_values -> a
    void getParams(jclass.bwt.JCOutlinerComponent) -> a
    void checkState(int) -> a
    java.lang.Object getLabel(jclass.bwt.JCOutlinerComponent,java.lang.String) -> a
    jclass.bwt.JCOutlinerNode createTree(jclass.bwt.JCOutlinerComponent,java.lang.String[]) -> a
    int findIndent(java.lang.String) -> a
jclass.bwt.OutlinerMultiColumnData -> ch:
    void adjustDrawingRect(int,java.awt.Rectangle,java.awt.Rectangle) -> a
jclass.bwt.ScrollbarConverter -> ap:
    int[] orientation_values -> a
    void getParams(jclass.bwt.JCScrollbar) -> a
    void checkOrientation(int) -> a
jclass.bwt.ScrollbarThumb -> cl:
    java.awt.Component sb -> a
    boolean visible -> a
    void drawBorder(java.awt.Graphics) -> c
    void addNotify() -> addNotify
    void show(boolean) -> show
    boolean isVisible() -> isVisible
    void reshape(int,int,int,int) -> reshape
    void repaint(int,int,int,int) -> repaint
jclass.bwt.ScrolledWindowConverter -> bV:
    java.lang.String[] display_strings -> a
    int[] display_values -> a
    void getParams(jclass.bwt.JCScrolledWindow) -> a
    void checkDisplay(int) -> a
jclass.bwt.SliderThumb -> cP:
    jclass.bwt.JCSlider slider -> a
    void move(int,int) -> move
jclass.bwt.SpinArrowButton -> aB:
    jclass.bwt.JCSpinBox spin -> a
    boolean mouseUp(java.awt.Event,int,int) -> mouseUp
jclass.bwt.SpinBoxConverter -> aP:
    void getParams(jclass.bwt.JCSpinBox) -> a
jclass.bwt.SpinField -> aA:
    jclass.bwt.JCSpinBox spin -> a
    void drawHighlight(java.awt.Graphics,boolean) -> a
    boolean keyDown(java.awt.Event,int) -> keyDown
    boolean insertChar(java.awt.Event,int) -> a
jclass.bwt.TabArrowPanel -> n:
    jclass.bwt.TabPanel tab_panel -> a
    jclass.bwt.JCArrowButton left_arrow -> a
    jclass.bwt.JCArrowButton right_arrow -> b
    int nameCounter -> a
    void setLayout(java.awt.LayoutManager) -> setLayout
    void fillBackground(java.awt.Graphics) -> b
    boolean coversTabs() -> a
    void layout() -> layout
    void actionPerformed(jclass.bwt.JCActionEvent) -> a
jclass.bwt.TabManagerConverter -> bB:
    java.lang.String[] shape_strings -> a
    int[] shape_values -> a
    java.lang.String[] side_strings -> b
    int[] side_values -> b
    int[] color_values -> c
    java.lang.String[] color_strings -> c
    void getParams(jclass.bwt.JCTabManager) -> a
    void checkTabSide(int) -> a
jclass.bwt.TabPageArea -> cQ:
    jclass.bwt.JCTabManager tab_manager -> a
    java.awt.Component page -> a
    int nameCounter -> a
    void addPage(java.awt.Component) -> a
    void showPage(java.awt.Component) -> b
    void paintInterior(java.awt.Graphics) -> a
    void drawBorder(java.awt.Graphics) -> c
jclass.bwt.TabPanel -> t:
    jclass.bwt.JCTabManager tab_manager -> a
    jclass.bwt.TabArrowPanel arrow_panel -> a
    int tab_height -> a
    int tab_width -> b
    int pref_width -> c
    jclass.util.JCVector buttons -> a
    int nameCounter -> d
    boolean allTabsShown -> a
    java.awt.Component focus_target -> a
    void setLayout(java.awt.LayoutManager) -> setLayout
    int countTabs() -> c
    void findLargestTab() -> c
    java.awt.Dimension getTabSize(jclass.bwt.JCTabButton) -> a
    int getTabSpacing() -> d
    void layout() -> layout
    java.awt.Dimension preferredSize() -> preferredSize
    void addButton(jclass.bwt.JCTabButton) -> a
    java.awt.Component add(java.awt.Component,int) -> add
    void remove(java.awt.Component) -> remove
    java.awt.Component locate(int,int) -> locate
    void restoreStackingOrder() -> b
    void repaint() -> repaint
    void paintInterior(java.awt.Graphics) -> a
    boolean dispatchEvent(java.awt.Component,java.awt.Event,int) -> a
    boolean mouseDown(java.awt.Event,int,int) -> mouseDown
    void processKeyEvent(java.awt.event.KeyEvent) -> processKeyEvent
    boolean keyDown(java.awt.Event,int) -> keyDown
    boolean keyUp(java.awt.Event,int) -> keyUp
jclass.bwt.TextComponentConverter -> T:
    java.lang.String[] alignment_strings -> a
    int[] alignment_values -> a
    int[] case_values -> b
    java.lang.String[] case_strings -> b
    void getParams(jclass.bwt.JCTextComponent) -> a
jclass.bwt.Viewport -> dx:
    java.awt.Component child -> a
    java.awt.Component add(java.awt.Component) -> add
    java.awt.Component add(java.lang.String,java.awt.Component) -> add
    java.awt.Component add(java.awt.Component,int) -> add
    void add(java.awt.Component,java.lang.Object) -> add
    void add(java.awt.Component,java.lang.Object,int) -> add
    java.awt.Dimension preferredSize() -> preferredSize
    void reshape(int,int,int,int) -> reshape
    void addNotify() -> addNotify
    void scrollHorizontal(int) -> a
jclass.cell.CellEditor -> aT:
jclass.cell.CellEditorEvent -> ds:
jclass.cell.CellEditorSupport -> ag:
    void fireStopEditing(jclass.cell.CellEditorEvent) -> a
jclass.cell.CellRenderer -> aR:
jclass.cell.KeyModifier -> bQ:
jclass.util.ConvertUtil -> ak:
    java.lang.Object toCellValue(java.awt.Component,java.lang.String,boolean) -> a
jclass.util.JCAlignLayout -> bN:
    boolean get(java.util.Hashtable,java.awt.Component,boolean) -> a
    boolean isLabel(int) -> a
    void reshape$159444be(int,int,java.awt.Component,int,int,int,int) -> a
jclass.util.JCConverter -> bl:
    jclass.util.JCVector toVector(java.awt.Component,java.lang.String,char,boolean,jclass.util.JCVector) -> a
    java.lang.Object toJCString(java.awt.Component,java.lang.String,java.lang.Object) -> a
    int toEnum(java.lang.String,java.lang.String,java.lang.String[],int[],int) -> a
jclass.util.JCEnvironment -> aM:
    int os -> a
    int java_version -> b
    java.lang.String versionString -> a
    java.lang.String vendorString -> b
    boolean JAVA_OS -> a
    java.applet.AppletContext getAppletContext(java.applet.Applet) -> a
    int getOS() -> a
    boolean isBrowserExplorer(java.awt.Component) -> a
    boolean isBrowserNetscape(java.awt.Component) -> b
    boolean isBrowserAppletViewer(java.awt.Component) -> c
    boolean isBrowserVisualAge(java.awt.Component) -> d
    boolean isBrowserVisualCafe(java.awt.Component) -> e
    boolean isVisualAge() -> a
    boolean isJBuilder() -> b
    boolean isVisualCafe() -> c
    int getBrowser(java.awt.Component) -> a
    int getJavaVersion() -> b
    java.lang.String getVendorString() -> a
    java.lang.String getVersionString() -> b
    boolean isJavaOS() -> d
jclass.util.JCFile -> aF:
    java.net.URL createURL(java.applet.Applet,java.lang.String) -> a
    java.lang.String read(java.applet.Applet,java.lang.String) -> a
jclass.util.JCImage -> y:
    java.awt.Image image -> a
jclass.util.JCImageCreator -> f:
    int curRow -> a
    int width -> b
    int height -> c
    int[] colorMap -> a
    int[] pixels -> b
    java.awt.Component comp -> a
    void clear() -> a
    java.awt.Image create() -> a
    java.awt.Image create(java.lang.String[]) -> a
    void setColor(char,int) -> a
    void setColor(char,java.awt.Color) -> a
    void setSize(int,int) -> a
    void setPixels(java.lang.String[]) -> a
    void setPixels(int,java.lang.String) -> a
jclass.util.JCListenerList -> ax:
    java.util.Enumeration elements(jclass.util.JCListenerList) -> a
jclass.util.JCListenerListEnumeration -> cw:
    jclass.util.JCListenerList current -> a
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
jclass.util.JCString -> cq:
    java.lang.Integer UNDERLINE -> a
    java.lang.Integer STRIKETHROUGH -> b
    java.lang.Integer END_UNDERLINE -> c
    java.lang.Integer END_STRIKETHROUGH -> d
    java.lang.Integer HORIZ_SPACE -> e
    java.lang.Integer VERT_SPACE -> f
    java.lang.Integer NEWLINE -> g
    java.lang.Integer RESET -> h
    java.lang.Integer DEFAULT_FONT -> i
    java.lang.Integer DEFAULT_COLOR -> j
    java.lang.Integer TOP -> k
    java.lang.Integer MIDDLE -> l
    java.lang.Integer BOTTOM -> m
    java.lang.Integer HREF -> n
    java.lang.Integer END_HREF -> o
    boolean underline -> a
    boolean strikethrough -> b
    java.awt.Dimension size -> a
    java.awt.Rectangle draw_rect -> a
    java.util.Vector reg_images -> a
    boolean is_img_caching -> c
    java.util.Hashtable img_cache -> a
    java.awt.Rectangle url_rect -> b
    java.lang.String url -> a
    jclass.util.JCVector url_rect_list -> a
    jclass.util.JCVector url_list -> b
    boolean has_url -> d
    void addString(java.lang.String) -> a
    boolean isValue(java.lang.Object) -> a
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    void init() -> a
    jclass.util.JCString parse(java.awt.Component,java.lang.String) -> a
    java.applet.Applet getApplet(java.awt.Component) -> a
    int getHeight(java.awt.Component,java.awt.Font) -> a
    int getWidth(java.awt.Component,java.awt.Font) -> b
    java.awt.Dimension getSize(java.awt.Component,java.awt.Font) -> a
    int stringWidth(java.awt.FontMetrics,java.awt.Font,java.lang.String) -> a
    int getLineSize(java.awt.Component,java.awt.Font,int,java.awt.Dimension) -> a
    void draw(java.awt.Component,java.awt.Graphics,java.awt.Rectangle,int) -> a
    void startURL(int,int) -> a
    void endURL$3597fb83(int,int) -> b
    java.lang.String getURL(java.applet.Applet,java.lang.Object,int,int) -> a
    boolean showURL(java.lang.String,java.applet.AppletContext,java.applet.Applet) -> a
    java.lang.String getString() -> a
jclass.util.JCStringTokenizer -> bz:
    int index -> a
    java.lang.String string -> a
    int length -> b
    boolean count -> b
    boolean strip_esc -> a
    char escape_char -> a
    char[] token -> a
    java.lang.String nextToken(char) -> a
    int countTokens(char) -> a
    boolean hasMoreTokens() -> a
jclass.util.JCUtilConverter -> z:
    jclass.util.JCConverter conv -> a
    boolean reportErrors -> a
    java.awt.Color lightBlue -> a
    java.util.Hashtable param_source -> a
    void setParamSource(java.awt.Component,java.lang.String) -> a
    java.lang.String getParam(java.applet.Applet,java.awt.Component,java.lang.String) -> a
    java.lang.String getParam(java.applet.Applet,java.awt.Component,java.lang.String,java.lang.String) -> a
    void parseError(java.lang.String) -> a
    java.lang.String trim(java.lang.Object) -> a
    int toInt(java.lang.String,int) -> a
    boolean toBoolean(java.lang.String,boolean) -> a
    java.lang.String[] toStringList(java.lang.String) -> a
    int[] toIntList(java.lang.String,char,int[]) -> a
    jclass.util.JCVector toVector(java.awt.Component,java.lang.String,char,boolean) -> a
    jclass.util.JCVector toVector(java.awt.Component,java.lang.String,char,boolean,jclass.util.JCVector) -> a
    java.awt.Image toImage(java.awt.Component,java.lang.String) -> a
    boolean waitForImage(java.awt.Component,java.awt.Image) -> a
    java.awt.Image[] toImageList(java.awt.Component,java.lang.String,java.awt.Image[]) -> a
    java.awt.Color toColor(java.lang.String,java.awt.Color) -> a
    java.awt.Color toColor(java.lang.String) -> a
    java.awt.Font toFont(java.lang.String,java.awt.Font) -> a
    java.awt.Font toFont(java.lang.String) -> a
    int toEnum(java.lang.String,java.lang.String,java.lang.String[],int[],int) -> a
    int[] toEnumList(java.lang.String,java.lang.String,java.lang.String[],int[],int[]) -> a
    void checkEnum(int,java.lang.String,int[]) -> a
    java.awt.Insets toInsets(java.lang.String,java.awt.Insets) -> a
    java.lang.String removeEscape(java.lang.String) -> a
jclass.util.JCVector -> ac:
    void addUnique(java.lang.Object) -> a
    void setElementAt(int,java.lang.Object) -> a
    void copyFrom(java.lang.Object[]) -> a
    java.lang.Object getFirst() -> a
    java.lang.Object getLast() -> b
jclass.util.JCqsort -> cU:
    java.util.Vector base -> a
    int direction -> a
    jclass.bwt.JCOutlinerComponent sort_if$679358b1 -> a
    boolean gt$762c8e9e(java.lang.Object,java.lang.Object,jclass.bwt.JCOutlinerComponent) -> a
    boolean lt$762c8e9e(java.lang.Object,java.lang.Object,jclass.bwt.JCOutlinerComponent) -> b
    void qs(java.util.Vector,int) -> a
    void addVect(java.util.Vector,java.util.Vector,java.util.Vector) -> a
jclass.util.NewGridLayout -> a:
    int hgap -> a
    int vgap -> b
    int rows -> c
    int cols -> d
    int[] row_heights -> b
    int[] col_widths -> a
    void getGridSizes(java.awt.Container,boolean) -> a
    int sum(int[]) -> a
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    void reshape$159444be(int,int,java.awt.Component,int,int,int,int) -> a
    void layoutContainer(java.awt.Container) -> layoutContainer
nanoxml.XMLElement -> ba:
    java.util.Hashtable attributes -> a
    java.util.Vector children -> a
    java.lang.String name -> a
    java.lang.String contents -> b
    java.util.Hashtable entities -> b
    boolean ignoreCase -> a
    boolean ignoreWhitespace -> b
    char charReadTooMuch -> a
    java.io.Reader reader -> a
    int parserLineNr -> a
    java.lang.String getStringAttribute(java.lang.String) -> a
    void parseFromReader(java.io.Reader) -> a
    java.lang.String toString() -> toString
    void write(java.io.Writer) -> a
    void writeEncoded(java.io.Writer,java.lang.String) -> a
    void scanIdentifier(java.lang.StringBuffer) -> a
    char scanWhitespace() -> a
    char scanWhitespace(java.lang.StringBuffer) -> a
    void scanString(java.lang.StringBuffer) -> b
    void scanPCData(java.lang.StringBuffer) -> c
    boolean checkCDATA(java.lang.StringBuffer) -> a
    void skipComment() -> a
    void skipSpecialTag(int) -> a
    boolean checkLiteral(java.lang.String) -> a
    char readChar() -> b
    void scanElement(nanoxml.XMLElement) -> a
    void resolveEntity(java.lang.StringBuffer) -> d
    nanoxml.XMLParseException expectedInput(java.lang.String) -> a
    nanoxml.XMLParseException unknownEntity(java.lang.String) -> b
nanoxml.XMLParseException -> F:
thinlet.CustomComponent -> az:
    java.lang.Object component -> a
    thinlet.Thinlet thinlet -> a
    java.awt.Graphics getGraphics() -> getGraphics
    void repaint() -> repaint
thinlet.Thinlet -> thinlet.Thinlet:
    java.awt.Font font -> a
    java.awt.Color c_bg -> a
    java.awt.Color c_text -> b
    java.awt.Color c_textbg -> c
    java.awt.Color c_border -> d
    java.awt.Color c_resizeborder -> e
    java.awt.Color c_disable -> f
    java.awt.Color c_hover -> g
    java.awt.Color c_press -> h
    java.awt.Color c_focus -> i
    java.awt.Color c_select -> j
    java.awt.Color c_ctrl -> k
    int block -> a
    java.awt.Image hgradient -> a
    java.awt.Image vgradient -> b
    java.lang.Thread timer -> a
    long watchdelay -> a
    long watch -> b
    java.lang.String clipboard -> a
    java.util.ResourceBundle langResource -> a
    java.util.ResourceBundle langResourceDefault -> b
    boolean allI18n -> a
    java.lang.String findprefix -> b
    long findtime -> c
    java.lang.Object content -> a
    java.lang.Object mouseinside -> b
    java.lang.Object insidepart -> c
    java.lang.Object mousepressed -> d
    java.lang.Object pressedpart -> e
    int referencex -> b
    int referencey -> c
    int mousex -> d
    int mousey -> e
    java.lang.Object focusowner -> f
    boolean focusinside -> b
    java.lang.Object popupowner -> g
    java.lang.Object tooltipowner -> h
    long WHEEL_MASK -> d
    int MOUSE_WHEEL -> f
    java.lang.reflect.Method wheelrotation -> a
    int evm -> g
    int bufferWidth -> h
    int bufferHeight -> i
    java.awt.Image bufferImage -> c
    java.awt.Graphics offscreen -> a
    java.awt.Image paintImage -> d
    java.awt.Graphics paintGraphics -> b
    java.lang.Integer[] integers -> a
    int vectorsAllocated -> j
    java.util.Hashtable paintMethodHash -> a
    java.lang.Object[] dtd -> a
    java.lang.Class class$java$awt$AWTEvent -> a
    java.lang.Class class$java$awt$event$MouseEvent -> b
    java.lang.Class class$thinlet$Thinlet -> c
    java.lang.Class class$java$lang$Object -> d
    java.lang.Class class$java$awt$Graphics -> e
    java.lang.Class class$java$awt$event$InputEvent -> f
    java.lang.Class class$java$awt$event$KeyEvent -> g
    java.lang.Class class$java$lang$String -> h
    java.lang.Class class$java$awt$Image -> i
    void setFont(java.awt.Font) -> setFont
    java.awt.Font getFont() -> getFont
    void doLayout(java.lang.Object) -> e
    void checkOffset(java.lang.Object) -> f
    char[] getChars(java.lang.Object,java.lang.String,boolean,int,int) -> a
    java.lang.String getAccelerator(java.lang.Object) -> a
    java.lang.Object popupCombo(java.lang.Object) -> b
    java.lang.Object popupMenu(java.lang.Object) -> c
    void popup(java.lang.Object,java.lang.Object,char,int,int,int,int,int) -> a
    void closeCombo(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    void closeup() -> a
    void hideTip() -> b
    void layoutField(java.lang.Object,int,boolean,int) -> a
    boolean layoutScroll(java.lang.Object,int,int,int,int,int,int,boolean,int) -> a
    void scrollToVisible(java.lang.Object,int,int,int,int) -> a
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    java.awt.Dimension getPreferredSize(java.lang.Object) -> a
    int[][] getGrid(java.lang.Object) -> a
    int getSum(int[],int,int,int,boolean) -> a
    java.awt.Dimension getFieldSize(java.lang.Object) -> b
    java.awt.Dimension getSize(java.lang.Object,int,int) -> a
    void update(java.awt.Graphics) -> update
    void resetBuffer() -> c
    void paint(java.awt.Graphics) -> paint
    void doLayout() -> doLayout
    void paint(java.awt.Graphics,int,int,int,int,java.lang.Object,boolean) -> a
    void paintReverse(java.awt.Graphics,int,int,int,int,java.lang.Object,boolean) -> b
    void paintField(java.awt.Graphics,int,int,int,int,java.lang.Object,int,int,boolean,boolean,boolean,int) -> a
    void paintScroll(java.lang.Object,java.lang.String,boolean,boolean,boolean,boolean,java.awt.Graphics,int,int,int,int) -> a
    void paintRect(java.awt.Graphics,int,int,int,int,java.awt.Color,java.awt.Color,boolean,boolean,boolean,boolean,boolean) -> a
    void fill(java.awt.Graphics,int,int,int,int,boolean) -> a
    void paintArrow(java.awt.Graphics,int,int,int,int,char,boolean,boolean,boolean,java.lang.String,boolean,boolean,boolean,boolean,boolean) -> a
    void paintArrow(java.awt.Graphics,int,int,int,int,char) -> a
    void paint(java.lang.Object,int,int,int,int,java.awt.Graphics,boolean,boolean,boolean,boolean,char) -> a
    void paint(java.lang.Object,java.awt.Graphics,int,int,int,int,char,char) -> a
    void paint(java.lang.Object,int,int,int,int,java.awt.Graphics,int,int,int,int,boolean,boolean,boolean,boolean,int,int,int,int,boolean,char,java.lang.String,boolean,boolean) -> a
    void run() -> run
    void setTimer(long) -> a
    boolean isFocusTraversable() -> isFocusTraversable
    void processEvent(java.awt.AWTEvent) -> processEvent
    void checkLocation() -> d
    boolean changeCheck(java.lang.Object,boolean) -> a
    java.lang.Object getMenu(java.lang.Object,java.lang.Object,boolean,boolean) -> a
    boolean processField(java.lang.Object,boolean,boolean,int,int,int,boolean,boolean,boolean) -> a
    java.lang.String filter(java.lang.String,boolean) -> a
    boolean changeField(java.lang.Object,java.lang.String,java.lang.String,int,int,int,int) -> a
    boolean processList(java.lang.Object,boolean,boolean,int,int,boolean) -> a
    java.lang.Object findText(char,java.lang.Object,java.lang.Object,boolean) -> a
    java.lang.Object getListItem(java.lang.Object,java.lang.Object,int,java.lang.Object,boolean) -> a
    void selectAll(java.lang.Object,boolean,boolean) -> a
    void selectItem(java.lang.Object,java.lang.Object,boolean) -> a
    void selectItem(java.lang.Object,java.lang.Object,boolean,boolean) -> a
    void extend(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> a
    void setLead(java.lang.Object,java.lang.Object,java.lang.Object) -> c
    void setInside(java.lang.Object,java.lang.Object,boolean) -> b
    void handleMouseEvent(int,int,int,boolean,boolean,boolean,int,java.lang.Object,java.lang.Object) -> a
    void setReference(java.lang.Object,int,int) -> a
    void select(java.lang.Object,java.lang.Object,boolean,boolean,boolean) -> a
    java.lang.Object getNextItem(java.lang.Object,java.lang.Object,boolean) -> a
    void processField(int,int,int,int,java.lang.Object,boolean,boolean,int) -> a
    int getCaretLocation(java.lang.Object,int,int,boolean,boolean) -> a
    boolean processScroll(int,int,int,java.lang.Object,java.lang.Object) -> a
    boolean processScroll(java.lang.Object,java.lang.Object) -> a
    boolean processSpin(java.lang.Object,java.lang.Object) -> b
    java.lang.String acceptChange(java.lang.String,java.lang.String,java.lang.String,int,int) -> a
    int unformat(java.lang.String,int) -> a
    boolean invoke(java.lang.Object,java.lang.Object,java.lang.String) -> a
    void invokeImpl(java.lang.Object,java.lang.Object) -> b
    boolean findComponent(java.lang.Object,int,int) -> a
    boolean findScroll(java.lang.Object,int,int) -> b
    void findScroll(int,int,int,int,int,boolean) -> a
    void repaint(java.lang.Object,java.lang.Object,java.lang.Object) -> d
    void validate(java.lang.Object) -> g
    void repaint(java.lang.Object) -> a
    void repaint(java.lang.Object,int,int,int,int) -> b
    boolean setFocus(java.lang.Object) -> a
    boolean setNextFocusable(java.lang.Object,boolean) -> b
    boolean setPreviousFocusable(java.lang.Object,boolean) -> c
    java.lang.Object getPreviousFocusable(java.lang.Object,java.lang.Object,boolean,boolean,boolean,boolean) -> a
    boolean isFocusable(java.lang.Object,boolean) -> d
    java.lang.Object create(java.lang.String) -> a
    java.lang.String getClass(java.lang.Object) -> b
    java.lang.Object createImpl(java.lang.String) -> e
    boolean set(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object,java.lang.Object) -> a
    java.lang.Object getParent(java.lang.Object) -> a
    java.lang.Object[] getSelectedItems(java.lang.Object) -> a
    java.lang.Object findNextItem(java.lang.Object,java.lang.String,java.lang.Object) -> a
    void removeAll(java.lang.Object) -> b
    int getItemCountImpl(java.lang.Object,java.lang.String) -> a
    java.lang.Object getItem(java.lang.Object,int) -> a
    int getIndex(java.lang.Object,java.lang.Object) -> a
    void add(java.lang.Object) -> c
    void add(java.lang.Object,java.lang.Object) -> a
    void add(java.lang.Object,java.lang.Object,int) -> a
    java.lang.Integer getInteger(int) -> a
    void insertItem(java.lang.Object,java.lang.Object,java.lang.Object,int) -> a
    void remove(java.lang.Object) -> d
    void removeItemImpl(java.lang.Object,java.lang.Object) -> c
    java.lang.Object find(java.lang.String) -> b
    java.lang.Object find(java.lang.Object,java.lang.String) -> a
    java.lang.Object shallowFind(java.lang.String) -> c
    boolean checkMnemonic(java.lang.Object,boolean,java.lang.Object,int,int) -> a
    boolean hasMnemonic(java.lang.Object,int,int) -> c
    void putProperty(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object parse(java.lang.String) -> d
    java.lang.Object parse(java.lang.String,java.lang.Object) -> a
    java.lang.Object parse(java.io.InputStream) -> a
    java.lang.Object parse(java.io.InputStream,java.lang.Object) -> a
    java.lang.Object parse(java.io.InputStream,boolean,boolean,java.lang.Object) -> a
    void finishParse(java.util.Vector,java.lang.Object,java.lang.Object) -> a
    void addImpl(java.lang.Object,java.lang.Object,int) -> b
    boolean instance(java.lang.Object,java.lang.Object) -> c
    void addAttribute(java.lang.Object,java.lang.String,java.lang.String,java.util.Vector) -> a
    java.lang.Object[] getDefinition(java.lang.Object,java.lang.String,java.lang.String) -> a
    void setString(java.lang.Object,java.lang.String,java.lang.String) -> a
    void setBoolean(java.lang.Object,java.lang.String,boolean) -> a
    boolean getBoolean(java.lang.Object,java.lang.String) -> a
    void setInteger(java.lang.Object,java.lang.String,int) -> a
    void setKeystrokeImpl(java.lang.Object,java.lang.String,java.lang.String) -> b
    java.lang.Object get(java.lang.Object,java.lang.String,java.lang.String) -> a
    java.lang.Object[] getMethod(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object) -> a
    void update(java.lang.Object,java.lang.Object) -> d
    java.lang.String getString(java.lang.Object,java.lang.String,java.lang.String) -> a
    java.awt.Image getIcon(java.lang.Object,java.lang.String,java.awt.Image) -> a
    boolean setBoolean(java.lang.Object,java.lang.String,boolean,boolean) -> a
    boolean getBoolean(java.lang.Object,java.lang.String,boolean) -> a
    boolean setInteger(java.lang.Object,java.lang.String,int,int) -> a
    int getInteger(java.lang.Object,java.lang.String,int) -> a
    void setRectangle(java.lang.Object,java.lang.String,int,int,int,int) -> a
    java.awt.Rectangle getRectangle(java.lang.Object,java.lang.String) -> a
    java.awt.Image getIcon(java.lang.String,boolean) -> a
    java.lang.Class class$(java.lang.String) -> a
